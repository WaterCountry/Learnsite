<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Spire.Presentation</name>
    </assembly>
    <members>
        <member name="T:Spire.Presentation.Charts.AxisPositionType">
            <summary>
            Indicates a position of axis.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.AxisPositionType.Bottom">
            <summary>
            Indicates the axis  displayed at the bottom of the plot area. 
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.AxisPositionType.Left">
            <summary>
            Indicates the axis  displayed at the left of the plot area. 
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.AxisPositionType.Right">
            <summary>
            Indicates the axis  displayed at the right of the plot area. 
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.AxisPositionType.Top">
            <summary>
            Indicates the axis  displayed at the top of the plot area. 
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.PlotAreaWidthOfCalculated">
            <summary>
            Gets the PlotAreaWidth of the chart after calculated.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.PlotVisibleCellsOnly">
            <summary>
            Indicates whether the only visible cells are plotted. False to plot both visible and hidden cells.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.GapDepth">
            <summary>
            Gets or sets the distance, as a percentage of the marker width, between the data series in a 3D chart.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.BubbleScale">
            <summary>
            Gets or sets the BubbleScale.
            The Range of BubbleScale is 0 to 300.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.GapWidth">
            <summary>
            Gets or sets the space between bar or column clusters, as a percentage of the bar or column width.between 0 and 500
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.OverLap">
            <summary>
            Gets or sets how much bars and columns shall overlap on 2-D charts, between -100 and 100.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.GridLine">
            <summary>
            Gets line style properties of a chart.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.Effect">
            <summary>
            Gets effects used for a chart.
            Read-only <see cref="P:Spire.Presentation.Charts.IChart.EffectDag"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.Effect3D">
            <summary>
            Gets 3D format of a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.FormatThreeD"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.DisplayBlanksAs">
            <summary>
            Gets or sets the way to plot blank cells on a chart.
            Read/write <see cref="!:DisplayBlanksAsTypeEx"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.Series">
            <summary>
            Gets chart's Series.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.Categories">
            <summary>
            Gets chart's Categories.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.HasTitle">
            <summary>
            Indicates whether a chart has a visible title.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.IsDataProtect">
            <summary>
            Indicates whether data of chart is protected.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.ChartTitle">
            <summary>
            Gets or sets a chart title
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.ChartData">
            <summary>
            data associated with a chart.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.HasDataTable">
            <summary>
            Indicates whether a chart has a data table.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.HasLegend">
            <summary>
            Indicates whether a chart has a legend.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.ChartLegend">
            <summary>
            Gets or sets a legend for a chart.
            Read/write <see cref="P:Spire.Presentation.Charts.IChart.ChartLegend"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.ChartDataTable">
            <summary>
            Gets a data table of a chart.
            Read-only <see cref="P:Spire.Presentation.Charts.IChart.ChartDataTable"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.ChartStyle">
            <summary>
            Gets or sets the chart style.
            Read/write <see cref="P:Spire.Presentation.Charts.IChart.ChartStyle"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.Type">
            <summary>
            Gets or sets the chart type.
            Read/write <see cref="T:Spire.Presentation.Charts.ChartType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.PlotArea">
            <summary>
            Represents the plot area of a chart.
            Read-only <see cref="T:Spire.Presentation.Charts.ChartPlotArea"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.RotationThreeD">
            <summary>
            Gets a 3D rotation of a chart.
            Read-only <see cref="!:Rotation3DEx"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.BackWall">
            <summary>
            Gets the back wall of a 3D chart.
            Read-only <see cref="T:Spire.Presentation.Charts.ChartWallsOrFloor"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.SideWall">
            <summary>
            Gets the side wall of a 3D chart.
            Read-only <see cref="T:Spire.Presentation.Charts.ChartWallsOrFloor"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.Floor">
            <summary>
            Gets the floor of a 3D chart.
            Read-only <see cref="T:Spire.Presentation.Charts.ChartWallsOrFloor"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.PrimaryCategoryAxis">
            <summary>
             Gets the chart's Category axis
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.SecondaryCategoryAxis">
            <summary>
             Gets the chart's second Category axis.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.PrimaryValueAxis">
            <summary>
             Gets the chart's Value axis.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.SecondaryValueAxis">
            <summary>
             Gets the chart's second Value axis.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.ShapeLocking">
            <summary>
            Gets lock type of shape.
            Read-only <see cref="T:Spire.Presentation.Drawing.GraphicalNodeLocking"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.IsTextBox">
            <summary>
            Indicates whether the shape is TextHolder.
            Read-only <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.Placeholder">
            <summary>
            Gets the placeholder for a shape.
            Read-only <see cref="P:Spire.Presentation.Charts.IChart.Placeholder"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.TagsList">
            <summary>
            Gets the shape's tags collection.
            Read-only <see cref="T:Spire.Presentation.Collections.TagCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.Frame">
            <summary>
            Gets or sets the shape frame's properties.
            Read/write <see cref="T:Spire.Presentation.Drawing.GraphicFrame"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.Line">
            <summary>
            Gets the LineFormat object that contains line formatting properties for a shape.
            Read-only <see cref="P:Spire.Presentation.Charts.IChart.Line"/>.
            Note: can return null for certain types of shapes which don't have line properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.ThreeD">
            <summary>
            Gets the ThreeDFormat object that 3d effect properties for a shape.
            Read-only <see cref="T:Spire.Presentation.Drawing.FormatThreeD"/>.
            Note: can return null for certain types of shapes which don't have 3d properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.EffectDag">
            <summary>
            Gets the EffectFormat object which contains pixel effects applied to a shape.
            Read-only <see cref="P:Spire.Presentation.Charts.IChart.EffectDag"/>
            Note: can return null for certain types of shapes which don't have effect properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.Fill">
            <summary>
            Gets the FillFormat object that contains fill formatting properties for a shape.
            Read-only <see cref="P:Spire.Presentation.Charts.IChart.Fill"/>.
            Note: can return null for certain types of shapes which don't have fill properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.Click">
            <summary>
            Gets or sets the hyperlink defined for mouse click.
            Read/write <see cref="T:Spire.Presentation.ClickHyperlink"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.MouseOver">
            <summary>
            Gets or sets the hyperlink defined for mouse over.
            Read/write <see cref="T:Spire.Presentation.ClickHyperlink"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.IsHidden">
            <summary>
            Indicates whether the shape is hidden.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.Parent">
            <summary>
            Gets the parent slide of a shape.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.ZOrderPosition">
            <summary>
            Gets the position of a shape in the z-order.
            Shapes[0] returns the shape at the back of the z-order,
            and Shapes[Shapes.Count - 1] returns the shape at the front of the z-order.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.Rotation">
            <summary>
            Gets or sets the number of degrees the specified shape is rotated around
            the z-axis. A positive value indicates clockwise rotation; a negative value
            indicates counterclockwise rotation.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.Left">
            <summary>
            Gets or sets the x-coordinate of the upper-left corner of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.Top">
            <summary>
            Gets or sets the y-coordinate of the upper-left corner of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.Width">
            <summary>
            Gets or sets the width of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.Height">
            <summary>
            Gets or sets the height of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.AlternativeText">
            <summary>
            Gets or sets the alternative text associated with a shape.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.Name">
            <summary>
            Gets or sets the name of a shape.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChart.Slide">
            <summary>
            Gets the parent slide of a shape.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Charts.IChart.RemovePlaceholder">
            <summary>
            Removes placeholder from the shape.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Charts.IChart.Dispose">
            <summary>
            Dispose object and free resources.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.Chart">
            <summary>
            Represents an graphic chart on a slide.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Charts.Chart.GetHathStyleByPatternFillType(Spire.Presentation.Drawing.PatternFillType)">
            <summary>
            GetHathStyle By PatternFillType
            </summary>
            <param name="patternFillType">PatternFillType</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Charts.Chart.GetGradientDirectionType_ChartByGradientStyle(Spire.Presentation.Drawing.GradientStyle)">
            <summary>
            GetGradientDirectionType_Chart By GradientStyle
            </summary>
            <param name="gradientStyle"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Charts.Chart.GetLineDashStyleType_ChartByLineDashStyleType(Spire.Presentation.LineDashStyleType)">
            <summary>
            GetLineDashStyleType_ChartByLineDashStyleType
            </summary>
            <param name="lineDashStyleType"></param>
        </member>
        <member name="M:Spire.Presentation.Charts.Chart.GetLineCompoundType_ChartByTextLineStyle(Spire.Presentation.TextLineStyle)">
            <summary>
            GetLineCompoundType_ChartByTextLineStyle
            </summary>
            <param name="textLineStyle"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Charts.Chart.GetLineCapType_ChartByLineCapStyle(Spire.Presentation.LineCapStyle)">
            <summary>
            GetLineCapType_ChartByLineCapStyle
            </summary>
            <param name="lineCapStyle"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Charts.Chart.GetLineJoinType_ChartByLineJoinType(Spire.Presentation.LineJoinType)">
            <summary>
            GetLineJoinType_ChartByLineJoinType
            </summary>
            <param name="lineJoinType"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Charts.Chart.GetArrowheadStyle_ChartByLineEndType(Spire.Presentation.LineEndType)">
            <summary>
            GetArrowheadStyle_ChartByLineEndType
            </summary>
            <param name="lineEndType"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Charts.Chart.GetArrowheadLength_ChartByLineEndLength(Spire.Presentation.LineEndLength)">
            <summary>
            GetArrowheadLength_ChartByLineEndLength
            </summary>
            <param name="lineEndLength"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Charts.Chart.GetArrowheadWidth_ChartByLineEndWidth(Spire.Presentation.LineEndWidth)">
            <summary>
            GetArrowheadWidth_ChartByLineEndWidth
            </summary>
            <param name="lineEndWidth"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.PlotVisibleCellsOnly">
            <summary>
            Indicates whether the only visible cells are plotted. False to plot both visible and hidden cells.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.GapDepth">
            <summary>
            Gets or sets the distance, as a percentage of the marker width, between the data series in a 3D chart.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.BubbleScale">
            <summary>
            Gets or sets the BubbleScale.
            The Range of BubbleScale is 0 to 300
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.GapWidth">
            <summary>
            Gets or sets the space between bar or column clusters, as a percentage of the bar or column width.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.OverLap">
            <summary>
            Gets or sets how much bars and columns shall overlap on 2-D charts, between -100 and 100.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.Fill">
            <summary>
            Gets fill style properties of a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.FillFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.GridLine">
            <summary>
            Gets line style properties of a chart.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.Effect">
            <summary>
            Gets effects used for a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.EffectDag"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.Effect3D">
            <summary>
            Gets 3D format of a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.FormatThreeD"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.DisplayBlanksAs">
            <summary>
            Gets or sets the way to plot blank cells on a chart.
            Read/write <see cref="!:DisplayBlanksAsTypeEx"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.ChartData">
            <summary>
            data associated with a chart.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.Series">
            <summary>
            Gets chart's Series.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.Categories">
            <summary>
            Gets chart's Categories.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.HasTitle">
            <summary>
            Indicates whether a chart has a visible title.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.IsDataProtect">
            <summary>
            Indicates whether data of chart is protected.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.ChartTitle">
            <summary>
            Gets or sets a chart title
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.HasDataTable">
            <summary>
            Indicates whether a chart has a data table.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.HasLegend">
            <summary>
            Indicates whether a chart has a legend.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.ChartLegend">
            <summary>
            Gets or sets a legend for a chart.
            Read/write <see cref="P:Spire.Presentation.Charts.Chart.ChartLegend"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.ChartDataTable">
            <summary>
            Gets a data table of a chart.
            Read-only <see cref="P:Spire.Presentation.Charts.Chart.ChartDataTable"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.ChartStyle">
            <summary>
            Gets or sets the chart style.
            Read/write <see cref="P:Spire.Presentation.Charts.Chart.ChartStyle"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.Type">
            <summary>
            Gets or sets the chart type.
            Read/write <see cref="T:Spire.Presentation.Charts.ChartType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.PlotArea">
            <summary>
            Represents the plot area of a chart.
            Read-only <see cref="T:Spire.Presentation.Charts.ChartPlotArea"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.RotationThreeD">
            <summary>
            Gets a 3D rotation of a chart.
            Read-only <see cref="!:Rotation3DEx"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.BackWall">
            <summary>
            Gets the back wall of a 3D chart.
            Read-only <see cref="T:Spire.Presentation.Charts.ChartWallsOrFloor"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.SideWall">
            <summary>
            Gets the side wall of a 3D chart.
            Read-only <see cref="T:Spire.Presentation.Charts.ChartWallsOrFloor"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.Floor">
            <summary>
            Gets the floor of a 3D chart.
            Read-only <see cref="T:Spire.Presentation.Charts.ChartWallsOrFloor"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.PrimaryCategoryAxis">
            <summary>
             Gets the chart's Category axis
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.SecondaryCategoryAxis">
            <summary>
             Gets the chart's second Category axis.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.PrimaryValueAxis">
            <summary>
             Gets the chart's Value axis.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.Chart.SecondaryValueAxis">
            <summary>
             Gets the chart's second Value axis.
             </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.ChartBaseUnitType">
            <summary>
            Represents the base unit for the category axis
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartBaseUnitType.Days">
            <summary>
            Represents Day base unit.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartBaseUnitType.Months">
            <summary>
            Represents Month base unit.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartBaseUnitType.Years">
            <summary>
            Represents Year base unit. 
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartBaseUnitType.Auto">
            <summary>
            Represents Auto base unit.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.ChartDisplayUnitType">
            <summary>
            Indicates multiplicity of the displayed data.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartDisplayUnitType.None">
            <summary>
            Represents None display Unit
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartDisplayUnitType.Hundreds">
            <summary>
            Display unit is Hundreds.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartDisplayUnitType.Thousands">
            <summary>
            Display unit is Thousands. 
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartDisplayUnitType.TenThousands">
            <summary>
            Display unit is Ten Thousands. 
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartDisplayUnitType.HundredThousands">
            <summary>
            Display unit is Hundred Thousands.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartDisplayUnitType.Millions">
            <summary>
            Display unit is Millions.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartDisplayUnitType.TenMillions">
            <summary>
            Display unit is Ten Millions.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartDisplayUnitType.HundredMillions">
            <summary>
            Display unit is Hundred Millions.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartDisplayUnitType.Billions">
            <summary>
            Display unit is Billions.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartDisplayUnitType.Trillions">
            <summary>
            Display unit is Trillions.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.ChartMarkerType">
            <summary>
             Chart marker types.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartMarkerType.UnDefined">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartMarkerType.Circle">
            <summary>
            Represents the circle style in the custom marker option for Chart lines.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartMarkerType.Dash">
            <summary>
            Represents the dash style in the custom marker option for Chart lines.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartMarkerType.Diamond">
            <summary>
            Represents the diamond style in the custom marker option for Chart lines.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartMarkerType.Dot">
            <summary>
            Represents the dot style in the custom marker option for Chart lines.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartMarkerType.None">
            <summary>
            Specifies nothing style in the custom marker option for Chart lines.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartMarkerType.Picture">
            <summary>
            Represents the picture style in the custom marker option for Chart lines.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartMarkerType.Plus">
            <summary>
            Represents the plus style in the custom marker option for Chart lines.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartMarkerType.Square">
            <summary>
            Represents the square style in the custom marker option for Chart lines.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartMarkerType.Star">
            <summary>
            Represents the star style in the custom marker option for Chart lines.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartMarkerType.Triangle">
            <summary>
            Represents the triangle style in the custom marker option for Chart lines.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartMarkerType.X">
            <summary>
            Specifies an X style in the custom marker option for Chart lines.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.ChartShapeType">
            <summary>
            Represents a shape of chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartShapeType.None">
            <summary>
            Chart shape is not defined.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartShapeType.Box">
            <summary>
            Specifies the chart  display with a box shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartShapeType.Cone">
            <summary>
            Specifies the chart  display as a cone, with the base of the cone on the floor and the point of the cone at the top of the data marker.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartShapeType.ConeToMax">
            <summary>
            Specifies the chart  display with truncated cones such that the point of the cone would be the maximum data value.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartShapeType.Cylinder">
            <summary>
            Specifies the chart  display as a cylinder.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartShapeType.Pyramid">
            <summary>
            Specifies the chart  display as a rectangular pyramid, with the base of the pyramid on the floor and the point of the pyramid at the top of the data marker.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartShapeType.PyramidToMaximum">
            <summary>
            Specifies the chart  display with truncated cones such that the point of the cone would be the maximum data value.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.ChartType">
            <summary>
            Represents a type of chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.ColumnClustered">
            <summary>
            Represents Clustered Column Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.ColumnStacked">
            <summary>
            Represents Stacked Column Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Column100PercentStacked">
            <summary>
            Represents 100% Stacked Column Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Column3DClustered">
            <summary>
            Represents 3D Colustered Column Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Column3DStacked">
            <summary>
            Represents 3D Stacked Column Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Column3D100PercentStacked">
            <summary>
            Represents 3D 100% Stacked Column Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Column3D">
            <summary>
            Represents 3D Column Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.CylinderClustered">
            <summary>
            Represents Cylinder Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.CylinderStacked">
            <summary>
            Represents Stacked Cylinder Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Cylinder100PercentStacked">
            <summary>
            Represents 100% Stacked Cylinder Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Cylinder3DClustered">
            <summary>
            Represents 3D Cylindrical Column Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.ConeClustered">
            <summary>
            Represents Cone Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.ConeStacked">
            <summary>
            Represents Stacked Cone Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Cone100PercentStacked">
            <summary>
            Represents 100% Stacked Cone Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Cone3DClustered">
            <summary>
            Represents 3D Conical Column Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.PyramidClustered">
            <summary>
            Represents Pyramid Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.PyramidStacked">
            <summary>
            Represents Stacked Pyramid Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Pyramid100PercentStacked">
            <summary>
            Represents 100% Stacked Pyramid Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Pyramid3DClustered">
            <summary>
            Represents 3D Pyramid Column Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Line">
            <summary>
            Represents Line Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.LineStacked">
            <summary>
            Represents Stacked Line Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Line100PercentStacked">
            <summary>
            Represents 100% Stacked Line Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.LineMarkers">
            <summary>
            Represents Line Chart with data markers.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.LineMarkersStacked">
            <summary>
            Represents Stacked Line Chart with data markers.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.LineMarkers100PercentStacked">
            <summary>
            Represents 100% Stacked Line Chart with data markers.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Line3D">
            <summary>
            Represents 3D Line Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Pie">
            <summary>
            Represents Pie Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Pie3D">
            <summary>
            Represents 3D Pie Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.PieOfPie">
            <summary>
            Represents Pie of Pie Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.PieExploded">
            <summary>
            Represents Exploded Pie Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Pie3DExploded">
            <summary>
            Represents 3D Exploded Pie Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.PieBar">
            <summary>
            Represents Bar of Pie Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Bar100PercentStacked">
            <summary>
            Represents 100% Stacked Bar Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Bar3DClustered">
            <summary>
            Represents 3D Colustered Bar Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.BarClustered">
            <summary>
            Represents Clustered Bar Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.BarStacked">
            <summary>
            Represents Stacked Bar Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Bar3DStacked">
            <summary>
            Represents 3D Stacked Bar Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Bar3D100PercentStacked">
            <summary>
            Represents 3D 100% Stacked Bar Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.CylinderClusteredHorizontal">
            <summary>
            Represents Cylindrical Bar Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.CylinderStackedHorizontal">
            <summary>
            Represents Stacked Cylindrical Bar Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.CylinderPercentsStackedHorizontal">
            <summary>
            Represents 100% Stacked Cylindrical Bar Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.ConeClusteredHorizontal">
            <summary>
            Represents Conical Bar Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.ConeStackedHorizontal">
            <summary>
            Represents Stacked Conical Bar Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.ConePercentsStackedHorizontal">
            <summary>
            Represents 100% Stacked Conical Bar Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.PyramidClusteredHorizontal">
            <summary>
            Represents Pyramid Bar Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.PyramidStackedHorizontal">
            <summary>
            Represents Stacked Pyramid Bar Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.PyramidPercentsStackedHorizontal">
            <summary>
            Represents 100% Stacked Pyramid Bar Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Area">
            <summary>
            Represents Area Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.AreaStacked">
            <summary>
            Represents Stacked Area Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Area100PercentStacked">
            <summary>
            Represents 100% Stacked Area Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Area3D">
            <summary>
            Represents 3D Area Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Area3DStacked">
            <summary>
            Represents 3D Stacked Area Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Area3D100PercentStacked">
            <summary>
            Represents 3D 100% Stacked Area Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.ScatterMarkers">
            <summary>
            Represents Scatter Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.ScatterSmoothLinesAndMarkers">
            <summary>
            Represents Scatter Chart connected by curves, with data markers.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.ScatterSmoothLines">
            <summary>
            Represents Scatter Chart connected by curves, without data markers.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.ScatterStraightLinesAndMarkers">
            <summary>
            Represents Scatter Chart connected by lines, with data markers.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.ScatterStraightLines">
            <summary>
            Represents Scatter Chart connected by lines, without data markers.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.StockHighLowClose">
            <summary>
            Represents High-Low-Close Stock Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.StockOpenHighLowCase">
            <summary>
            Represents Open-High-Low-Close Stock Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.StockVolumeHighLowCase">
            <summary>
            Represents Volume-High-Low-Close Stock Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.StockVolumeOpenHighLowCase">
            <summary>
            Represents Volume-Open-High-Low-Close Stock Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Surface3D">
            <summary>
            Represents 3D Surface Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Surface3DNoColor">
            <summary>
            Represents Wireframe 3D Surface Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Contour">
            <summary>
            Represents Contour Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.ContourNoColor">
            <summary>
            Represents Wireframe Contour Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Doughnut">
            <summary>
            Represents Doughnut Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.DoughnutExploded">
            <summary>
            Represents Exploded Doughnut Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Bubble">
            <summary>
            Represents Bubble Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Bubble3D">
            <summary>
            Represents 3D Bubble Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.Radar">
            <summary>
            Represents Radar Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.RadarMarkers">
            <summary>
            Represents Radar Chart with data markers.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartType.RadarFilled">
            <summary>
            Represents Filled Radar Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.CrossBetweenType.None">
            <summary>
            Not specified,then the application should choose an appropriate behavior.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.CrossBetweenType.Between">
            <summary>
            Specifies the value axis shall cross the category axis between data markers.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.CrossBetweenType.MidpointOfCategory">
            <summary>
            Specifies the value axis shall cross the category axis at the midpoint of a category. 
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.ChartCrossesType">
            <summary>
            Indicates where axis will cross.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartCrossesType.AxisCrossesAtZero">
            <summary>
            The category axis crosses at the zero point of the value axis (if possible), or the minimum value (if the minimum is greater than zero) or the maximum (if the maximum is less than zero). 
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartCrossesType.Maximum">
            <summary>
            The axis crosses at the maximum value.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartCrossesType.Custom">
            <summary>
            Custom value from property CrossAt
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.DataLabelShapeType">
            <summary>
            Represents a shape type of data label.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.DisplayBlanksAsType">
            <summary>
            Indicates how missing data will be displayed.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.DisplayBlanksAsType.Gap">
            <summary>
            Indicates blank values  left as a gap.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.DisplayBlanksAsType.Span">
            <summary>
            Indicates blank values  spanned with a line.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.DisplayBlanksAsType.Zero">
            <summary>
            Indicates blank values  treated as zero. 
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartGridLine.FillType">
            <summary>
            Gets or sets the fill format type.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartGridLine.FillFormat">
            <summary>
            Gets the fill format of a line.
            Read-only <see cref="T:Spire.Presentation.Drawing.LineFillFormat"/> .
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartGridLine.Gradient">
            <summary>
            Gets the Gradient fill format.
            Read-only <see cref="P:Spire.Presentation.Charts.IChartGridLine.Pattern"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartGridLine.Pattern">
            <summary>
            Gets the pattern fill format.
            Read-only <see cref="P:Spire.Presentation.Charts.IChartGridLine.Pattern"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartGridLine.SolidFillColor">
            <summary>
            Gets the color of a solid fill.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartGridLine.RotateWithShape">
            <summary>
            Indicates whether the fill should be rotated with a shape.
            Read/write <see cref="T:Spire.Presentation.TriState"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartGridLine.Width">
            <summary>
            Gets or sets the width of a line.
            Read/write <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartGridLine.DashStyle">
            <summary>
            Gets or sets the line dash style.
            Read/write <see cref="T:Spire.Presentation.LineDashStyleType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartGridLine.CapStyle">
            <summary>
            Gets or sets the line cap style.
            Read/write <see cref="T:Spire.Presentation.LineCapStyle"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartGridLine.Style">
            <summary>
            Gets or sets the line style.
            Read/write <see cref="T:Spire.Presentation.TextLineStyle"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartGridLine.Alignment">
            <summary>
            Gets or sets the line alignment.
            Read/write <see cref="T:Spire.Presentation.Drawing.PenAlignmentType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartGridLine.JoinStyle">
            <summary>
            Gets or sets the lines join style.
            Read/write <see cref="T:Spire.Presentation.LineJoinType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartGridLine.MiterLimit">
            <summary>
            Gets or sets the miter limit of a line.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartGridLine.LineBeginType">
            <summary>
            Gets or sets the arrowhead style at the beginning of a line.
            Read/write <see cref="T:Spire.Presentation.LineEndType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartGridLine.LineEndType">
            <summary>
            Gets or sets the arrowhead style at the end of a line.
            Read/write <see cref="T:Spire.Presentation.LineEndType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartGridLine.LineBeginWidth">
            <summary>
            Gets or sets the arrowhead width at the beginning of a line.
            Read/write <see cref="T:Spire.Presentation.LineEndWidth"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartGridLine.LineEndWidth">
            <summary>
            Gets or sets the arrowhead width at the end of a line.
            Read/write <see cref="T:Spire.Presentation.LineEndWidth"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartGridLine.LineBeginLength">
            <summary>
            Gets or sets the arrowhead length at the beginning of a line.
            Read/write <see cref="T:Spire.Presentation.LineEndLength"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartGridLine.LineEndLength">
            <summary>
            Gets or sets the arrowhead length at the end of a line.
            Read/write <see cref="T:Spire.Presentation.LineEndLength"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.InteriorColorPattern">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.InteriorColorPattern.Auto">
            <summary>
            Automatically controlled pattern.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.InteriorColorPattern.Checker">
            <summary>
            Checkerboard.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.InteriorColorPattern.CrissCross">
            <summary>
            Criss-crossed lines.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.InteriorColorPattern.Down">
            <summary>
            Dark diagonal lines running from the upper left to the lower right.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.InteriorColorPattern.Gray16">
            <summary>
            16% gray.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.InteriorColorPattern.Gray25">
            <summary>
            25% gray.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.InteriorColorPattern.Gray50">
            <summary>
            50% gray.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.InteriorColorPattern.Gray75">
            <summary>
            75% gray.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.InteriorColorPattern.Gray8">
            <summary>
            8% gray.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.InteriorColorPattern.Grid">
            <summary>
            Grid.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.InteriorColorPattern.Horizontal">
            <summary>
            Dark horizontal lines.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.InteriorColorPattern.LightDown">
            <summary>
            Light diagonal lines running from the upper left to the lower right.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.InteriorColorPattern.LightHorizontal">
            <summary>
            Light horizontal lines.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.InteriorColorPattern.LightUp">
            <summary>
            Light diagonal lines running from the lower left to the upper right.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.InteriorColorPattern.LightVertical">
            <summary>
            Light vertical bars.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.InteriorColorPattern.LinearGradient">
            <summary>
            A linear gradient.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.InteriorColorPattern.None">
            <summary>
            No pattern.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.InteriorColorPattern.RectangularGradient">
            <summary>
            A rectangular gradient.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.InteriorColorPattern.SemiGray75">
            <summary>
            75% dark.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.InteriorColorPattern.Solid">
            <summary>
            A solid color.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.InteriorColorPattern.Up">
            <summary>
            Dark diagonal lines running from the lower left to the upper right.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.InteriorColorPattern.Vertical">
            <summary>
            Dark vertical bars.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.ChartLegendPositionType">
            <summary>
            Indicates a position of legend on a chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartLegendPositionType.None">
            <summary>
            Position is not defined.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartLegendPositionType.Bottom">
            <summary>
            Indicates the legend  display at the bottom of the chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartLegendPositionType.Left">
            <summary>
            Indicates the legend  display at the left of the chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartLegendPositionType.Right">
            <summary>
            Indicates the legend  display at the right of the chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartLegendPositionType.Top">
            <summary>
            Indicates the legend  display at the top of the chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartLegendPositionType.TopRight">
            <summary>
            Indicates the legend  display at the top right of the chart.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.PictureType">
            <summary>
            Indicates mode of bar picture filling.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.PictureType.None">
            <summary>
            Not defined.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.PictureType.Stack">
            <summary>
            The picture is sized to repeat a maximum of 15 times in the longest stacked bar.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.PictureType.StackScale">
            <summary>
            The picture is sized to a specified number of units and repeated the length of the bar.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.PictureType.Stretch">
            <summary>
            The picture is stretched the full length of the stacked bar.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.ChartStyle">
            <summary>
            Represents chart style.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style1">
            <summary>
            Style 1
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style2">
            <summary>
            Style 2
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style3">
            <summary>
            Style 3
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style4">
            <summary>
            Style 4
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style5">
            <summary>
            Style 5
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style6">
            <summary>
            Style 6
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style7">
            <summary>
            Style 7
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style8">
            <summary>
            Style 8
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style9">
            <summary>
            Style 9
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style10">
            <summary>
            Style 10
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style11">
            <summary>
            Style 11
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style12">
            <summary>
            Style 12
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style13">
            <summary>
            Style 13
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style14">
            <summary>
            Style 14
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style15">
            <summary>
            Style 15
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style16">
            <summary>
            Style 16
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style17">
            <summary>
            Style 17
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style18">
            <summary>
            Style 18
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style19">
            <summary>
            Style 19
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style20">
            <summary>
            Style 20
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style21">
            <summary>
            Style 21
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style22">
            <summary>
            Style 22
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style23">
            <summary>
            Style 23
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style24">
            <summary>
            Style 24
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style25">
            <summary>
            Style 25
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style26">
            <summary>
            Style 26
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style27">
            <summary>
            Style 27
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style28">
            <summary>
            Style 28
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style29">
            <summary>
            Style 29
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style30">
            <summary>
            Style 30
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style31">
            <summary>
            Style 31
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style32">
            <summary>
            Style 32
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style33">
            <summary>
            Style 33
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style34">
            <summary>
            Style 34
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style35">
            <summary>
            Style 35
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style36">
            <summary>
            Style 36
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style37">
            <summary>
            Style 37
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style38">
            <summary>
            Style 38
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style39">
            <summary>
            Style 39
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style40">
            <summary>
            Style 40
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style41">
            <summary>
            Style 41
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style42">
            <summary>
            Style 42
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style43">
            <summary>
            Style 43
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style44">
            <summary>
            Style 44
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style45">
            <summary>
            Style 45
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style46">
            <summary>
            Style 46
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style47">
            <summary>
            Style 47
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartStyle.Style48">
            <summary>
            Style 48
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.TickLabelPositionType">
            <summary>
            Represents the position type of tick-mark labels on the specified axis.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.TickLabelPositionType.TickLabelPositionHigh">
            <summary>
            Specifies the axis labels  at the high end of the perpendicular axis. 
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.TickLabelPositionType.TickLabelPositionLow">
            <summary>
            Specifies the axis labels  at the low end of the perpendicular axis. 
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.TickLabelPositionType.TickLabelPositionNextToAxis">
            <summary>
            Specifies the axis labels  next to the axis. 
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.TickLabelPositionType.TickLabelPositionNone">
            <summary>
            Specifies the axis labels are not display. 
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.TickMarkType">
            <summary>
            Represents the tick mark type for the specified axis.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.TickMarkType.TickMarkNone">
            <summary>
            Tick mark type is None. 
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.TickMarkType.TickMarkCross">
            <summary>
            Tick mark type is Cross. 
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.TickMarkType.TickMarkInside">
            <summary>
            Tick mark type is Inside.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.TickMarkType.TickMarkOutside">
            <summary>
            Tick mark type is Outside
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.IsCrossCategories">
            <summary>
             Indicates that the value axis crosses the category axis between categorie
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.CrossAt">
            <summary>
            Represents the point on the value axis where the category axis crosses it.
            </summary>
            <remarks>The number should be a integer when it applies to category axis.
            And the value must be between 1 and 31999.</remarks>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.DisplayUnit">
            <summary>
              Returns or sets the unit label for the specified axis.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.IsAutoMax">
            <summary>
             Automatic maximum selected.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.MaxValue">
            <summary>
             Maximum value on axis.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.MinorUnit">
            <summary>
             Value of minor increment.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.IsAutoMinor">
            <summary>
             Indicates whether the minor unit of the axis is automatically assigned.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.MajorUnit">
            <summary>
             Represents the major units for the axis.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.IsAutoMajor">
            <summary>
            Automatic major selected. 
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.IsAutoMin">
            <summary>
             Automatic minimum selected.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.MinValue">
            <summary>
             Represents the minimum value on the value axis.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.IsLogScale">
            <summary>
             Logarithmic scale.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.LogScale">
            <summary>
             Gets or sets the logarithmic base.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.IsReversed">
            <summary>
             Gets or set plots data points from last to first.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.IsVisible">
            <summary>
             Gets or sets if the axis is visible.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.MajorTickMark">
            <summary>
             Represents major tick marks.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.MinorTickMark">
            <summary>
             Represents the type of minor tick mark for the specified axis.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.TickLabelPosition">
            <summary>
             Represents the position of tick-mark labels on the specified axis.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.MajorUnitScale">
            <summary>
             Represents the major unit scale for the category axis.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.MinorUnitScale">
            <summary>
             Represents the major unit scale for the category axis.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.BaseUnitScale">
            <summary>
             Represents the base unit scale for the category axis.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.MinorGridLines">
            <summary>
             Represents minor gridlines on a chart axis.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.MajorGridTextLines">
            <summary>
             Represents major gridlines on a chart axis.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.ChartEffectFormat">
            <summary>
             Represents format of axis
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.TextProperties">
            <summary>
             Represent text properties of axis
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.Title">
            <summary>
             Gets the axis' title.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.ChartCrossType">
            <summary>
             Represents the CrossType on the specified axis where the other axis crosses.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.Position">
            <summary>
             Represents position of axis
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.HasTitle">
            <summary>
            Indicates whether a axis has a visible title.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.NumberFormat">
            <summary>
            Gets or sets number format string.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.HasDataSource">
            <summary>
            Indicates whether the format is linked source data.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.TextRotationAngle">
            <summary>
            Text rotation angle.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.TickLabelSpacing">
            <summary>
            Represents the number of categories or series between tick-mark labels.
            Property IsAutomaticTickLabelSpacing is false ,this property is valid
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.Parent">
            <summary>
            Reference to Parent object. Read-only.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Charts.IChartAxis.Dispose">
            <summary>
            Dispose object and free resources.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.IsAutomaticTickLabelSpacing">
            <summary>
            Specifies automatic tick label spacing value. If false: use TickLabelSpacing property.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.CrossBetweenType">
            <summary>
            Specifies whether the value axis crosses the category axis between categories or on categories
            Only support value axis set value
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.HasMultiLvlLbl">
            <summary>
            Gets or sets if the label of categoryAxis has multiple levels.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartAxis.IsMergeSameLabel">
            <summary>
            Gets or sets if the first level label of categoryAxis merge the same item.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.ChartAxis">
            <summary>
            Encapsulates the object that represents a chart's axis.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.IsCrossCategories">
            <summary>
             Indicates that the value axis crosses the category axis between categorie
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.CrossAt">
            <summary>
            Represents the point on the value axis where the category axis crosses it.
            </summary>
            <remarks>The number should be a integer when it applies to category axis.
            And the value must be between 1 and 31999.</remarks>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.DisplayUnit">
            <summary>
              Returns or sets the unit label for the specified axis.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.IsAutoMax">
            <summary>
             Automatic maximum selected.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.MaxValue">
            <summary>
             Maximum value on axis.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.MinorUnit">
            <summary>
             Value of minor increment.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.IsAutoMinor">
            <summary>
             Indicates whether the minor unit of the axis is automatically assigned.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.MajorUnit">
            <summary>
             Represents the major units for the axis.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.IsAutoMajor">
            <summary>
            Automatic major selected. 
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.IsAutoMin">
            <summary>
             Automatic minimum selected.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.MinValue">
            <summary>
             Represents the minimum value on the value axis.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.IsLogScale">
            <summary>
             Logarithmic scale.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.LogScale">
            <summary>
             Gets or sets the logarithmic base.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.IsReversed">
            <summary>
             Gets or set plots data points from last to first.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.IsVisible">
            <summary>
             Gets or sets if the axis is visible.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.MajorTickMark">
            <summary>
             Represents major tick marks.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.MinorTickMark">
            <summary>
             Represents the type of minor tick mark for the specified axis.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.TickLabelPosition">
            <summary>
             Represents the position of tick-mark labels on the specified axis.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.MajorUnitScale">
            <summary>
             Represents the major unit scale for the category axis.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.MinorUnitScale">
            <summary>
             Represents the major unit scale for the category axis.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.BaseUnitScale">
            <summary>
             Represents the base unit scale for the category axis.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.MinorGridLines">
            <summary>
             Represents minor gridlines on a chart axis.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.MajorGridTextLines">
            <summary>
             Represents major gridlines on a chart axis.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.ChartEffectFormat">
            <summary>
             Represents format of axis
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.TextProperties">
            <summary>
             Represent text properties of axis
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.Title">
            <summary>
             Gets the axis' title.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.ChartCrossType">
            <summary>
             Represents the CrossType on the specified axis where the other axis crosses.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.Position">
            <summary>
             Represents position of axis
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.HasTitle">
            <summary>
            Indicates whether a axis has a visible title.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.NumberFormat">
            <summary>
            Gets or sets number format string.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.HasDataSource">
            <summary>
            Indicates whether the format is linked source data.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.TextRotationAngle">
            <summary>
            Text rotation angle.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.TickLabelSpacing">
            <summary>
            Represents the number of categories or series between tick-mark labels.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.HasMultiLvlLbl">
            <summary>
            Gets or sets if the label of categoryAxis has multiple levels.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartAxis.IsMergeSameLabel">
            <summary>
            Gets or sets if the first level label of categoryAxis merge the same item.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.CellRange">
            <summary>
            Represents cell range for chart data
            </summary>        
        </member>
        <member name="P:Spire.Presentation.Charts.CellRange.Row">
            <summary>
            Gets the row.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.CellRange.Column">
            <summary>
            Gets the column.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.CellRange.NumberValue">
            <summary>
            Gets or set number value.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.CellRange.Text">
            <summary>
            Gets or set string value.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.CellRange.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:Spire.Presentation.Charts.CellRange.WorksheetName">
            <summary>
            Gets worksheet name.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.CellRange.WorksheetIndex">
            <summary>
            Gets worksheet Index.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Charts.CellRange.Equals(Spire.Presentation.Charts.CellRange)">
            <summary>
            Indicates whether the specified <see cref="T:Spire.Presentation.Charts.CellRange"/> is equal to this instance.
            </summary>
            <param name="cellRange">The data cell.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Charts.CellRange.Equals(System.Object)">
            <summary>
            Indicates whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj"/> parameter is null.
              </exception>
        </member>
        <member name="M:Spire.Presentation.Charts.CellRange.GetHashCode">
            <summary>
            Gets a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Spire.Presentation.Charts.ChartCategory">
            <summary>
            Represents chart categories.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartCategory.DataRange">
            <summary>
            Gets or sets Spire.Xls.Cell object.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.ChartData">
            <summary>
            Chart data.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartData.Item(System.Int32,System.Int32)">
            <summary>
            Get cell range.
            </summary>
            <param name="row"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Charts.ChartData.Clear(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            clear data.
            </summary>
            <param name="row"></param>
            <param name="column"></param>
            <param name="lastRow"></param>
            <param name="lastColumn"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartData.Item(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get cell ranges.
            </summary>
            <param name="row"></param>
            <param name="column"></param>
            <param name="lastRow"></param>
            <param name="lastColumn"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartData.Item(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get cell ranges.
            </summary>
            <param name="worksheetIndex"></param>
            <param name="row"></param>
            <param name="column"></param>
            <param name="lastRow"></param>
            <param name="lastColumn"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartData.Item(System.String)">
            <summary>
            Get cell range.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartData.Item(System.String,System.String)">
            <summary>
            Get cell range.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartData.Item(System.Int32,System.String)">
            <summary>
            Get cell range.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartData.Item(System.Int32,System.String,System.String)">
            <summary>
            Get cell range.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Presentation.Charts.ChartDataPoint">
            <summary>
            Represents a data point on the chart.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Charts.ChartDataPoint.#ctor(Spire.Presentation.Charts.ChartSeriesDataFormat)">
            <summary>
            Initializes a new instance of ChartPoint class.
            </summary>
            <param name="parent">Chart series to which new point will belong.</param>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataPoint.Index">
            <summary>
            This index of collection.
            Read/write <see cref="T:System.Int32"/>.
            </summary> 
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataPoint.IsBubble3D">
            <summary>
            Specifies that the bubbles have a 3-D effect applied to them.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataPoint.Distance">
            <summary>
            Specifies the distance from the center of the pie.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataPoint.InvertIfNegative">
            <summary>
            Indicates whether invert its colors if the value is negative.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataPoint.Fill">
            <summary>
            Gets fill style properties of a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.FillFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataPoint.Line">
            <summary>
            Gets line style properties of a chart.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataPoint.Effect">
            <summary>
            Gets effects used for a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.EffectDag"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataPoint.Effect3D">
            <summary>
            Gets 3D format of a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.FormatThreeD"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataPoint.MarkerFill">
            <summary>
            Represents the formatting properties for marker.
            A chart with Bubble type or Bubble3D type does not support this property.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.ChartSeriesDataFormat">
            <summary>
            Represents a chart series.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartSeriesDataFormat.MarkerFill">
            <summary>
            Gets or sets the marker fill
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartSeriesDataFormat.Distance">
            <summary>
             The distance from the center of the pie chart is expressed as a percentage of the pie.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartSeriesDataFormat.IsSmooth">
            <summary>
            Represents curve smoothing. 
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartSeriesDataFormat.MarkerSize">
            <summary>
            Represents the marker size in a line chart, scatter chart, or radar chart.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartSeriesDataFormat.MarkerStyle">
            <summary>
            Represents the marker style in a line chart, scatter chart, or radar chart.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartSeriesDataFormat.NamedRange">
            <summary>
            Gets collection of cells with series names.
            Read-only <see cref="T:Spire.Presentation.Collections.CellRanges"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartSeriesDataFormat.XValues">
            <summary>
            Gets collection of cells with XValues.
            Read-only <see cref="T:Spire.Presentation.Collections.CellRanges"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartSeriesDataFormat.ErrorBarsXFormat">
            <summary>
            Gets X-ErrorBar of a series.
            Read-only <see cref="T:Spire.Presentation.Drawing.FillFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartSeriesDataFormat.ErrorBarsYFormat">
            <summary>
            Gets Y-ErrorBar of a series.
            Read-only <see cref="T:Spire.Presentation.Drawing.FillFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartSeriesDataFormat.YValues">
            <summary>
            Gets collection of cells with YValues.
            Read-only <see cref="T:Spire.Presentation.Collections.CellRanges"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartSeriesDataFormat.Bubbles">
            <summary>
            Gets collection of cells with bubbleSize.
            Read-only <see cref="T:Spire.Presentation.Collections.CellRanges"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartSeriesDataFormat.Values">
            <summary>
            Gets collection of cells with values.
            Read-only <see cref="T:Spire.Presentation.Collections.CellRanges"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartSeriesDataFormat.Type">
            <summary>
            Get chart type.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartSeriesDataFormat.Fill">
            <summary>
            Gets fill style properties of a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.FillFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartSeriesDataFormat.Line">
            <summary>
            Gets line style properties of a chart.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartSeriesDataFormat.Effect">
            <summary>
            Gets effects used for a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.EffectDag"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartSeriesDataFormat.Effect3D">
            <summary>
            Gets 3D format of a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.FormatThreeD"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartSeriesDataFormat.Index">
            <summary>
            Gets the index of a series.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartSeriesDataFormat.DataLabels">
            <summary>
            Gets the Labels of a series.
            Read-only <see cref="T:Spire.Presentation.Collections.ChartDataLabelCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartSeriesDataFormat.UseSecondAxis">
            <summary>
            Indicates whether this series use second value axis or not.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartSeriesDataFormat.DataPoints">
            <summary>
            Gets the Points Collection of a series.
            Read-only <see cref="T:Spire.Presentation.Collections.ChartDataPointCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartSeriesDataFormat.IsVaryColor">
            <summary>
            Indicates that color of point is varied. 
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartSeriesDataFormat.HasSeriesLines">
            <summary>
            Indicates that chart has series lines.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartSeriesDataFormat.FirstSliceAngleInPieChart">
            <summary>
             Gets or sets the angle of the pie-chart in degrees 
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartSeriesDataFormat.DoughnutHoleSize">
            <summary>
            Returns or sets the size of the hole in a doughnut chart. 
            The hole size is expressed as percentage of the of chart size , between 10 and 90 percent.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartSeriesDataFormat.InvertIfNegative">
            <summary>
            Specifies invert colors if the value is negative
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartSeriesDataFormat.IsHidden">
            <summary>
            Specifies whether the series is hidden.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.ChartDataLabel">
            <summary>
            Represents a series labels.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataLabel.DataLabelSize">
            <summary>
            Size of DataLabel
            </summary>
        </member>
        <member name="M:Spire.Presentation.Charts.ChartDataLabel.#ctor(Spire.Presentation.Charts.ChartSeriesDataFormat)">
            <summary>
            Creates a new instance of DataLabel class.
            </summary>
            <param name="parent">Parent series.</param>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataLabel.IsDelete">
            <summary>
            Gets or sets the label's delete flag.
            True means that data label was removed by user but preserved in file.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataLabel.ID">
            <summary>
            Specifies which data label are applied properties.
            Read/write <see cref="T:System.Int32"/>.
            </summary> 
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataLabel.HasDataSource">
            <summary>
            Gets and sets a reference to the worksheet
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataLabel.NumberFormat">
            <summary>
            Indicates the format string for the DataLabels object.
            Read/write <see cref="T:System.String"/>.
            </summary>  
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataLabel.TextFrame">
            <summary>
            Gets a textframe of this data label.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataLabel.TextProperties">
            <summary>
            Gets text properties.
            Readonly <see cref="T:Spire.Presentation.TextFrameProperties"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataLabel.ChartEffectFormat">
            <summary>
            Indicates the position of the data lable.
            Read/write <see cref="P:Spire.Presentation.Charts.ChartDataLabel.ChartEffectFormat"/>.
            </summary>  
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataLabel.Fill">
            <summary>
            Gets fill style properties of a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.FillFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataLabel.Line">
            <summary>
            Gets line style properties of a chart.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataLabel.Effect">
            <summary>
            Gets effects used for a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.EffectDag"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataLabel.Effect3D">
            <summary>
            Gets 3D format of a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.FormatThreeD"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataLabel.Position">
            <summary>
            Indicates the position of the data lable.
            Read/write <see cref="T:Spire.Presentation.Charts.DataLabelPosition"/>.
            </summary>  
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataLabel.LegendKeyVisible">
            <summary>
            Indicates whethere chart's data label legend key display behavior. 
            Read/write <see cref="T:System.Boolean"/>.
            </summary>  
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataLabel.CategoryNameVisible">
            <summary>
            Indicates whethere chart's data label category name display behavior.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>  
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataLabel.LabelValueVisible">
            <summary>
            Indicates whethere chart's data label percentage value display behavior. 
            Read/write <see cref="T:System.Boolean"/>.
            </summary>  
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataLabel.PercentageVisible">
            <summary>
            Indicates whethere chart's data label percentage value display behavior.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataLabel.SeriesNameVisible">
            <summary>
            Indicates whethere the series name display behavior for the data labels on a chart. 
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataLabel.BubbleSizeVisible">
            <summary>
            Indicates whethere chart's data label bubble size value will display. 
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataLabel.Separator">
            <summary>
            Gets or sets the separator used for the data labels on a chart.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataLabel.X">
            <summary>
            Specifies the x location(left) of the dataLabel as a fraction of the width of the chart.
            The position is relative to the default position.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataLabel.Y">
            <summary>
            Specifies the y location(top) of the dataLabel as a fraction of the height of the chart.
            The position is relative to the default position.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataLabel.DataLabelShapeType">
            <summary>
            Gets or sets shape type of data label.
            Read/write <see cref="P:Spire.Presentation.Charts.ChartDataLabel.DataLabelShapeType"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.ChartRotationThreeD">
            <summary>
            Represents 3D rotation of a chart.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartRotationThreeD.XDegree">
            <summary>
            Gets or sets the rotation degree in the X direction for 3D charts.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartRotationThreeD.YDegree">
            <summary>
            Gets or sets the rotation degree in the Y direction for 3D charts.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartRotationThreeD.IsPerspective">
            <summary>
            Gets or sets the perspective value for 3D charts.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartRotationThreeD.Depth">
            <summary>
            Depth of points relative to width.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.ChartDataTable">
            <summary>
            Represents data table format.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataTable.Fill">
            <summary>
            Gets fill style properties of a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.FillFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataTable.Line">
            <summary>
            Gets line style properties of a chart.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataTable.Effect">
            <summary>
            Gets effects used for a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.EffectDag"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataTable.Text">
            <summary>
            Gets Text used for a DataTable.
            Read-only <see cref="T:Spire.Presentation.Drawing.EffectDag"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataTable.Effect3D">
            <summary>
            Gets 3D format of a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.FormatThreeD"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataTable.HasHorzBorder">
            <summary>
             True if data table has horizontal border.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataTable.HasBorders">
            <summary>
            True if data table has borders.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataTable.HasVertBorder">
            <summary>
            True if data table has vertical border.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartDataTable.ShowLegendKey">
            <summary>
            Indicates that the data label has legend key.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartEffectFormat.Fill">
            <summary>
            Gets fill style properties of a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.FillFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartEffectFormat.Line">
            <summary>
            Gets line style properties of a chart.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartEffectFormat.Effect">
            <summary>
            Gets effects used for a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.EffectDag"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartEffectFormat.Effect3D">
            <summary>
            Gets 3D format of a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.FormatThreeD"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IChartEffectFormat.Parent">
            <summary>
            Reference to Parent object. Read-only.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Charts.IChartEffectFormat.Dispose">
            <summary>
            Dispose object and free resources.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.ChartEffectFormat">
            <summary>
            Represents chart format properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartEffectFormat.Fill">
            <summary>
            Gets fill style properties of a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.FillFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartEffectFormat.Line">
            <summary>
            Gets line style properties of a chart.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartEffectFormat.Effect">
            <summary>
            Gets effects used for a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.EffectDag"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartEffectFormat.Effect3D">
            <summary>
            Gets 3D format of a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.FormatThreeD"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.ChartLegend">
            <summary>
            Represents chart's legend properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartLegend.Width">
            <summary>
            Gets or sets the width of a legend.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartLegend.Height">
            <summary>
            Gets or sets the height of a legend.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartLegend.Left">
            <summary>
            Gets or sets the x coordinate of a legend.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartLegend.Top">
            <summary>
            Gets or sets the y coordinate of a legend.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartLegend.IsOverlay">
            <summary>
            Indicates whether other chart elements allowed to overlap legend.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartLegend.Position">
            <summary>
            Gets or sets the position of the legend on a chart.
            Read/write <see cref="T:Spire.Presentation.Charts.ChartLegendPositionType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartLegend.Fill">
            <summary>
            Gets fill style properties of a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.FillFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartLegend.Line">
            <summary>
            Gets line style properties of a chart.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartLegend.Effect">
            <summary>
            Gets effects used for a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.EffectDag"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartLegend.Effect3D">
            <summary>
            Gets 3D format of a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.FormatThreeD"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartLegend.TextProperties">
            <summary>
            Represent text properties of Legend
            </summary>
        </member>
        <member name="M:Spire.Presentation.Charts.ChartLegend.setEntrys(Spire.Presentation.Collections.CellRanges)">
            <summary>
            set Legend Entry
            </summary>
        </member>
        <member name="M:Spire.Presentation.Charts.ChartLegend.DeleteEntry(System.Int32)">
            <summary>
            Delete legend entry by index
            </summary>
            <param name="index">The legend entry index must be between 0 and LegendCount - 1</param>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartLegend.EntryTextProperties">
            <summary>
            Represent text properties of Legend Entry
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.ChartTextArea">
            <summary>
            Represents chart text area properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartTextArea.Left">
            <summary>
            Gets or sets the x coordinate of a legend in points.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartTextArea.Top">
            <summary>
            Gets or sets the y coordinate of a legend in points.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartTextArea.Width">
            <summary>
            Gets or sets the width of a legend in points.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartTextArea.Height">
            <summary>
            Gets or sets the height of a legend in points.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartTextArea.IsOverlay">
            <summary>
            Indicates whether allowed to overlap title.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartTextArea.TextProperties">
            <summary>
            Gets text frame of a chart title.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartTextArea.ChartEffectFormat">
            <summary>
            Gets the fill, line, effect styles of a title.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartTextArea.Fill">
            <summary>
            Gets fill style properties of a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.FillFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartTextArea.Line">
            <summary>
            Gets line style properties of a chart.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartTextArea.Effect">
            <summary>
            Gets effects used for a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.EffectDag"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartTextArea.Effect3D">
            <summary>
            Gets 3D format of a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.FormatThreeD"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.ChartWallsOrFloor">
            <summary>
            Represents walls on 3d charts.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartWallsOrFloor.Thickness">
            <summary>
            Gets or sets the walls thickness.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartWallsOrFloor.Fill">
            <summary>
            Gets fill style properties of a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.FillFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartWallsOrFloor.Line">
            <summary>
            Gets line style properties of a chart.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartWallsOrFloor.Effect">
            <summary>
            Gets effects used for a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.EffectDag"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartWallsOrFloor.Effect3D">
            <summary>
            Gets 3D format of a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.FormatThreeD"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartWallsOrFloor.PictureType">
            <summary>
            Gets or sets the picture type.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.ChartPlotArea">
            <summary>
            Represents rectangle where chart should be plotted.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartPlotArea.Fill">
            <summary>
            Gets fill style properties of a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.FillFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartPlotArea.Line">
            <summary>
            Gets line style properties of a chart.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartPlotArea.Effect">
            <summary>
            Gets effects used for a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.EffectDag"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartPlotArea.Effect3D">
            <summary>
            Gets 3D format of a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.FormatThreeD"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartPlotArea.Left">
            <summary>
            Gets or sets the upper left corner of plot area bounding box in range from 0 to 1 of chart area.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartPlotArea.Top">
            <summary>
             Gets or sets top corner of plot area bounding box in range from 0 to 1 of chart area.
             Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartPlotArea.Width">
            <summary>
            Get or sets the Width of plot area.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ChartPlotArea.Height">
            <summary>
            Get or sets the Height of plot area.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.ChartDataLabelPosition">
            <summary>
            Indicates position of data labels.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartDataLabelPosition.Bottom">
            <summary>
            Indicates data labels  displayed below the data marker. 
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartDataLabelPosition.BestFit">
            <summary>
            Indicates data labels  displayed in the best position. 
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartDataLabelPosition.Center">
            <summary>
            Indicates data labels  displayed centered on the data marker. 
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartDataLabelPosition.InsideBase">
            <summary>
            Indicates data labels  displayed inside the base of the data marker. 
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartDataLabelPosition.InsideEnd">
            <summary>
            Indicates data labels  displayed inside the end of the data marker. 
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartDataLabelPosition.Left">
            <summary>
            Indicates data labels  displayed to the left of the data marker. 
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartDataLabelPosition.OutsideEnd">
            <summary>
            Indicates data labels  displayed outside the end of the data marker. 
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartDataLabelPosition.Right">
            <summary>
            Indicates data labels  displayed to the right of the data marker. 
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartDataLabelPosition.Top">
            <summary>
            Indicates data labels  displayed above the data marker. 
            </summary>
        </member>
        <member name="F:Spire.Presentation.Charts.ChartDataLabelPosition.None">
            <summary>
            None
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IErrorBarsFormat.ErrorBarvType">
            <summary>
            Gets or sets the ErrorBarValueType.
            Read/write <see cref="!:errorBarType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IErrorBarsFormat.ErrorBarSimType">
            <summary>
            Gets or sets the ErrorBarSimpleType.
            Read/write <see cref="!:errorBarSimpleType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IErrorBarsFormat.ErrorBarVal">
            <summary>
            Gets or sets the value of a ErrorBar.
            Read/write <see cref="!:errorBarVal"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IErrorBarsFormat.MinusVal">
            <summary>
            Gets or sets the Minus value of a ErrorBar.
            Read/write <see cref="P:Spire.Presentation.Charts.IErrorBarsFormat.MinusVal"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IErrorBarsFormat.PlusVal">
            <summary>
            Gets or sets the Plus value of a ErrorBar.
            Read/write <see cref="P:Spire.Presentation.Charts.IErrorBarsFormat.PlusVal"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IErrorBarsFormat.ErrorBarNoEndCap">
            <summary>
            Indicates whether the EndCap is shown.
            Read/write <see cref="!:errorBarNoEndCap"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.IErrorBarsFormat.Line">
            <summary>
            Gets a Line of a ErrorBar.
            Read-only <see cref="P:Spire.Presentation.Charts.IErrorBarsFormat.Line"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Charts.Definition">
            <summary>
            Summary description of ChartDefinition
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ITrendlines.backward">
            <summary>
            Gets or sets the Backward.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ITrendlines.forward">
            <summary>
            Gets or sets the Forward.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ITrendlines.intercept">
            <summary>
            Gets or sets the Intercept.Supported only exp,line or poly type. 
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ITrendlines.displayEquation">
            <summary>
            Gets or sets the DisplayEquation. 
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ITrendlines.displayRSquaredValue">
            <summary>
            Gets or sets the DisplayRSquaredValue. 
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ITrendlines.polynomialTrendlineOrder">
            <summary>
            Gets or sets the Order only for Polynomial Trendline. between 2 and 6. 
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ITrendlines.period">
            <summary>
            Gets or sets the Period only for Moving Average Trendline. between 2 and 255. 
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Charts.ITrendlines.type">
            <summary>
            Gets or sets the TrendlinesType. 
            Read/write <see cref="T:Spire.Presentation.Charts.TrendlinesType"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.AnimationEffectCollection">
            <summary>
            Represent collection of effects.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.AnimationEffectCollection.Count">
            <summary>
            Gets the number of effects in a sequense.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.AnimationEffectCollection.Remove(Spire.Presentation.Drawing.Animation.AnimationEffect)">
            <summary>
            Removes specified effect from a collection.
            </summary>
            <param name="item">Effect to remove.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.AnimationEffectCollection.RemoveAt(System.Int32)">
            <summary>
            Removes an effect from a collection.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Spire.Presentation.Collections.AnimationEffectCollection.Clear">
            <summary>
            Removes all effects from a collection.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.AnimationEffectCollection.Item(System.Int32)">
            <summary>
            Gets an effect at the specified index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.AnimationEffectCollection.GetEnumerator">
            <summary>
            Gets an iterator for a collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.AnimationEffectCollection.AddEffect(Spire.Presentation.IShape,Spire.Presentation.Drawing.Animation.AnimationEffectType)">
            <summary>
            Add new effect to the end of sequence.
            </summary>
            <param name="shape"></param>
            <param name="animationEffectType"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Presentation.Collections.ColumnCollection">
            <summary>
            Represents collection of columns in a table.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.ColumnCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all elements from the collection to the specified array.
            </summary>
            <param name="array">Target array.</param>
            <param name="index">Starting index in the target array.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.ColumnCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ColumnCollection.SyncRoot">
            <summary>
            Gets a synchronization root.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.ColumnList">
            <summary>
            Represents collection of columns in a table.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ColumnList.Item(System.Int32)">
            <summary>
            Gets the column at the specified index.
            Read-only <see cref="T:Spire.Presentation.TableColumn"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ColumnList.Count">
            <summary>
            Gets the number of columns in a collection.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.ColumnList.Insert(System.Int32,Spire.Presentation.TableColumn)">
            <summary>
            Insert column in a table.
            </summary>
            <param name="index"></param>
            <param name="template"></param>
        </member>
        <member name="M:Spire.Presentation.Collections.ColumnList.Add(Spire.Presentation.TableColumn)">
            <summary>
            Insert column in a table.
            </summary>
            <param name="template"></param>
        </member>
        <member name="M:Spire.Presentation.Collections.ColumnList.RemoveAt(System.Int32,System.Boolean)">
            <summary>
            Removes a column at the specified position from a table.
            </summary>
            <param name="firstColumnIndex">Index of a column to delete.</param>
            <param name="withAttachedRows">True to delete also all attached columns.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.ColumnList.GetEnumerator">
            <summary>
            Gets an enumerator for the entire collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the entire collection.</returns>
        </member>
        <member name="T:Spire.Presentation.Collections.CommentAuthorCollection">
            <summary>
            Represents a collection of comment authors.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.CommentAuthorCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all elements from the collection to the specified array.
            </summary>
            <param name="array">Target array.</param>
            <param name="index">Starting index in the target array.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.CommentAuthorCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.CommentAuthorCollection.SyncRoot">
            <summary>
            Gets a synchronization root.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.CommentAuthorList.AddAuthor(System.String,System.String)">
            <summary>
            Add new author at the end of a collection.
            </summary>
            <param name="name">Name of a new author.</param>
            <param name="initials">Initials of a new author.</param>
            <returns>ICommentAuthor</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.CommentAuthorList.FindByName(System.String)">
            <summary>
            Find author in a collection by name.
            </summary>
            <param name="name">Name of an author to find.</param>
            <returns>Authors or null.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.CommentAuthorList.FindByNameAndInitials(System.String,System.String)">
            <summary>
            Find author in a collection by name and initials
            </summary>
            <param name="name">Name of an author to find.</param>
            <param name="initials">Initials of an author to find.</param>
            <returns>Authors or null.</returns>
        </member>
        <member name="T:Spire.Presentation.Collections.CommentCollection">
            <summary>
            Represents a collection of comments of one author.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.CommentCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all elements from the collection to the specified array.
            </summary>
            <param name="array">Target array.</param>
            <param name="index">Starting index in the target array.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.CommentCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.CommentCollection.SyncRoot">
            <summary>
            Gets a synchronization root.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.CommentList">
            <summary>
            Represents a collection of comments of one author.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.CommentList.Count">
            <summary>
            Gets the number of elements actually contained in the collection.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.CommentList.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            Read-only <see cref="T:Spire.Presentation.Comment"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.CommentList.AppendComment(Spire.Presentation.ISlide,System.String,System.Single,System.Single)">
            <summary>
            Adds a new comment added to a slide.
            </summary>
            <param name="slide">Slide object</param>
            <param name="text">Text of new comment.</param>
            <param name="x">x position</param>
            <param name="y">y position</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.CommentList.InsertComment(Spire.Presentation.ISlide,System.Int32,System.String,System.Single,System.Single)">
            <summary>
            Adds a new comment added to a slide.
            </summary>
            <param name="slide">Slide object</param>
            <param name="Index">Text of new comment.</param>
            <param name="text"></param>
            <param name="x">x position</param>
            <param name="y">y position</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.CommentList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index in a collection.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.CommentList.Remove(Spire.Presentation.Comment)">
            <summary>
            Removes the first occurrence of the specified comment in a collection.
            </summary>
            <param name="comment">The comment to remove from a collection.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.CommentList.GetEnumerator">
            <summary>
            Gets an enumerator for the entire collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the entire collection.</returns>
        </member>
        <member name="P:Spire.Presentation.Collections.CommentList.Presentation">
            <summary>
            Gets parent PresentationPptx object for a collection of comments.
            Read-only <see cref="T:Spire.Presentation.PresentationPptx"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.CommonBehaviorCollection">
            <summary>
            Represents collection of behavior effects.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.CommonBehaviorCollection.Count">
            <summary>
            Gets the number of behaviors in a collection.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.CommonBehaviorCollection.Append(Spire.Presentation.Drawing.Animation.CommonBehavior)">
            <summary>
            Add new behavior to a collection.
            </summary>
            <param name="item">Behavior to add.</param>
            <returns>Index of a new behavior in a collection.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.CommonBehaviorCollection.Insert(System.Int32,Spire.Presentation.Drawing.Animation.CommonBehavior)">
            <summary>
            Inserts new behavior to a collection at the specified index.
            </summary>
            <param name="index">Index where new behavior should be inserted.</param>
            <param name="item">Behavior to insert.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.CommonBehaviorCollection.Remove(Spire.Presentation.Drawing.Animation.CommonBehavior)">
            <summary>
            Removes specified behavior from a collection.
            </summary>
            <param name="item">Behavior to remove.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.CommonBehaviorCollection.RemoveAt(System.Int32)">
            <summary>
            Removes behavior from a collection at the specified index.
            </summary>
            <param name="index">Index of a behavior to remove.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.CommonBehaviorCollection.Clear">
            <summary>
            Removes all behaviors from a collection.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.CommonBehaviorCollection.Item(System.Int32)">
            <summary>
            Retirns a behavior at the specified index.
            </summary>
            <param name="index">Index of a behavior to return.</param>
            <returns>Animation begavior.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.CommonBehaviorCollection.GetEnumerator">
            <summary>
            Gets an iterator for the entire collection.
            </summary>
            <returns>Iterator.</returns>
        </member>
        <member name="T:Spire.Presentation.Collections.EffectStyleCollection">
            <summary>
            Represents a collection of effect styles.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.EffectStyleCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all elements from the collection to the specified array.
            </summary>
            <param name="array">Target array.</param>
            <param name="index">Starting index in the target array.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.EffectStyleCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.EffectStyleCollection.SyncRoot">
            <summary>
            Gets a synchronization root.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.EffectStyleList">
            <summary>
            Represents a collection of effect styles.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.EffectStyleList.Count">
            <summary>
            Gets a number of elements in the collection.
            Readonly <see cref="T:System.Int32"/>,
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.EffectStyleList.Item(System.Int32)">
            <summary>
            Gets an element at specified position.
            Readonly <see cref="T:Spire.Presentation.Drawing.EffectStyle"/>.
            </summary>
            <param name="index">Position of element.</param>
            <returns>Element at specified position.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.EffectStyleList.GetEnumerator">
            <summary>
            Gets an enumerator for the entire collection.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.EmbedImageList">
            <summary>
            Summary description for Images.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.EmbedImageList.Count">
            <summary>
            Gets a number of images in the collection.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.EmbedImageList.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            Read-only <see cref="T:Spire.Presentation.Drawing.ImageData"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.EmbedImageList.Append(Spire.Presentation.Drawing.IImageData)">
            <summary>
            Adds a copy of an image from an another presentation.
            </summary>
            <param name="embedImage">Source image.</param>
            <returns>Added image.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.EmbedImageList.Append(System.Drawing.Image)">
            <summary>
            Add an image to a presentation.
            </summary>
            <param name="image">Image to add.</param>
            <returns>Added image.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.EmbedImageList.Append(System.IO.Stream)">
            <summary>
            Add an image to a presentation from stream.
            </summary>
            <param name="stream">Stream to add image from.</param>
            <returns>Added image.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.EmbedImageList.GetEnumerator">
            <summary>
            Gets an enumerator for the entire collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the entire collection.</returns>
        </member>
        <member name="T:Spire.Presentation.Collections.FillFormatCollection">
            <summary>
            Represents a collection of FillFormat objects.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.FillFormatCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all elements from the collection to the specified array.
            </summary>
            <param name="array">Target array.</param>
            <param name="index">Starting index in the target array.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.FillFormatCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.FillFormatCollection.SyncRoot">
            <summary>
            Gets a synchronization root.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.FillFormatList">
            <summary>
            Represents a collection of FillFormat objects.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.FillFormatList.Count">
            <summary>
            Gets the number of elements actually contained in the collection.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.FillFormatList.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            Read-only <see cref="T:Spire.Presentation.Drawing.FillFormat"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.FillFormatList.GetEnumerator">
            <summary>
            Gets an enumerator for the entire collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the entire collection.</returns>
        </member>
        <member name="T:Spire.Presentation.Collections.GradientStopCollection">
            <summary>
            Represnts a collection of gradient stops.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.GradientStopCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all elements from the collection to the specified array.
            </summary>
            <param name="array">Target array.</param>
            <param name="index">Starting index in the target array.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.GradientStopCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.GradientStopCollection.SyncRoot">
            <summary>
            Gets a synchronization root.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.GradientStopDataCollection">
            <summary>
            Represents a collection of GradientStopData objects.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.GradientStopDataCollection.Count">
            <summary>
            Gets the number of gradient stops in a collection.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.GradientStopDataCollection.Item(System.Int32)">
            <summary>
            Gets the gradient stop by index.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.GradientStopDataCollection.GetEnumerator">
            <summary>
            Gets an enumerator for the entire collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the entire collection.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.GradientStopDataCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all elements from the collection to the specified array.
            </summary>
            <param name="array">Target array.</param>
            <param name="index">Starting index in the target array.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.GradientStopDataCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.GradientStopDataCollection.SyncRoot">
            <summary>
            Gets a synchronization root.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.GradientStopList">
            <summary>
            Represnts a collection of gradient stops.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.GradientStopList.Count">
            <summary>
            Gets the number of gradient stops in a collection.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.GradientStopList.Item(System.Int32)">
            <summary>
            Gets the gradient stop by index.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.GradientStopList.Append(System.Single,System.Drawing.Color)">
            <summary>
            Creates the new gradient stop.
            </summary>
            <param name="position">Position of the new gradient stop.</param>
            <param name="color">Color of the new radient stop.</param>
            <returns>Index of the new gradient stop in the collection.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.GradientStopList.Append(System.Single,Spire.Presentation.KnownColors)">
            <summary>
            Creates the new gradient stop and adds it to the collection.
            </summary>
            <param name="position">Position of the new gradient stop.</param>
            <param name="knownColor">Color of the new radient stop.</param>
            <returns>Index of the new gradient stop in the collection.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.GradientStopList.Append(System.Single,Spire.Presentation.Drawing.SchemeColor)">
            <summary>
            Creates the new gradient stop.
            </summary>
            <param name="position">Position of the new gradient stop.</param>
            <param name="schemeColor">Color of the new radient stop.</param>
            <returns>Index of the new gradient stop in the collection.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.GradientStopList.Insert(System.Int32,System.Single,System.Drawing.Color)">
            <summary>
            Creates the new gradient stop.
            </summary>
            <param name="index">Index in the collection where new gradient stop will be inserted.</param>
            <param name="position">Position of the new gradient stop.</param>
            <param name="color">Color of the new radient stop.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.GradientStopList.Insert(System.Int32,System.Single,Spire.Presentation.KnownColors)">
            <summary>
            Creates the new gradient stop.
            </summary>
            <param name="index">Index in the collection where new gradient stop will be inserted.</param>
            <param name="position">Position of the new gradient stop.</param>
            <param name="knownColor">Color of the new radient stop.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.GradientStopList.Insert(System.Int32,System.Single,Spire.Presentation.Drawing.SchemeColor)">
            <summary>
            Creates the new gradient stop.
            </summary>
            <param name="index">Index in the collection where new gradient stop will be inserted.</param>
            <param name="position">Position of the new gradient stop.</param>
            <param name="schemeColor">Color of the new radient stop.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.GradientStopList.RemoveAt(System.Int32)">
            <summary>
            Removes a gradient stop at the specified index.
            </summary>
            <param name="index">Index of a gradient stop that should be deleted.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.GradientStopList.RemoveAll">
            <summary>
            Removes all gradient stops from a collection.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.GradientStopList.GetEnumerator">
            <summary>
            Gets an enumerator for the entire collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the entire collection.</returns>
        </member>
        <member name="P:Spire.Presentation.Collections.GradientStopList.Spire#Presentation#IActiveSlide#Slide">
            <summary>
            Gets the parent slide for a gradient stops collection.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.GradientStopList.Spire#Presentation#IActivePresentation#Presentation">
            <summary>
            Gets the parent presentation of a gradient stops collection.
            Read-only <see cref="T:Spire.Presentation.PresentationPptx"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.ImageCollection">
            <summary>
            Represents collection of Image.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.ImageCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all elements from the collection to the specified array.
            </summary>
            <param name="array">Target array.</param>
            <param name="index">Starting index in the target array.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.ImageCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ImageCollection.SyncRoot">
            <summary>
            Gets a synchronization root.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.IMasterLayouts.Count">
            <summary>
            Gets the number of layout slides in a collection.
            </summary>
        </member>
        <!-- 对于成员“M:Spire.Presentation.Collections.IMasterLayouts.RemoveMasterLayout(System.Int32)”忽略有格式错误的 XML 注释 -->
        <member name="T:Spire.Presentation.Collections.LegendEntryCollection">
            <summary>
            Represents collection of  <see cref="T:Spire.Presentation.Charts.ChartSeriesDataFormat"/>
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.LegendEntryCollection.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            </summary>
            <returns>
            The element at the specified index.
              </returns>
        </member>
        <member name="M:Spire.Presentation.Collections.LegendEntryCollection.IndexOf(Spire.Presentation.Charts.LegendEntry)">
            <summary>
            Searches for the specified <see cref="T:Spire.Presentation.Charts.ChartSeriesDataFormat"/> and returns the zero-based index of the first occurrence within the entire Collection
            </summary>
            <param name="value">Chart series value.</param>
            <returns>The zero-based index of the first occurrence of value within the entire CollectionBase, if found; otherwise, -1.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.LegendEntryCollection.Remove(Spire.Presentation.Charts.LegendEntry)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentException">The value parameter was not found in the collection.</exception>
        </member>
        <member name="T:Spire.Presentation.Collections.TextLineFormatCollection">
            <summary>
            Represents a collection of LineFormat objects.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.TextLineFormatCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all elements from the collection to the specified array.
            </summary>
            <param name="array">Target array.</param>
            <param name="index">Starting index in the target array.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.TextLineFormatCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.TextLineFormatCollection.SyncRoot">
            <summary>
            Gets a synchronization root.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.TextLineFormatList">
            <summary>
            Represents a collection of LineFormat objects.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.TextLineFormatList.Count">
            <summary>
            Gets the number of elements actually contained in the collection.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.TextLineFormatList.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.TextLineFormatList.GetEnumerator">
            <summary>
            Gets the enumerator for an entire collection.
            </summary>
            <returns><see cref="T:System.Collections.IEnumerator"/> for an entire collection.</returns>
        </member>
        <member name="T:Spire.Presentation.Collections.LineStyleCollection">
            <summary>
            Represents the collection of line styles.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.LineStyleCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all elements from the collection to the specified array.
            </summary>
            <param name="array">Target array.</param>
            <param name="index">Starting index in the target array.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.LineStyleCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.LineStyleCollection.SyncRoot">
            <summary>
            Gets a synchronization root.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.LineStyleList">
            <summary>
            Represents the collection of line styles.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.LineStyleList.Count">
            <summary>
            Gets the number of elements actually contained in the collection.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.LineStyleList.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            Read-only <see cref="T:Spire.Presentation.TextLineFormat"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.LineStyleList.GetEnumerator">
            <summary>
            Gets an enumerator for the entire collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the entire collection.</returns>
        </member>
        <member name="T:Spire.Presentation.Collections.MasterSlideCollection">
            <summary>
            Represents a collection of master slides.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.MasterSlideCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all elements from the collection to the specified array.
            </summary>
            <param name="array">Target array.</param>
            <param name="index">Starting index in the target array.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.MasterSlideCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.MasterSlideCollection.SyncRoot">
            <summary>
            Gets a synchronization root.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.MasterSlideList">
             <summary>
             Represents a collection of master slides.
             </summary>
            
        </member>
        <member name="P:Spire.Presentation.Collections.MasterSlideList.Count">
            <summary>
            Gets the number of elements actually contained in the collection.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.MasterSlideList.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            Read-only <see cref="T:Spire.Presentation.MasterSlide"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.MasterSlideList.Remove(Spire.Presentation.IMasterSlide)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="value">The master slide to remove from the collection.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.MasterSlideList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.MasterSlideList.CleanupDesigns">
            <summary>
            Removes unused master slides.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.MasterSlideList.AppendSlide(Spire.Presentation.IMasterSlide)">
            <summary>
            Adds a new master slide to the end of the collection.
            </summary>
            <returns>Index of new slide.</returns>
        </member>
        <!-- 对于成员“M:Spire.Presentation.Collections.MasterSlideList.InsertSlide(System.Int32,Spire.Presentation.IMasterSlide)”忽略有格式错误的 XML 注释 -->
        <member name="M:Spire.Presentation.Collections.MasterSlideList.GetEnumerator">
            <summary>
            Gets an enumerator for the entire collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the entire collection.</returns>
        </member>
        <member name="T:Spire.Presentation.Collections.OleObjectCollection">
            <summary>
            A collection of OleObject controls.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.OleObjectCollection.Count">
            <summary>
            Gets a number of objects in the collection.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.OleObjectCollection.Remove(Spire.Presentation.OleObject)">
            <summary>
            Removes an OleObject control from the collection.
            </summary>
            <param name="item">A control to remove.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.OleObjectCollection.RemoveAt(System.Int32)">
            <summary>
            Removes an OleObject control stored at specified position from the collection.
            </summary>
            <param name="index">Index of a control to remove.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.OleObjectCollection.Clear">
            <summary>
            Removes all controls from the collection.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.OleObjectCollection.Item(System.Int32)">
            <summary>
            Gets a control at the specified position.
            </summary>
            <param name="index">Index of a control.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.OleObjectCollection.GetEnumerator">
            <summary>
            Gets an enumerator for the entire collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.OleObjectCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire collection to the specified array.
            </summary>
            <param name="array">Target array</param>
            <param name="index">Index in the target array.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.OleObjectCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.OleObjectCollection.SyncRoot">
            <summary>
            Gets a synchronization root.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.OleObjectProperties">
            <summary>
            A collection of OleObject properties.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.OleObjectProperties.Add(System.String,System.String)">
            <summary>
            Adds a property to the collection.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The alue of the property.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.OleObjectProperties.Remove(System.String)">
            <summary>
            Removes a property with the specified name.
            </summary>
            <param name="name">The name of property to remove.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.OleObjectProperties.Item(System.String)">
            <summary>
            Gets or sets property.
            </summary>
            <param name="name">Name of property.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.OleObjectProperties.Clear">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.OleObjectProperties.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all property-value pairs to the specified array.
            </summary>
            <param name="array">The target array.</param>
            <param name="index">Index in the target array.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.OleObjectProperties.Count">
            <summary>
            Gets a number of properties in the collection.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.OleObjectProperties.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.OleObjectProperties.SyncRoot">
            <summary>
            Gets a synchronization root.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.OleObjectProperties.GetEnumerator">
            <summary>
            Gets an enumerator for entire collection.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spire.Presentation.Collections.ParagraphCollection">
            <summary>
            Represents a collection of a paragraphs.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.ParagraphCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all elements from the collection to the specified array.
            </summary>
            <param name="array">Target array.</param>
            <param name="index">Starting index in the target array.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.ParagraphCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ParagraphCollection.SyncRoot">
            <summary>
            Gets a synchronization root.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.ParagraphList">
            <summary>
            Represents a collection of a paragraphs.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.ParagraphList.AddFromHtml(System.String)">
            <summary>
            Adds text from specified html string.
            </summary>
            <param name="htmlText">HTML text.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.ParagraphList.Count">
            <summary>
            Gets the number of elements actually contained in the collection.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ParagraphList.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.ParagraphList.Append(Spire.Presentation.TextParagraph)">
            <summary>
            Adds a Paragraph to the end of collection.
            </summary>
            <param name="value">The Paragraph </param>
            <returns>The index at which the Paragraph has been added.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ParagraphList.Append(Spire.Presentation.Collections.ParagraphCollection)">
            <summary>
            Adds a content of Paragraphs to the end of collection.
            </summary>
            <param name="value">The ParagraphCollection </param>
            <returns>The index at which the Paragraph has been added or -1 if there are nothing to add.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ParagraphList.Insert(System.Int32,Spire.Presentation.TextParagraph)">
            <summary>
            Inserts a Paragraph into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which Paragraph should be inserted.</param>
            <param name="value">The Paragraph to insert.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.ParagraphList.Insert(System.Int32,Spire.Presentation.Collections.ParagraphCollection)">
            <summary>
            Inserts a content of ParagraphExCollection into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which paragraphs should be inserted.</param>
            <param name="value">The paragraphs to insert.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.ParagraphList.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.ParagraphList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.ParagraphList.GetEnumerator">
            <summary>
            Gets an enumerator for the entire collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the entire collection.</returns>
        </member>
        <member name="P:Spire.Presentation.Collections.ParagraphList.Spire#Presentation#IActiveSlide#Slide">
            <summary>
            Gets the parent slide of a paragraphs collection.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ParagraphList.Spire#Presentation#IActivePresentation#Presentation">
            <summary>
            Gets the parent presentation of a paragraphs collection.
            Read-only <see cref="T:Spire.Presentation.PresentationPptx"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.RowList">
            <summary>
            Represents a collection of rows.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.RowList.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.RowList.Append(Spire.Presentation.TableRow)">
            <summary>
            Add new row.
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.RowList.Insert(System.Int32,Spire.Presentation.TableRow)">
            <summary>
            Insert a row.
            </summary>
            <param name="index"></param>
            <param name="row"></param>
        </member>
        <member name="M:Spire.Presentation.Collections.RowList.RemoveAt(System.Int32,System.Boolean)">
            <summary>
            Removes a row at the specified position from a table.
            </summary>
            <param name="firstRowIndex">Index of a row to delete.</param>
            <param name="withAttachedRows">True to delete also all attached rows.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.RowList.Count">
            <summary>
            Gets the number of elements actually contained in the collection.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.RowList.GetEnumerator">
            <summary>
            Gets an enumerator for the entire collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the entire collection.</returns>
        </member>
        <member name="T:Spire.Presentation.Collections.ShapeList">
            <summary>
            Represents a collection of a shapes.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ShapeList.Count">
            <summary>
            Gets the number of elements actually contained in the collection.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ShapeList.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            Read-only <see cref="T:Spire.Presentation.Shape"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.SaveAsImage(System.Int32)">
            <summary>
            Save shapes to Image.
            </summary>
            <param name="shapeIndex">Represents the shape index in the indicated slide's shapes collection</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.SaveAsEMF(System.Int32,System.String)">
            <summary>
            Save shapes to EMF.
            </summary>
            <param name="shapeIndex">Represents the shape index in the indicated slide's shapes collection</param>
            <param name="filePahth">Represents the save path</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.SaveAsEMF(System.Int32)">
            <summary>
            Save shapes to EMF.
            </summary>
            <param name="shapeIndex">Represents the shape index in the indicated slide's shapes collection</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.CreateChart(Spire.Presentation.Charts.IChart,System.Drawing.RectangleF,System.Int32)">
            <summary>
            clone basechart and insert into shapes
            </summary>
            <param name="baseChart">source chart</param>
            <param name="rectangle">Rectangle should be inserted</param>
            <param name="nIndex">index should be inserted.-1 mean append at the last.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.AppendChart(Spire.Presentation.Charts.ChartType,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Adds a new chart.
            </summary>
            <param name="type">Chart type</param>
            <param name="rectangle">rectangle should be inserted.</param>
            <param name="init">init chart use default data .</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.AppendChart(Spire.Presentation.Charts.ChartType,System.Drawing.RectangleF)">
            <summary>
            Adds a new chart.init chart use default data
            </summary>
            <param name="type">Chart type</param>
            <param name="rectangle">rectangle should be inserted.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.InsertChart(System.Int32,Spire.Presentation.Charts.ChartType,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Add a new chart to collection.
            </summary>
            <param name="index">Index should be inserted.</param>
            <param name="type">Chart type</param>
            <param name="rectangle">Rectangle should inserted.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.AppendOleObject(System.String,System.IO.MemoryStream,System.Drawing.RectangleF)">
            <summary>
            Add a new OleObject to Collection
            </summary>
            <param name="objectName">Object Name</param>
            <param name="objectData">Object Data</param>
            <param name="rectangle">Rectangle should be inserted.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.AppendOleObject(System.String,System.Byte[],System.Drawing.RectangleF)">
            <summary>
            Add a new OleObject to Collection
            </summary>
            <param name="objectName">Object Name</param>
            <param name="objectData">Object Data</param>
            <param name="rectangle">Rectangle should be inserted.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.InsertOleObject(System.Int32,System.String,System.IO.MemoryStream,System.Drawing.RectangleF)">
            <summary>
            Insert a object to collection.
            </summary>
            <param name="index">Index should be inserted.</param>
            <param name="objectName">Object name</param>
            <param name="objectData">Object data</param>
            <param name="rectangle">Rectangle should be inserted</param>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.InsertOleObject(System.Int32,System.String,System.Byte[],System.Drawing.RectangleF)">
            <summary>
            Insert a object to collection.
            </summary>
            <param name="index">Index should be inserted.</param>
            <param name="objectName">Object name</param>
            <param name="objectData">Object data</param>
            <param name="rectangle">Rectangle should be inserted</param>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.AppendVideoMedia(System.String,System.Drawing.RectangleF)">
            <summary>
            Add a new video to collection. innerLink mode
            </summary>
            <param name="filePath"></param>
            <param name="rectangle"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.AppendVideoMedia(System.String,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Add a new video to collection.
            </summary>
            <param name="filePath"></param>
            <param name="rectangle"></param>
            <param name="isInnerLink"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.InsertVideoMedia(System.Int32,System.String,System.Drawing.RectangleF)">
            <summary>
            Adds a new video to collection.
            </summary>
            <param name="index">Index should be inserted.</param>
            <param name="filePath">Video file path.</param>
            <param name="rectangle">Rectangle should be inserted.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.AppendAudioMedia(System.Drawing.RectangleF)">
            <summary>
            Adds an Audio from CD
            </summary>
            <param name="rectangle">Rectangle should be inserted</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.InsertAudioMedia(System.Int32,System.Drawing.RectangleF)">
            <summary>
            Insert an Audio From CD.
            </summary>
            <param name="index">Index should be inserted.</param>
            <param name="rectangle">Rectangle should be inserted.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.AppendAudioMedia(System.String,System.Single,System.Single,System.Boolean)">
            <summary>
            Adds a new audio to list.
            </summary>
            <param name="filePath">Audio file name</param>
            <param name="X">X Position</param>
            <param name="Y">Y Position</param>
            <param name="isEmbed">Whether embed or not</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.AppendAudioMedia(System.String,System.Single,System.Single)">
            <summary>
            Adds a new audio to list.
            </summary>
            <param name="filePath">Audio file name</param>
            <param name="X">X Position</param>
            <param name="Y">Y Position</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.AppendAudioMedia(System.String,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Adds a new audio to list.
            </summary>
            <param name="filePath">Audio file name</param>
            <param name="rectangle">Rectangle should be inserted</param>
            <param name="isEmbed">Whether embed or not,default not</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.AppendAudioMedia(System.String,System.Drawing.RectangleF)">
            <summary>
            Adds a new audio to list.
            </summary>
            <param name="filePath">Audio file name</param>
            <param name="rectangle">Rectangle should be inserted</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.InsertAudioMedia(System.Int32,System.String,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Insert an audio to collection.
            </summary>
            <param name="filePath">Audio file path</param>
            <param name="rectangle">Rectangle should be inserted.</param>
            <param name="isEmbed">Whether embed or not,default not</param>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.InsertAudioMedia(System.Int32,System.String,System.Drawing.RectangleF)">
            <summary>
            Insert an audio to collection.
            </summary>
            <param name="filePath">Audio file path</param>
            <param name="rectangle">Rectangle should be inserted.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.InsertAudioMedia(System.Int32,System.String,System.Single,System.Single,System.Boolean)">
            <summary>
            Insert an audio to collection.
            </summary>
            <param name="filePath">Audio file path</param>
            <param name="X">X Position</param>
            <param name="Y">Y Position</param>
            <param name="isEmbed">Whether embed or not,default not</param>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.InsertAudioMedia(System.Int32,System.String,System.Single,System.Single)">
            <summary>
            Insert an audio to collection.
            </summary>
            <param name="filePath">Audio file path</param>
            <param name="X">X Position</param>
            <param name="Y">Y Position</param>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.AppendAudioMedia(System.IO.Stream,System.Drawing.RectangleF)">
            <summary>
            Adds a new audio to list.
            </summary>
            <param name="stream">Audio stream</param>
            <param name="rectangle">Rectangle should be inserted</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.AppendAudioMedia(System.IO.Stream,System.Single,System.Single)">
            <summary>
            Adds a new audio to list.
            </summary>
            <param name="stream">Audio stream</param>
            <param name="rectangle">Rectangle should be inserted</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.InsertAudioMedia(System.Int32,System.IO.Stream,System.Drawing.RectangleF)">
            <summary>
            Insert an audio to collection.
            </summary>
            <param name="index">Index to inserted.</param>
            <param name="stream">Audio stream</param>
            <param name="rectangle">Rectangle should be inserted.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.IndexOf(Spire.Presentation.IShape)">
            <summary>
            Gets the index of the first occurrence of a shape in the collection.
            </summary>
            <param name="shape">Shape to found.</param>
            <returns>Index of the first occurrence of shape </returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.ToArray">
            <summary>
            Creates and returns an array with all shapse in it.
            </summary>
            <returns>Array of <see cref="T:Spire.Presentation.Shape"/></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.ToArray(System.Int32,System.Int32)">
            <summary>
            Creates and returns an array with all shapes from the specified range in it.
            <param name="startIndex">An index of a first shape to return.</param>
            <param name="count">A number of shapes to return.</param>
            </summary>
            <returns>Array of <see cref="T:Spire.Presentation.Shape"/></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.ZOrder(System.Int32,Spire.Presentation.IShape)">
            <summary>
            Change a shape's zorder.
            </summary>
            <param name="index">Target index.</param>
            <param name="shape">Shape to move.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.ZOrder(System.Int32,Spire.Presentation.IShape[])">
            <summary>
            Change shapes's zorder.
            </summary>
            <param name="index">target index.</param>
            <param name="shapes">shapes to move.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.AppendShape(Spire.Presentation.ShapeType,System.Drawing.RectangleF)">
            <summary>
            Adds a new shape to list.
            </summary>
            <param name="shapeType">Shape type</param>
            <param name="rectangle">Rectangle should be inserted.</param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.InsertShape(System.Int32,Spire.Presentation.ShapeType,System.Drawing.RectangleF)">
            <summary>
            Insert a new shape to collection.
            </summary>
            <param name="index">Index should be inserted.</param>
            <param name="shapeType">Shape type</param>
            <param name="rectangle">Rectangle shoud be inserted.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.AppendShapeConnector(Spire.Presentation.ShapeType,System.Drawing.RectangleF)">
            <summary>
            Add new shape connector to collection.
            </summary>
            <param name="shapeType">Shape type</param>
            <param name="rectangle">Rectangle should be inserted.</param>
            <returns>Created shape</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.InsertShapeConnector(System.Int32,Spire.Presentation.ShapeType,System.Drawing.RectangleF)">
            <summary>
            Insert a new shape connector to collection.
            </summary>
            <param name="index">Index should be inserted.</param>
            <param name="shapeType">Shape type.</param>
            <param name="rectangle">Rectangle should be inserted.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.AppendEmbedImage(Spire.Presentation.ShapeType,Spire.Presentation.Drawing.IImageData,System.Drawing.RectangleF)">
            <summary>
            Add a new embed image to List.
            </summary>
            <param name="shapeType"></param>
            <param name="embedImage"></param>
            <param name="rectangle"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.AppendEmbedImage(Spire.Presentation.ShapeType,System.String,System.Drawing.RectangleF)">
            <summary>
            Add a new embed image to List.
            </summary>
            <param name="shapeType"></param>
            <param name="embedImage"></param>
            <param name="rectangle"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.AppendEmbedImage(Spire.Presentation.ShapeType,System.IO.Stream,System.Drawing.RectangleF)">
            <summary>
            Add a new embed image to List.
            </summary>
            <param name="shapeType"></param>
            <param name="embedImage"></param>
            <param name="rectangle"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.InsertEmbedImage(System.Int32,Spire.Presentation.ShapeType,System.Drawing.RectangleF,Spire.Presentation.Drawing.IImageData)">
            <summary>
            Insert a embed image to collection.
            </summary>
            <param name="index">Index should be inserted.</param>
            <param name="shapeType">Shape type.</param>
            <param name="rectangle">Rectangle should be inserted.</param>
            <param name="embedImage">Embed image object.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.AddShape(Spire.Presentation.Shape)">
            <summary>
            Add a shape to collection from slide.
            </summary>
            <param name="index">shape should be inserted.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.AppendTable(System.Single,System.Single,System.Double[],System.Double[])">
            <summary>
            Add a new table to collection.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="widths"></param>
            <param name="heights"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.InsertTable(System.Int32,System.Single,System.Single,System.Double[],System.Double[])">
            <summary>
            Adds a new Table to collection.
            </summary>
            <param name="index">Index should be inserted.</param>
            <param name="x">Left side of shape.</param>
            <param name="y">Top side of shape.</param>
            <param name="columnWidths">Widths of columns in the table.</param>
            <param name="rowHeights">Heights of rows in the table.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.Remove(Spire.Presentation.IShape)">
            <summary>
            Removes the first occurrence of a specific shape from the collection.
            </summary>
            <param name="shape">The shape to remove from the collection.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.GetEnumerator">
            <summary>
            Gets an enumerator for the entire collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the entire collection.</returns>
        </member>
        <member name="P:Spire.Presentation.Collections.ShapeList.Parent">
            <summary>
            Gets parent object for a Shapes collection.
            Read-only <see cref="T:System.Object"/>. See also <see cref="T:Spire.Presentation.IActivePresentation"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeList.AddFromHtml(System.String)">
            <summary>
            Adds text from specified html string.
            </summary>
            <param name="htmlText">HTML text.</param>
        </member>
        <member name="T:Spire.Presentation.Collections.SlideCollection">
            <summary>
            Represents a collection of a slides.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.SlideCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all elements from the collection to the specified array.
            </summary>
            <param name="array">Target array.</param>
            <param name="index">Starting index in the target array.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.SlideCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.SlideCollection.SyncRoot">
            <summary>
            Gets a synchronization root.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.TableRowCollection">
            <summary>
            Represents a collection of rows.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.TableRowCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all elements from the collection to the specified array.
            </summary>
            <param name="array">Target array.</param>
            <param name="index">Starting index in the target array.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.TableRowCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.TableRowCollection.SyncRoot">
            <summary>
            Gets a synchronization root.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.TabStopCollection">
            <summary>
            Represents a collection of tabs.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.TabStopCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all elements from the collection to the specified array.
            </summary>
            <param name="array">Target array.</param>
            <param name="index">Starting index in the target array.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.TabStopCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.TabStopCollection.SyncRoot">
            <summary>
            Gets a synchronization root.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.TabStopList">
            <summary>
            Represents a collection of tabs.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.TabStopList.Count">
            <summary>
            Gets the number of elements actually contained in the collection.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.TabStopList.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            Read-only <see cref="T:Spire.Presentation.TabStop"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.TabStopList.Append(Spire.Presentation.TabStop)">
            <summary>
            Adds a Tab to the collection.
            </summary>
            <param name="value">The Tab object to be added at the end of the collection.</param>
            <returns>The index at which the tab was added.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.TabStopList.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.TabStopList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.TabStopList.Equals(System.Object)">
            <summary>
            Indicates whether two Tabs instances are equal.
            </summary>
            <param name="obj">The Tabs to compare with the current Tabs.</param>
            <returns><b>true</b> if the specified Tabs is equal to the current Tabs; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.TabStopList.GetHashCode">
            <summary>
            Gets hash code for this object.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.TabStopList.GetEnumerator">
            <summary>
            Gets an enumerator for the entire collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the entire collection.</returns>
        </member>
        <member name="T:Spire.Presentation.Collections.TagCollection">
            <summary>
            Represents the collection of tags (user defined pairs of strings)
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.TagCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all elements from the collection into the specified array.
            </summary>
            <param name="array">Array to fill.</param>
            <param name="index">Starting position in target array.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.TagCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.TagCollection.SyncRoot">
            <summary>
            Gets a synchronization root.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.TagCollection.GetEnumerator">
            <summary>
            Gets an enumerator for the entire collection.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.TagList">
            <summary>
            Represents the collection of tags
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.TagList.Count">
            <summary>
            Gets a number of tags in the collectoin.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.TagList.Append(System.String,System.String)">
            <summary>
            Adds a new tag to collection.
            </summary>
            <param name="name">The name of the tag.</param>
            <param name="value">The value of the tag.</param>
            <returns>The index of the added tag.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.TagList.Remove(System.String)">
            <summary>
            Removes the tag with a specified name from the collection.
            </summary>
            <param name="name">The name of tag to remove.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.TagList.IndexOfKey(System.String)">
            <summary>
            Gets the zero-based index of the specified key in the collection.
            </summary>
            <param name="name">The name to locate in the collection.</param>
            <returns>The zero-based index of key, if key is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.TagList.Contains(System.String)">
            <summary>
            Indicates whether the collection contains a specific name.
            </summary>
            <param name="name">The key to locate.</param>
            <returns>True if the collection contains an tag with the specified key; otherwise, false.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.TagList.RemoveAt(System.Int32)">
            <summary>
            Removes the tag at the specified index.
            </summary>
            <param name="index">The zero-based index of the tag to remove.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.TagList.Clear">
            <summary>
            Removes all tags from the collection.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.TagList.GetByInd(System.Int32)">
            <summary>
            Gets value of a tag at the specified index.
            </summary>
            <param name="index">Index of a tag to return.</param>
            <returns>Value of a tag.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.TagList.GetKey(System.Int32)">
            <summary>
            Gets key of a tag at the specified index.
            </summary>
            <param name="index">Index of a tag to return.</param>
            <returns>Key of a tag.</returns>
        </member>
        <member name="P:Spire.Presentation.Collections.TagList.Item(System.String)">
            <summary>
            Gets or sets a key and a value pair of a tag.
            </summary>
            <param name="name">Key of a tag.</param>
            <returns>Value of a tag.</returns>
        </member>
        <member name="T:Spire.Presentation.Collections.TextAnimationCollection">
            <summary>
            Represent collection of text animations.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.TextAnimationCollection.Count">
            <summary>
            Gets a number of elements in the collection.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.TextAnimationCollection.Add(Spire.Presentation.Drawing.Animation.TextAnimation)">
            <summary>
            Adds element to the collection.
            </summary>
            <param name="textAnim"><see cref="T:Spire.Presentation.Drawing.Animation.TextAnimation"/> to add.</param>
            <returns>index of added element.</returns>
        </member>
        <member name="P:Spire.Presentation.Collections.TextAnimationCollection.Item(System.Int32)">
            <summary>
            Gets element by index.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.TextAnimationCollection.Item(Spire.Presentation.IShape)">
            <summary>
            Gets all elements 
            </summary>
            <param name="shape"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.TextAnimationCollection.GetEnumerator">
            <summary>
            Gets an iterator for a collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.TextAnimationCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all elements from the collection into the specified array.
            </summary>
            <param name="array">Array to fill.</param>
            <param name="index">Starting position in target array.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.TextAnimationCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.TextAnimationCollection.SyncRoot">
            <summary>
            Gets a synchronization root.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.TextRangeCollection">
            <summary>
            Represents a collection of a range.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.TextRangeCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all elements from the collection to the specified array.
            </summary>
            <param name="array">Target array.</param>
            <param name="index">Starting index in the target array.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.TextRangeCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.TextRangeCollection.SyncRoot">
            <summary>
            Gets a synchronization root.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.TextRangeList">
            <summary>
            Represents a collection.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.TextRangeList.Count">
            <summary>
            Gets the number of elements actually contained in the collection.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.TextRangeList.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.TextRangeList.Append(Spire.Presentation.TextRange)">
            <summary>
            Adds a text range to the end of collection.
            </summary>
            <param name="value">The text range </param>
            <returns>The index at which the text range has been added.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.TextRangeList.Insert(System.Int32,Spire.Presentation.TextRange)">
            <summary>
            Inserts a Portion into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which Portion should be inserted.</param>
            <param name="value">The Portion to insert.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.TextRangeList.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.TextRangeList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.TextRangeList.GetEnumerator">
            <summary>
            Gets an enumerator for the entire collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the entire collection.</returns>
        </member>
        <member name="T:Spire.Presentation.Collections.ShapeAdjustmentList">
            <summary>
            Reprasents a collection of shape's adjustments.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ShapeAdjustmentList.Count">
            <summary>
            Return a number of adjustments.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ShapeAdjustmentList.Item(System.Int32)">
            <summary>
            Gets adjustment by index.
            </summary>
            <param name="index">adjustment's index.</param>
            <returns><see cref="T:Spire.Presentation.ShapeAdjust"/>.</returns>
        </member>
        <member name="T:Spire.Presentation.Collections.ShapeAdjustCollection">
            <summary>
            Reprasents a collection of shape's adjustments.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeAdjustCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all elements from the collection to the specified array.
            </summary>
            <param name="array">Target array.</param>
            <param name="index">Starting index in the target array.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.ShapeAdjustCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ShapeAdjustCollection.SyncRoot">
            <summary>
            Gets a synchronization root.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.ShapeAdjustCollection.GetEnumerator">
            <summary>
            Gets an enumerator for the entire collection.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.ChartCategoryCollection">
            <summary>
            Represents collection of <see cref="T:Spire.Presentation.Charts.ChartCategory"/>
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ChartCategoryCollection.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            </summary>
            <returns>
            The element at the specified index.
            </returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ChartCategoryCollection.Append(Spire.Presentation.Charts.CellRange)">
            <summary>
            Creates new chart category from <see cref="T:Spire.Presentation.Charts.CellRange"/> and adds it to the collection.
            </summary>
            <param name="cellRange">Cell to create chart category.</param>       
            <returns>Index of new chart category.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ChartCategoryCollection.Append(System.String)">
            <summary>
            Append a string value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ChartCategoryCollection.Append(System.Single)">
            <summary>
            Append a numberic value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ChartCategoryCollection.Append(System.Object)">
            <summary>
             Creates new <see cref="T:Spire.Presentation.Charts.ChartCategory"/> from value and adds it to the collection.
            </summary>
            <param name="value">The value.</param>
            <returns>Index of a new added <see cref="T:Spire.Presentation.Charts.CellRange"/>.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ChartCategoryCollection.Append(Spire.Presentation.Charts.ChartCategory)">
            <summary>
            Adds <see cref="T:Spire.Presentation.Charts.ChartCategory"/> object to collection
            </summary>
            <param name="category">Category to add.</param>       
            <returns>Index of added chart category.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ChartCategoryCollection.IndexOf(Spire.Presentation.Charts.ChartCategory)">
            <summary>
            Searches for the specified <see cref="T:Spire.Presentation.Charts.ChartCategory"/> and returns the zero-based index of the first occurrence within the entire Collection
            </summary>
            <param name="value">Chart category.</param>
            <returns>The zero-based index of the first occurrence of value within the entire CollectionBase, if found; otherwise, -1.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ChartCategoryCollection.Remove(Spire.Presentation.Charts.ChartCategory)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentException">The value parameter was not found in the collection.</exception>
        </member>
        <member name="T:Spire.Presentation.Collections.CellRanges">
            <summary>
            Represents collection of a cells with data.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.CellRanges.Item(System.Int32)">
            <summary>
            Gets a cell by index.
            </summary>
            <param name="index">Index of a cell.</param>
            <returns>Cell with data.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.CellRanges.Add(Spire.Presentation.Charts.CellRange)">
            <summary>
            Add new cell to the collection.
            </summary>
            <param name="cellRange">New cell to add.</param>
            <returns>Index of a new added <see cref="T:Spire.Presentation.Charts.CellRange"/>.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.CellRanges.Add(System.Object)">
            <summary>
            Creates <see cref="T:Spire.Presentation.Charts.CellRange"/> from specified value and adds it to the collection.
            </summary>
            <param name="value">The value.</param>
            <returns>Index of a new added <see cref="T:Spire.Presentation.Charts.CellRange"/>.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.CellRanges.RemoveAt(System.Int32)">
            <summary>
            Removes a cell from the collection by index.
            </summary>
            <param name="index">Index of a cell to remove.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.CellRanges.GetEnumerator">
            <summary>
            Gets an enumerator for the entire collection.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.CellRanges.Count">
            <summary>
            Gets the count of cells in collection.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.ChartDataLabelCollection">
            <summary>
            Represents a series labels.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.ChartDataLabelCollection.#ctor(Spire.Presentation.Charts.ChartSeriesDataFormat)">
            <summary>
            Creates a new instance of DataLabels class.
            </summary>
            <param name="parent">Parent series.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.ChartDataLabelCollection.NumberFormat">
            <summary>
            Represents the format string for the DataLabels object.
            Read/write <see cref="T:System.String"/>.
            </summary>  
        </member>
        <member name="P:Spire.Presentation.Collections.ChartDataLabelCollection.HasDataSource">
            <summary>
            Gets and sets a reference to the worksheet
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ChartDataLabelCollection.IsDelete">
            <summary>
            Gets or sets delete flag.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ChartDataLabelCollection.TextProperties">
            <summary>
            Gets a text properties of this data labels
            Readonly <see cref="T:Spire.Presentation.TextFrameProperties"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ChartDataLabelCollection.Fill">
            <summary>
            Gets fill style properties of a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.FillFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ChartDataLabelCollection.Line">
            <summary>
            Gets line style properties of a chart.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ChartDataLabelCollection.Effect">
            <summary>
            Gets effects used for a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.EffectDag"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ChartDataLabelCollection.Effect3D">
            <summary>
            Gets 3D format of a chart.
            Read-only <see cref="T:Spire.Presentation.Drawing.FormatThreeD"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ChartDataLabelCollection.Position">
            <summary>
            Represents the position of the data lable.
            Read/write <see cref="T:Spire.Presentation.Charts.DataLabelPosition"/>.
            </summary>  
        </member>
        <member name="P:Spire.Presentation.Collections.ChartDataLabelCollection.LegendKeyVisible">
            <summary>
            Indicates chart's data label legend key display behavior. 
            Read/write <see cref="T:System.Boolean"/>.
            </summary>  
        </member>
        <member name="P:Spire.Presentation.Collections.ChartDataLabelCollection.LeaderLinesVisible">
            <summary>
            Indicates chart's data label leader line display behavior. 
            Read/write <see cref="T:System.Boolean"/>.
            </summary>  
        </member>
        <member name="P:Spire.Presentation.Collections.ChartDataLabelCollection.CategoryNameVisible">
            <summary>
            Indicates chart's data label category name display behavior.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>  
        </member>
        <member name="P:Spire.Presentation.Collections.ChartDataLabelCollection.LabelValueVisible">
            <summary>
            Indicates chart's data label value display behavior.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>        
        </member>
        <member name="P:Spire.Presentation.Collections.ChartDataLabelCollection.PercentValueVisible">
            <summary>
            Indicates chart's data label percentage value display behavior.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ChartDataLabelCollection.SeriesNameVisible">
            <summary>
            Gets or sets a Boolean to indicate the series name display behavior for the data labels on a chart. 
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ChartDataLabelCollection.BubbleSizeVisible">
            <summary>
            Indicates chart's data label bubble size value display behavior.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ChartDataLabelCollection.Separator">
            <summary>
            Sets or returns a Variant representing the separator used for the data labels on a chart.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ChartDataLabelCollection.Count">
            <summary>
            Gets the number of elements actually contained in the collection.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ChartDataLabelCollection.DataLabelShapeType">
            <summary>
            Gets or sets shape type of data labels.
            Read/write <see cref="P:Spire.Presentation.Collections.ChartDataLabelCollection.DataLabelShapeType"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.ChartDataLabelCollection.Add(Spire.Presentation.Charts.ChartDataLabel)">
            <summary>
            Adds the new DataLabel at the end of a collection.
            </summary>
            <param name="value">The DataLabel </param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ChartDataLabelCollection.Remove(Spire.Presentation.Charts.ChartDataLabel)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="value">The DataLabel to remove from the collection.</param>
        </member>
        <member name="M:Spire.Presentation.Collections.ChartDataLabelCollection.IndexOf(Spire.Presentation.Charts.ChartDataLabel)">
            <summary>
            Gets an index of the specified DataLabel in the collection.
            </summary>
            <param name="value">DataLabel to find.</param>
            <returns>Index of a DataLabel or -1 if DataLabel not from this collection.</returns>
        </member>
        <member name="P:Spire.Presentation.Collections.ChartDataLabelCollection.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            Read-only <see cref="T:Spire.Presentation.Charts.ChartDataLabel"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.ChartDataLabelCollection.GetEnumerator">
            <summary>
            Gets an enumerator for the entire collection.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.ChartDataPointCollection">
            <summary>
            Represents a collection of ChartPoint.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ChartDataPointCollection.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            Read-only <see cref="T:Spire.Presentation.Charts.ChartDataPoint"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.ChartDataPointCollection.Add(Spire.Presentation.Charts.ChartDataPoint)">
            <summary>
            Adds the new DataLabel at the end of a collection.
            </summary>
            <param name="value">The DataLabel </param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ChartDataPointCollection.GetEnumerator">
            <summary>
            Gets an enumerator for the entire collection.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ChartDataPointCollection.Count">
            <summary>
            Gets the number of elements actually contained in the collection.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.ChartSeriesFormatCollection">
            <summary>
            Represents collection of  <see cref="T:Spire.Presentation.Charts.ChartSeriesDataFormat"/>
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ChartSeriesFormatCollection.SeriesLabel">
            <summary>
            Gets or sets chart series value.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ChartSeriesFormatCollection.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            </summary>
            <returns>
            The element at the specified index.
              </returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ChartSeriesFormatCollection.Append(System.String)">
            <summary>
            Append a string value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ChartSeriesFormatCollection.Append(System.Single)">
            <summary>
            Append a numberic value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ChartSeriesFormatCollection.Append(System.Object)">
            <summary>
            Append a value;
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ChartSeriesFormatCollection.Append(Spire.Presentation.Charts.ChartSeriesDataFormat)">
            <summary>
            Adds the specified series.
            </summary>
            <param name="seriesDataFormat">The series.</param>
            <returns>Index of added series</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ChartSeriesFormatCollection.IndexOf(Spire.Presentation.Charts.ChartSeriesDataFormat)">
            <summary>
            Searches for the specified <see cref="T:Spire.Presentation.Charts.ChartSeriesDataFormat"/> and returns the zero-based index of the first occurrence within the entire Collection
            </summary>
            <param name="value">Chart series value.</param>
            <returns>The zero-based index of the first occurrence of value within the entire CollectionBase, if found; otherwise, -1.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.ChartSeriesFormatCollection.Remove(Spire.Presentation.Charts.ChartSeriesDataFormat)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentException">The value parameter was not found in the collection.</exception>
        </member>
        <member name="T:Spire.Presentation.Collections.EffectDataCollection">
            <summary>
            Represents a readonly collection of EffectData objects.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.EffectDataCollection.Count">
            <summary>
            Gets the number of image effects in a collection.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.EffectDataCollection.GetEnumerator">
            <summary>
            Gets an enumerator for the entire collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the entire collection.</returns>
        </member>
        <member name="P:Spire.Presentation.Collections.EffectDataCollection.Item(System.Int32)">
            <summary>
            Gets element by index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Collections.EffectDataCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all elements from the collection into the specified array.
            </summary>
            <param name="array">Array to fill.</param>
            <param name="index">Starting position in target array.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.EffectDataCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.EffectDataCollection.SyncRoot">
            <summary>
            Gets a synchronization root.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.ImageTransformEffectCollection">
            <summary>
            Represents a collection of effects apllied to an image.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.ImageTransformEffectCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all elements from the collection to the specified array.
            </summary>
            <param name="array">Target array.</param>
            <param name="index">Starting index in the target array.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.ImageTransformEffectCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.ImageTransformEffectCollection.SyncRoot">
            <summary>
            Gets a synchronization root.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.SlideColorSchemeCollection">
            <summary>
            Represents a collection of additional color schemes.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.SlideColorSchemeCollection.Count">
            <summary>
            Gets a number of elements int the collection.
            Readonly <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.SlideColorSchemeCollection.Item(System.Int32)">
            <summary>
            Gets an color scheme by index.
            Readonly <see cref="T:Spire.Presentation.SlideColorScheme"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.SlideColorSchemeCollection.GetEnumerator">
            <summary>
            Gets an enumerator, which can be used to iterate through the collection.
            </summary>
            <returns>Enumeraton <see cref="T:System.Collections.IEnumerator"/>.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.SlideColorSchemeCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all elements of the collection to the specified array.
            </summary>
            <param name="array">Target array.</param>
            <param name="index">Starting index in the array.</param>
        </member>
        <member name="P:Spire.Presentation.Collections.SlideColorSchemeCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the ArrayList is synchronized (thread safe).
            Readonly <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.SlideColorSchemeCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Collections.VideoCollection">
            <summary>
            Represents a collection of Video objects.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.VideoCollection.Count">
            <summary>
            Gets a number of video files in the collection.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Collections.VideoCollection.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            Read-only <see cref="T:Spire.Presentation.VideoData"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Collections.VideoCollection.Append(Spire.Presentation.VideoData)">
            <summary>
            Adds a copy of an video file from an another presentation.
            </summary>
            <param name="videoData">Source video.</param>
            <returns>Added video.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.VideoCollection.Append(System.IO.Stream)">
            <summary>
            Creates and adds a video to a presentation from stream.
            </summary>
            <param name="stream">Stream to add video file from.</param>
            <returns>Added <see cref="T:Spire.Presentation.VideoData"/>.</returns>
        </member>
        <member name="M:Spire.Presentation.Collections.VideoCollection.Append(System.Byte[])">
            <summary>
            Creates and adds a video to a presentation from byte array.
            </summary>
            <param name="videoData">Video bytes.</param>
            <returns>Added video.</returns>
        </member>
        <member name="M:Spire.Presentation.Converter.Export.PptxExporter.AddDocumentProperties(Spire.Presentation.DocumentProperty)">
            <summary>
            Adds the document properties.
            </summary>
            <param name="docProperties">The doc properties.</param>
        </member>
        <member name="T:Spire.Presentation.Converter.Pptxml.DataModels.a_CT_ColorMRUElementData">
            <summary>
            Parser for XML elements of the complex type "CT_ColorMRU"
            defined in "dml-baseTypes.xsd" schema file.
            </summary>    
        </member>
        <member name="M:Spire.Presentation.Converter.Pptxml.DataModels.a_CT_ColorMRUElementData.#ctor(System.Xml.XmlReader)">
            <summary>
            This constructor initializes instance from XmlReader.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Converter.Pptxml.DataModels.a_CT_ColorMRUElementData.#ctor">
            <summary>
            This constructor initializes instance with defaults.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.a_CT_ColorMRUElementData.ColorList">
            <summary>
            Choice number "0" (numbering from 0) in definition of the "EG_ColorChoice"
            in "dml-baseTypes.xsd" schema file.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Converter.Pptxml.DataModels.PresentationPropertiesElementData">
            <summary>
            Parser for XML element "presentationPr"
            defined in "pml-presentationProperties.xsd" schema file.
            Description from schema: Presentation-wide Properties
            </summary>    
        </member>
        <member name="M:Spire.Presentation.Converter.Pptxml.DataModels.PresentationPropertiesElementData.#ctor(System.Xml.XmlReader)">
            <summary>
            This constructor initializes instance from XmlReader.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Converter.Pptxml.DataModels.PresentationPropertiesElementData.#ctor">
            <summary>
            This constructor initializes instance with defaults.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.PresentationPropertiesElementData.HtmlPubPr">
            <summary>
            HTML Publishing Properties
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.PresentationPropertiesElementData.WebPr">
            <summary>
            Web Properties
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.PresentationPropertiesElementData.PrnPr">
            <summary>
            Printing Properties
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.PresentationPropertiesElementData.ShowPr">
            <summary>
            Presentation-wide Show Properties
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.PresentationPropertiesElementData.ClrMru">
            <summary>
            Color MRU
            </summary>
        </member>
        <member name="T:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_CustomShowIdElementData">
            <summary>
            Parser for XML elements of the complex type "CT_CustomShowId"
            defined in "pml-baseTypes.xsd" schema file.
            </summary>    
        </member>
        <member name="M:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_CustomShowIdElementData.#ctor(System.Xml.XmlReader)">
            <summary>
            This constructor initializes instance from XmlReader.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_CustomShowIdElementData.#ctor">
            <summary>
            This constructor initializes instance with defaults.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_CustomShowIdElementData.Id">
            <summary>
            Custom Show Identifier
            </summary>
        </member>
        <member name="T:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_HtmlPublishPropertiesElementData">
            <summary>
            Parser for XML elements of the complex type "CT_HtmlPublishProperties"
            defined in "pml-presentationProperties.xsd" schema file.
            </summary>    
        </member>
        <member name="M:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_HtmlPublishPropertiesElementData.#ctor(System.Xml.XmlReader)">
            <summary>
            This constructor initializes instance from XmlReader.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_HtmlPublishPropertiesElementData.#ctor">
            <summary>
            This constructor initializes instance with defaults.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_HtmlPublishPropertiesElementData.ShowSpeakerNotes">
            <summary>
            Show Speaker Notes
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_HtmlPublishPropertiesElementData.PubBrowser">
            <summary>
            Browser Support Target
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_HtmlPublishPropertiesElementData.Title">
            <summary>
            HTML Output Title
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_HtmlPublishPropertiesElementData.R_Id">
            <summary>
            Publish Path
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_HtmlPublishPropertiesElementData.EG_SlideListChoice">
            <summary>
            Choice number "0" (numbering from 0) in definition of the "EG_SlideListChoice"
            in "pml-baseTypes.xsd" schema file.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_PrintPropertiesElementData">
            <summary>
            Parser for XML elements of the complex type "CT_PrintProperties"
            defined in "pml-presentationProperties.xsd" schema file.
            </summary>    
        </member>
        <member name="M:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_PrintPropertiesElementData.#ctor(System.Xml.XmlReader)">
            <summary>
            This constructor initializes instance from XmlReader.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_PrintPropertiesElementData.#ctor">
            <summary>
            This constructor initializes instance with defaults.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_PrintPropertiesElementData.PrnWhat">
            <summary>
            Print Output
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_PrintPropertiesElementData.ClrMode">
            <summary>
            Print Color Mode
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_PrintPropertiesElementData.HiddenSlides">
            <summary>
            Print Hidden Slides
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_PrintPropertiesElementData.ScaleToFitPaper">
            <summary>
            Scale to Fit Paper when printing
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_PrintPropertiesElementData.FrameSlides">
            <summary>
            Frame slides when printing
            </summary>
        </member>
        <member name="T:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_ShowInfoBrowseElementData">
            <summary>
            Parser for XML elements of the complex type "CT_ShowInfoBrowse"
            defined in "pml-presentationProperties.xsd" schema file.
            </summary>    
        </member>
        <member name="M:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_ShowInfoBrowseElementData.#ctor(System.Xml.XmlReader)">
            <summary>
            This constructor initializes instance from XmlReader.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_ShowInfoBrowseElementData.#ctor">
            <summary>
            This constructor initializes instance with defaults.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_ShowInfoBrowseElementData.ShowScrollbar">
            <summary>
            Show Scroll Bar in Window
            </summary>
        </member>
        <member name="T:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_ShowInfoKioskElementData">
            <summary>
            Parser for XML elements of the complex type "CT_ShowInfoKiosk"
            defined in "pml-presentationProperties.xsd" schema file.
            </summary>    
        </member>
        <member name="M:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_ShowInfoKioskElementData.#ctor(System.Xml.XmlReader)">
            <summary>
            This constructor initializes instance from XmlReader.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_ShowInfoKioskElementData.#ctor">
            <summary>
            This constructor initializes instance with defaults.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_ShowInfoKioskElementData.Restart">
            <summary>
            Restart Show
            </summary>
        </member>
        <member name="T:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_ShowPropertiesElementData">
            <summary>
            Parser for XML elements of the complex type "CT_ShowProperties"
            defined in "pml-presentationProperties.xsd" schema file.
            </summary>    
        </member>
        <member name="M:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_ShowPropertiesElementData.#ctor(System.Xml.XmlReader)">
            <summary>
            This constructor initializes instance from XmlReader.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_ShowPropertiesElementData.#ctor">
            <summary>
            This constructor initializes instance with defaults.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_ShowPropertiesElementData.Loop">
            <summary>
            Loop Slide Show
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_ShowPropertiesElementData.ShowNarration">
            <summary>
            Show Narration in Slide Show
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_ShowPropertiesElementData.ShowAnimation">
            <summary>
            Show Animation in Slide Show
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_ShowPropertiesElementData.UseTimings">
            <summary>
            Use Timings in Slide Show
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_ShowPropertiesElementData.EG_ShowType">
            <summary>
            Choice number "0" (numbering from 0) in definition of the "EG_ShowType"
            in "pml-presentationProperties.xsd" schema file.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_ShowPropertiesElementData.EG_SlideListChoice">
            <summary>
            Choice number "0" (numbering from 0) in definition of the "EG_SlideListChoice"
            in "pml-baseTypes.xsd" schema file.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_ShowPropertiesElementData.PenClr">
            <summary>
            Pen Color for Slide Show
            </summary>
        </member>
        <member name="T:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_WebPropertiesElementData">
            <summary>
            Parser for XML elements of the complex type "CT_WebProperties"
            defined in "pml-presentationProperties.xsd" schema file.
            </summary>    
        </member>
        <member name="M:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_WebPropertiesElementData.#ctor(System.Xml.XmlReader)">
            <summary>
            This constructor initializes instance from XmlReader.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_WebPropertiesElementData.#ctor">
            <summary>
            This constructor initializes instance with defaults.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_WebPropertiesElementData.ShowAnimation">
            <summary>
            Show animation in HTML output
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_WebPropertiesElementData.ResizeGraphics">
            <summary>
            Resize graphics in HTML output
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_WebPropertiesElementData.AllowPng">
            <summary>
            Allow PNG in HTML output
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_WebPropertiesElementData.RelyOnVml">
            <summary>
            Rely on VML for HTML output
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_WebPropertiesElementData.OrganizeInFolders">
            <summary>
            Organize HTML output in folders
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_WebPropertiesElementData.UseLongFilenames">
            <summary>
            Use long file names in HTML output
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_WebPropertiesElementData.ImgSz">
            <summary>
            Image size for HTML output
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_WebPropertiesElementData.Encoding">
            <summary>
            Encoding for HTML output
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.Pptxml.DataModels.p_CT_WebPropertiesElementData.Clr">
            <summary>
            Slide Navigation Colors for HTML output
            </summary>
        </member>
        <member name="T:Spire.Presentation.Converter.Pptxml.DataModels.p_ST_HtmlPublishWebBrowserSupportEnumParser">
            <summary>
            Web browsers supported for HTML output
            </summary>    
        </member>
        <member name="T:Spire.Presentation.Converter.Pptxml.DataModels.p_HtmlPublishWebBrowserSupport">
            <summary>
            Web browsers supported for HTML output
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_HtmlPublishWebBrowserSupport.NotDefined">
            <summary>
            Value is not defined
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_HtmlPublishWebBrowserSupport.hpwbsV4">
            <summary>
            Browser v4
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_HtmlPublishWebBrowserSupport.hpwbsV3">
            <summary>
            Browser v3
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_HtmlPublishWebBrowserSupport.hpwbsV3v4">
            <summary>
            Browser v3v4
            </summary>
        </member>
        <member name="T:Spire.Presentation.Converter.Pptxml.DataModels.p_ST_PrintColorModeEnumParser">
            <summary>
            Print Color Mode
            </summary>    
        </member>
        <member name="T:Spire.Presentation.Converter.Pptxml.DataModels.p_PrintColorMode">
            <summary>
            Print Color Mode
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_PrintColorMode.NotDefined">
            <summary>
            Value is not defined
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_PrintColorMode.pcmBw">
            <summary>
            Black and White Mode
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_PrintColorMode.pcmGray">
            <summary>
            Grayscale Mode
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_PrintColorMode.pcmClr">
            <summary>
            Color Mode
            </summary>
        </member>
        <member name="T:Spire.Presentation.Converter.Pptxml.DataModels.p_ST_PrintWhatEnumParser">
            <summary>
            Default print output
            </summary>    
        </member>
        <member name="T:Spire.Presentation.Converter.Pptxml.DataModels.p_PrintWhat">
            <summary>
            Default print output
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_PrintWhat.NotDefined">
            <summary>
            Value is not defined
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_PrintWhat.pwSlides">
            <summary>
            Slides
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_PrintWhat.pwHandouts1">
            <summary>
            1 Slide / Handout Page
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_PrintWhat.pwHandouts2">
            <summary>
            2 Slides / Handout Page
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_PrintWhat.pwHandouts3">
            <summary>
            3 Slides / Handout Page
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_PrintWhat.pwHandouts4">
            <summary>
            4 Slides / Handout Page
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_PrintWhat.pwHandouts6">
            <summary>
            6 Slides / Handout Page
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_PrintWhat.pwHandouts9">
            <summary>
            9 Slides / Handout Page
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_PrintWhat.pwNotes">
            <summary>
            Notes
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_PrintWhat.pwOutline">
            <summary>
            Outline
            </summary>
        </member>
        <member name="T:Spire.Presentation.Converter.Pptxml.DataModels.p_ST_WebColorTypeEnumParser">
            <summary>
            HTML Slide Navigation Control Colors
            </summary>    
        </member>
        <member name="T:Spire.Presentation.Converter.Pptxml.DataModels.p_WebColorType">
            <summary>
            HTML Slide Navigation Control Colors
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_WebColorType.NotDefined">
            <summary>
            Value is not defined
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_WebColorType.wctNone">
            <summary>
            Non-specific Colors
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_WebColorType.wctBrowser">
            <summary>
            Browser Colors
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_WebColorType.wctPresentationText">
            <summary>
            Presentation Text Colors
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_WebColorType.wctPresentationAccent">
            <summary>
            Presentation Accent Colors
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_WebColorType.wctWhiteTextOnBlack">
            <summary>
            White Text on Black Colors
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_WebColorType.wctBlackTextOnWhite">
            <summary>
            Black Text on White Colors
            </summary>
        </member>
        <member name="T:Spire.Presentation.Converter.Pptxml.DataModels.p_ST_WebScreenSizeEnumParser">
            <summary>
            HTML/Web Screen Size Target
            </summary>    
        </member>
        <member name="T:Spire.Presentation.Converter.Pptxml.DataModels.p_WebScreenSize">
            <summary>
            HTML/Web Screen Size Target
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_WebScreenSize.NotDefined">
            <summary>
            Value is not defined
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_WebScreenSize.wss544x376">
            <summary>
            HTML/Web Size Enumeration 544x376
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_WebScreenSize.wss640x480">
            <summary>
            HTML/Web Size Enumeration 640x480
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_WebScreenSize.wss720x512">
            <summary>
            HTML/Web Size Enumeration 720x515
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_WebScreenSize.wss800x600">
            <summary>
            HTML/Web Size Enumeration 800x600
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_WebScreenSize.wss1024x768">
            <summary>
            HTML/Web Size Enumeration 1024x768
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_WebScreenSize.wss1152x882">
            <summary>
            HTML/Web Size Enumeration 1152x882
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_WebScreenSize.wss1152x900">
            <summary>
            HTML/Web Size Enumeration 1152x900
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_WebScreenSize.wss1280x1024">
            <summary>
            HTML/Web Size Enumeration 1280x1024
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_WebScreenSize.wss1600x1200">
            <summary>
            HTML/Web Size Enumeration 1600x1200
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_WebScreenSize.wss1800x1400">
            <summary>
            HTML/Web Size Enumeration 1800x1400
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.Pptxml.DataModels.p_WebScreenSize.wss1920x1200">
            <summary>
            HTML/Web Size Enumeration 1920x1200
            </summary>
        </member>
        <member name="F:Spire.Presentation.Converter.OpenXML.Names.str__AnyElement">
            Diagram
        </member>
        <member name="P:Spire.Presentation.Converter.OpenXML.Transform2D.CenterY">
            <summary>
            CenterY.
            Read-only <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.OpenXML.Transform2D.ChildX">
            <summary>
            ChildX.
            Read-only <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.OpenXML.Transform2D.ChildY">
            <summary>
            ChildY.
            Read-only <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.OpenXML.Transform2D.ChildWidth">
            <summary>
            ChildWidth.
            Read-only <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.OpenXML.Transform2D.ChildHeight">
            <summary>
            ChildHeight.
            Read-only <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.OpenXML.Transform2D.ChildRect">
            <summary>
            ChildRect.
            Read/write <see cref="!:RectangleF"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.OpenXML.Transform2D.ScaleX">
            <summary>
            ScaleX.
            Read-only <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.OpenXML.Transform2D.ScaleY">
            <summary>
            ScaleY.
            Read-only <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.OpenXML.Transform2D.ReferrenceCenterX">
            <summary>
            ReferrenceCenterX.
            Read-only <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Converter.OpenXML.Transform2D.ReferrenceCenterY">
            <summary>
            ReferrenceCenterY.
            Read-only <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Diagrams.Data.ArrowParameters.StartPoint">
            <summary>
            StartPoint.
            Read-only <see cref="T:Spire.Presentation.Diagrams.Data.PointD"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Diagrams.Data.ArrowParameters.EndPoint">
            <summary>
            EndPoint.
            Read-only <see cref="T:Spire.Presentation.Diagrams.Data.PointD"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Diagrams.Data.ArrowParameters.Targets">
            <summary>
            Targets.
            Read-only <see cref="T:Spire.Presentation.Diagrams.Data.Rectangle"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Diagrams.Data.DiagramUtils.GetClosestPointOnRect(Spire.Presentation.Diagrams.Data.Rectangle,Spire.Presentation.Diagrams.Data.PointD)">
            <summary>
            Get closest point on rect to target point. Used Cohen–Sutherland algorithm
            </summary>
            <param name="rect">The rectangle</param>
            <param name="target">Target point which outside rect</param>
        </member>
        <member name="M:Spire.Presentation.Diagrams.Data.DiagramUtils.GetClosestPointOnCircle(Spire.Presentation.Diagrams.Data.Rectangle,Spire.Presentation.Diagrams.Data.PointD)">
            <summary>
            Get closest point on bound circle to target point
            </summary>
            <param name="circle">Circle bounds</param>
            <param name="target">Target point which outside container</param>
        </member>
        <member name="M:Spire.Presentation.Diagrams.Data.DiagramUtils.CalculateToEllipseDistance(System.Double,System.Double,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Computing the closest ellipse point and distance to a query point. It is required that e0 ≥ e1 > 0, y0 ≥ 0, and y1 ≥ 0.
            Original pseudocode at http://www.geometrictools.com/Documentation/DistancePointEllipseEllipsoid.pdf
            </summary>
            <param name="e0">Ellipse max side length</param>
            <param name="e1">Ellipse min side length</param>
            <param name="y0">Target X-coordinate</param>
            <param name="y1">Tarhet Y-coordinate</param>
            <param name="x0">Output X-coordinate on point laying on ellipse</param>
            <param name="x1">Output Y-coordinate on point laying on ellipse</param>
            <returns>Distance between ellipse and target point</returns>
        </member>
        <member name="T:Spire.Presentation.Diagrams.Data.GeometryBuilder">
            <summary>
            Provides static methods for build custom SmartArt geometry
            </summary>
        </member>
        <member name="M:Spire.Presentation.Diagrams.Data.GeometryBuilder.LoadLinePathGeometry2D(Spire.Presentation.ShapeNode,Spire.Presentation.Diagrams.Data.PointD,Spire.Presentation.Diagrams.Data.PointD[])">
            <summary>
            Loads line path geometry into target shape
            </summary>
            <param name="target">The target shape</param>
            <param name="leftTop">Left top point of bounds rectangle</param>
            <param name="points">Sequence of path points.</param>
        </member>
        <member name="M:Spire.Presentation.Diagrams.Data.GeometryBuilder.GenerateOrthogonalShape(Spire.Presentation.Diagrams.Data.DataTreePresentationNode,Spire.Presentation.Diagrams.Data.Rectangle,Spire.Presentation.Diagrams.Data.SmartArtShapeContainerEx,Spire.Presentation.Diagrams.Data.SmartArtShapeContainerEx,Spire.Presentation.Diagrams.ConnectorBending)">
            <summary>
            Generates orthogonal shape between source and target shapes
            </summary>
            <param name="shapeBounds">Bounds of output shape</param>
            <param name="source">Source SmartArt shape</param>
            <param name="target">Target SmartArt shape</param>
            <returns>Sequence of path points</returns>
        </member>
        <member name="M:Spire.Presentation.Diagrams.Data.Rectangle.GetNearestCorner(Spire.Presentation.Diagrams.Data.PointD)">
            <summary>
            Gets the nearest corner to target point
            </summary>
            <param name="target">The target point</param>
            <returns>The nearest corner</returns>
        </member>
        <member name="M:Spire.Presentation.Diagrams.Data.Rectangle.Inflate(System.Double,System.Double)">
            <summary>
            Creates inflates clone
            </summary>
            <param name="width">Center to left and center to right inflation length</param>
            <param name="height">Center to top and center to bottom inflation length</param>
            <returns>Inflated clone</returns>
        </member>
        <member name="M:Spire.Presentation.Diagrams.Data.Rectangle.Inflate(System.Double)">
            <summary>
            Creates inflated clone
            </summary>
            <param name="length">All direction inflation scalar length</param>
            <returns>Inflated clone</returns>
        </member>
        <member name="M:Spire.Presentation.Diagrams.Data.Rectangle.Scale(System.Double)">
            <summary>
            Creates scaled clone
            </summary>
            <param name="ratio">Scaling ratio</param>
            <returns>Scaled clone</returns>
        </member>
        <member name="M:Spire.Presentation.Diagrams.Data.Rectangle.Union(Spire.Presentation.Diagrams.Data.Rectangle)">
            <summary>
            Creates union with other rectnagle
            </summary>
            <param name="other">Other rectangle</param>
            <returns>Created bounds rectagle</returns>
        </member>
        <member name="M:Spire.Presentation.Diagrams.Data.Rectangle.Union(System.Collections.Generic.IList{Spire.Presentation.Diagrams.Data.Rectangle})">
            <summary>
            Creates union with other rectnagles
            </summary>
            <param name="rectangles">The list of rectangles</param>
            <returns>Created bounds rectagle</returns>
        </member>
        <member name="M:Spire.Presentation.Diagrams.Data.Rectangle.Intersection(Spire.Presentation.Diagrams.Data.Rectangle)">
            <summary>
            Creates intersection with rectangle or zero-rectangle if there is no intersection
            </summary>
            <param name="other">The other rectangle</param>
            <returns>Intersected rectangle of zero-rectangle if there is no intersection</returns>
        </member>
        <member name="M:Spire.Presentation.Diagrams.Data.Rectangle.Move(Spire.Presentation.Diagrams.Data.VectorD)">
            <summary>
            Creates moved cloned
            </summary>
            <param name="offset">The offset</param>
            <returns>Moved clone</returns>
        </member>
        <member name="M:Spire.Presentation.Diagrams.Data.Rectangle.Move(System.Double,System.Double)">
            <summary>
            Creates moved cloned
            </summary>
            <param name="dx">The offset X</param>
            <param name="dy">The offset Y</param>
            <returns>Moved clone</returns>
        </member>
        <member name="T:Spire.Presentation.Diagrams.Data.SizeD">
            <summary>
            Structure represents sides of two-dimential rectangle with double-presision floating-point values
            </summary>
        </member>
        <member name="P:Spire.Presentation.Diagrams.Data.SizeD.Height">
            <summary>
            Get or sets height.
            Read/write <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Diagrams.Data.SizeD.Width">
            <summary>
            Get or sets width.
            Read/write <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Diagrams.Data.SizeD.#ctor(System.Double,System.Double)">
            <summary>
            Initializes new instance of structure <see cref="T:Spire.Presentation.Diagrams.Data.SizeD"/>
            </summary>
            <param name="width">The width</param>
            <param name="height">The height</param>
        </member>
        <member name="P:Spire.Presentation.Diagrams.Data.SmartArtShapeContainerEx.ActualWidth">
            <summary>
            Gets actual node with customization.
            Read-only <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Diagrams.Data.SmartArtShapeContainerEx.NonScaledWidth">
            <summary>
            Get or sets non-scaled node width, without customization.
            Read/write <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Diagrams.Data.SmartArtShapeContainerEx.AvailableWidth">
            <summary>
            Get or sets availiable width for node.
            Read/write <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Diagrams.Data.SmartArtShapeContainerEx.ContainerWidth">
            <summary>
            Get or sets non-customized width for container-type algorithms (linear, snake, composite, cycle, hierChild, hierRoot).
            Read/write <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Diagrams.Data.SmartArtShapeContainerEx.ContainerHeight">
            <summary>
            Get or sets non-customized height for container-type algorithms (linear, snake, composite, cycle, hierChild, hierRoot).
            Read/write <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Diagrams.Data.SmartArtShapeContainerEx.AutoTextRotation">
            <summary>
            Get or sets rotation type for textbox.
            Read/write <see cref="T:Spire.Presentation.Diagrams.TextRotationType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Diagrams.Data.SmartArtShapeContainerEx.TextBoxWidth">
            <summary>
            Gets actual textbox width.
            Read-only <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Diagrams.Data.SmartArtShapeContainerEx.TextBoxHeight">
            <summary>
            Gets actual textbox height.
            Read-only <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Diagrams.Data.SmartArtShapeContainerEx.LastTextboxWidth">
            <summary>
            Gets actual textbox width, before fontsize was changed.
            Read-only <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Diagrams.Data.SmartArtShapeContainerEx.LastTextboxHeight">
            <summary>
             Gets actual textbox height, before fontsize was changed.
             Read-only <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Diagrams.Data.SmartArtShapeContainerEx.IsTextBoxScaledX">
            <summary>
            Is textbox width scaled by custom rules.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Diagrams.Data.SmartArtShapeContainerEx.IsTextBoxScaledY">
            <summary>
            Is textbox height scaled by custom rules.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.SnakeBreakpoint.EndCanvas">
            <summary>
            The snaking begins in the end of canvas
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.SnakeBreakpoint.Balanced">
            <summary>
            The snaking begins at an even number of rows and columns
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.SnakeBreakpoint.Fixed">
            <summary>
            The snaking begins at a fixed point 
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.AlignmentOffset">
            <summary>
            alignOff (Alignment Offset) This value defines the alignment offset for a node.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.Bottom">
            <summary>
             b (Bottom) The bottom of the node.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.BeginningMargin">
            <summary>
             begMarg (Beginning Margin) Specifies the beginning margin.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.BeginningPadding">
            <summary>
            begPad (Beginning Padding) Specifies the beginning padding.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.BendingDistance">
            <summary>
             bendDist (Bending Distance) Specifies the distance from the start of a connector to a bend in the connector.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.BottomMargin">
            <summary>
             bMarg (Bottom Margin) Specifies the bottom margin.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.BottomOffset">
            <summary>
             bOff (Bottom Offset) Specifies the bottom offset.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.ConnectionDistance">
            <summary>
             connDist (Connection Distance) Specifies the connection distance.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.CenterX">
            <summary>
             ctrX (Center Width) Specifies the center of the height.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.CenterXOffset">
            <summary>
             ctrXOff (Center X Offset) Specifies the center x coordinate offset.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.CenterY">
            <summary>
             ctrY (Center Height) Specifies the center of the width.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.CenterYOffset">
            <summary>
             ctrYOff (Center Y Offset) Specifies the center y coordinate offset.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.Diameter">
            <summary>
             diam (Diameter) Specifies the diameter.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.EndMargin">
            <summary>
             endMarg (End Margin) Specifies the ending margin.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.EndPadding">
            <summary>
             endPad (End Padding) Specifies the end padding.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.Height">
            <summary>
             h (Height) Specifies the height.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.ArrowheadHeight">
            <summary>
             hArH (Arrowhead Height) Specifies the height of the arrowhead portion of the connector.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.HeightOffset">
            <summary>
             hOff (Height Offset) Specifies the amount to offset the height.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.Left">
            <summary>
             l (Left) Specifies the left constraint.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.LeftMargin">
            <summary>
             lMarg (Left Margin) Specifies the left margin.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.LeftOffset">
            <summary>
             lOff (Left Offset) Specifies the left offset.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.Unknown">
            <summary>
             none (Unknown) Unknown constraint.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.PrimaryFontSize">
            <summary>
             primFontSz (Primary Font Size) The primary font size.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.PyramidAccentRatio">
            <summary>
             pyraAcctRatio (Pyramid Accent Ratio) Specifies the fraction of the width of the diagram that is reserved for the fly outs at their shortest distance.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.Right">
            <summary>
             r (Right) Specifies the right constraint.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.RightMargin">
            <summary>
             rMarg (Right Margin) Specifies the right margin constraint.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.RightOffset">
            <summary>
             rOff (Right Offset) Specifies the right offset constraint.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.SecondaryFontSize">
            <summary>
             secFontSz (Secondary Font Size) The secondary font size.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.SecondarySiblingSpacing">
            <summary>
             secSibSp (Secondary Sibling Spacing) The secondary sibling spacing.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.SiblingSpacing">
            <summary>
             sibSp (Sibling Spacing) Specifies the minimum distance between sibling shapes.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.Spacing">
            <summary>
             sp (Spacing) Specifies the spacing defined.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.StemThickness">
            <summary>
             stemThick (Stem Thickness) Specifies the thickness of the arrow抯 shaft.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.Top">
            <summary>
             t (Top) Specifies the top constraint.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.TopMargin">
            <summary>
             tMarg (Top Margin) Top margin constraint.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.TopOffset">
            <summary>
             tOff (Top Offset) Top offset constraint.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.UserDefinedA">
            <summary>
             userA (User Defined A) User defined information.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.UserDefinedB">
            <summary>
             userB (User Defined B) User defined information.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.UserDefinedC">
            <summary>
             userC (User Defined C) User defined information.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.UserDefinedD">
            <summary>
             userD (User Defined D) User defined information.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.UserDefinedE">
            <summary>
             userE (User Defined E) User defined information.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.UserDefinedF">
            <summary>
             userF (User Defined F) User defined information.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.UserDefinedG">
            <summary>
             userG (User Defined G) User defined information.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.UserDefinedH">
            <summary>
             userH (User Defined H) User defined information.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.UserDefinedI">
            <summary>
             userI (User Defined I) User defined information.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.UserDefinedJ">
            <summary>
             userJ (User Defined J) User defined information.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.UserDefinedK">
            <summary>
             userK (User Defined K) User defined information.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.UserDefinedL">
            <summary>
             userL (User Defined L) User defined information.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.UserDefinedM">
            <summary>
             userM (User Defined M) User defined information.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.UserDefinedN">
            <summary>
             userN (User Defined N) User defined information.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.UserDefinedO">
            <summary>
             userO (User Defined O) User defined information.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.UserDefinedP">
            <summary>
             userP (User Defined P) User defined information.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.UserDefinedQ">
            <summary>
             userQ (User Defined Q) User defined information.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.UserDefinedR">
            <summary>
             userR (User Defined R) User defined information.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.UserDefinedS">
            <summary>
             userS (User Defined S) User defined information.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.UserDefinedT">
            <summary>
             userT (User Defined T) User defined information.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.UserDefinedU">
            <summary>
             userU (User Defined U) User defined information.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.UserDefinedV">
            <summary>
             userV (User Defined V) User defined information.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.UserDefinedW">
            <summary>
             userW (User Defined W) User defined information.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.UserDefinedX">
            <summary>
             userX (User Defined X) User defined information.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.UserDefinedY">
            <summary>
             userY (User Defined Y) User defined information.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.UserDefinedZ">
            <summary>
             userZ (User Defined Z) User defined information.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.Width">
            <summary>
             w (Width) The width parameter.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.ArrowheadWidth">
            <summary>
             wArH (Arrowhead Width) Specifies the width of the arrowhead portion of the connector.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Diagrams.ConstraintType.WidthOffset">
            <summary>
             wOff (Width Offset) Offsets the width by the specified amount.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Diagrams.SmartArt.IsRectangleDiagram(Spire.Presentation.AutoShape)">
            <summary>
            Check whethere text frame needs adjust rotation angle.
            </summary>
            <param name="ashape"></param>
            <returns></returns>
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.BehaviorAccumulateType">
            <summary>
            Represents types of accumulation of effect behaviors.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.BehaviorAccumulateType.UnDefined">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.BehaviorAccumulateType.Always">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.BehaviorAccumulateType.None">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.BehaviorAdditiveType">
            <summary>
            Represents additive type for effect behavior.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.BehaviorAdditiveType.Undefined">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.BehaviorAdditiveType.None">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.BehaviorAdditiveType.Base">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.BehaviorAdditiveType.Sum">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.BehaviorAdditiveType.Replace">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.BehaviorAdditiveType.Multiply">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.ParagraphBuildType">
            <summary>
            Indicates how text display style during animation.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.ParagraphBuildType.Whole">
            <summary>
            One shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.ParagraphBuildType.AllAtOnce">
            <summary>
            All paragraph.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.ParagraphBuildType.Paragraphs1">
            <summary>
            Paragraphs of depth 1.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.ParagraphBuildType.Paragraphs2">
            <summary>
            Paragraphs of depth 2.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.ParagraphBuildType.Paragraphs3">
            <summary>
            Paragraphs of depth 3.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.ParagraphBuildType.Paragraphs4">
            <summary>
            Paragraphs of depth 4.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.ParagraphBuildType.Paragraphs5">
            <summary>
            Paragraphs of depth 5.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.AnimationColorDirection">
            <summary>
            Represents color direction.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationColorDirection.None">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationColorDirection.Clockwise">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationColorDirection.CounterClockwise">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.AnimationColorspace">
            <summary>
            Represents color space for color effect behavior.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationColorspace.None">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationColorspace.RGB">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationColorspace.HSL">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.AnimationCommandType">
            <summary>
            Represents command effect type for command effect behavior.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationCommandType.None">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationCommandType.Event">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationCommandType.Call">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationCommandType.Verb">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.EffectFillType">
            <summary>
            Represent fill types.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.EffectFillType.None">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.EffectFillType.Remove">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.EffectFillType.Freeze">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.EffectFillType.Hold">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.EffectFillType.Transition">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.TimeNodePresetClassType">
            <summary>
            Represent effect class types.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.TimeNodePresetClassType.Entrance">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.TimeNodePresetClassType.Exit">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.TimeNodePresetClassType.Emphasis">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.TimeNodePresetClassType.Path">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.TimeNodePresetClassType.Verb">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.TimeNodePresetClassType.MediaCall">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.AnimationRestartType">
            <summary>
            Represents whether the animation effect restarts after the effect has started once. 
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationRestartType.None">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationRestartType.Always">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationRestartType.WhenOff">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationRestartType.Never">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype">
            <summary>
            Represents subtypes of animation effect.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.None">
            <summary/>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.Across">
            <summary/>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.Bottom">
            <summary/>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.BottomLeft">
            <summary/>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.BottomRight">
            <summary/>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.Center">
            <summary/>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.Clockwise">
            <summary/>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.CounterClockwise">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.GradualAndCycleClockwise">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.GradualAndCycleCounterClockwise">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.Down">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.DownLeft">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.DownRight">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.FontAllCaps">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.FontBold">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.FontItalic">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.FontShadow">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.FontStrikethrough">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.FontUnderline">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.Gradual">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.Horizontal">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.HorizontalIn">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.HorizontalOut">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.In">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.InBottom">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.InCenter">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.InSlightly">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.Instant">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.Left">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.OrdinalMask">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.Out">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.OutBottom">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.OutCenter">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.OutSlightly">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.Right">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.Slightly">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.Top">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.TopLeft">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.TopRight">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.Up">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.UpLeft">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.UpRight">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.Vertical">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.VerticalIn">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.VerticalOut">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.Wheel1">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.Wheel2">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.Wheel3">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.Wheel4">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationEffectSubtype.Wheel8">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.AnimationTriggerType">
            <summary>
            Represents the trigger that starts an animation.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationTriggerType.AfterPrevious">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationTriggerType.Mixed">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationTriggerType.OnPageClick">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationTriggerType.WithPrevious">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationTriggerType.None">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.FilterRevealType">
            <summary>
            Represents filter reveal type.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterRevealType.None">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterRevealType.In">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterRevealType.Out">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.FilterEffectSubtype">
            <summary>
            Represents filter effect subtypes.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectSubtype.None">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectSubtype.Across">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectSubtype.Down">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectSubtype.DownLeft">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectSubtype.DownRight">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectSubtype.FromBottom">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectSubtype.FromLeft">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectSubtype.FromRight">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectSubtype.FromTop">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectSubtype.Horizontal">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectSubtype.In">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectSubtype.InHorizontal">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectSubtype.InVertical">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectSubtype.Left">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectSubtype.Out">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectSubtype.OutHorizontal">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectSubtype.OutVertical">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectSubtype.Right">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectSubtype.Spokes1">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectSubtype.Spokes2">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectSubtype.Spokes3">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectSubtype.Spokes4">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectSubtype.Spokes8">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectSubtype.Up">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectSubtype.UpLeft">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectSubtype.UpRight">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectSubtype.Vertical">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.FilterEffectType">
            <summary>
            Represents filter effect types.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectType.None">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectType.Barn">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectType.Blinds">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectType.Box">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectType.Checkerboard">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectType.Circle">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectType.Diamond">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectType.Dissolve">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectType.Fade">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectType.Image">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectType.Pixelate">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectType.Plus">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectType.RandomBar">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectType.Slide">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectType.Stretch">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectType.Strips">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectType.Wedge">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectType.Wheel">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.FilterEffectType.Wipe">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.MotionCommandPathType">
            <summary>
            Represent types of command for animation motion effect behavior.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.MotionCommandPathType.MoveTo">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.MotionCommandPathType.LineTo">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.MotionCommandPathType.CurveTo">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.MotionCommandPathType.CloseLoop">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.MotionCommandPathType.End">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.AnimationMotionOrigin">
            <summary>
            Indicates that the origin of the motion path.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationMotionOrigin.None">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationMotionOrigin.Parent">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationMotionOrigin.Layout">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.AnimationMotionPathEditMode">
            <summary>
            Specifies how the motion path moves when the target shape is moved
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationMotionPathEditMode.None">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationMotionPathEditMode.Relative">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationMotionPathEditMode.Fixed">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.MotionPathPointsType">
            <summary>
            Represent types of points in animation motion path.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.MotionPathPointsType.None">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.MotionPathPointsType.Auto">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.MotionPathPointsType.Corner">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.MotionPathPointsType.Straight">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.MotionPathPointsType.Smooth">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.MotionPathPointsType.CurveAuto">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.MotionPathPointsType.CurveCorner">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.MotionPathPointsType.CurveStraight">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.MotionPathPointsType.CurveSmooth">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.AnimationCalculationMode">
            <summary>
            Represent calc mode for animation property.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationCalculationMode.None">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationCalculationMode.Discrete">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationCalculationMode.Linear">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.AnimationCalculationMode.Formula">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.PropertyValueType">
            <summary>
            Represent property value types.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.PropertyValueType.None">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.PropertyValueType.String">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.PropertyValueType.Number">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Animation.PropertyValueType.Color">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.CommonBehavior">
            <summary>
            Represent base class behavior of effect.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.CommonBehavior.Accumulate">
            <summary>
            Determines whether animation behaviors accumulate.
            Read/write <see cref="T:Spire.Presentation.TriState"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.CommonBehavior.Additive">
            <summary>
            Sets or returns whether the current animation behavior is combined with other running animations. 
            Read/write <see cref="T:Spire.Presentation.Drawing.Animation.BehaviorAdditiveType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.CommonBehavior.Timing">
            <summary>
            Represents timing properties for the effect behavior.
            Read/write <see cref="T:Spire.Presentation.Drawing.Animation.Timing"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.AnimationColorBehavior">
            <summary>
            Represents a color effect for an animation behavior.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationColorBehavior.From">
            <summary>
            Indicates the starting color of behavior.
            Read/write <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationColorBehavior.To">
            <summary>
            Indicates the ending color of behavior.
            Read/write <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationColorBehavior.By">
            <summary>
            Describes the relative color value for the color animation.
            Read/write <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationColorBehavior.AnimationColorspace">
            <summary>
            Represent color space of behavior.
            Read/write <see cref="P:Spire.Presentation.Drawing.Animation.AnimationColorBehavior.AnimationColorspace"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationColorBehavior.Direction">
            <summary>
            Indicates that direction to cycle the hue around the color wheel.
            Read/write <see cref="T:Spire.Presentation.Drawing.Animation.AnimationColorDirection"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.AnimationColorTransform">
            <summary>
            Represent color offset.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationColorTransform.Color1">
            <summary>
            Defines first value of color.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationColorTransform.Color2">
            <summary>
            Defines second value of color.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationColorTransform.Color3">
            <summary>
            Defines third value of color.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.AnimationCommandBehavior">
            <summary>
            Represents a command effect for an animation behavior.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationCommandBehavior.Type">
            <summary>
            Indicates command type of behavior.
            Read/write <see cref="T:Spire.Presentation.Drawing.Animation.AnimationCommandType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationCommandBehavior.Value">
            <summary>
            Indicates command value.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationCommandBehavior.Target">
            <summary>
            Indicates shape target.
            Read/write <see cref="T:Spire.Presentation.Shape"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.AnimationEffectType">
            <summary>
            Represents an animation effect type
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.AnimationEffect">
            <summary>
            Represents timing information about a slide animation.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationEffect.TimeNodeAudios">
            <summary>
            TimeNodeAudios
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationEffect.IterateTimeValue">
            <summary>
            if the value is less than 0,
            this element describes the duration of the iteration interval in absolute time.
            if the value is greater than 0,
            this element describes the duration of the iteration interval in percentage of time.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationEffect.Effects">
            <summary>
            Gets a sequence for an effect.
            Read-only <see cref="P:Spire.Presentation.Drawing.Animation.AnimationEffect.Effects"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationEffect.TextAnimation">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationEffect.ShapeTarget">
            <summary>
            Returns the shape that is applied with the specific animation effect.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationEffect.PresetClassType">
            <summary>
            Defines class of effect.
            Read/write <see cref="T:Spire.Presentation.Drawing.Animation.TimeNodePresetClassType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationEffect.AnimationEffectType">
            <summary>
            Defines type of effect.
            Read/write <see cref="P:Spire.Presentation.Drawing.Animation.AnimationEffect.AnimationEffectType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationEffect.CommonBehaviorCollection">
            <summary>
            Gets collection of behavior for effect.
            Read/write <see cref="P:Spire.Presentation.Drawing.Animation.AnimationEffect.CommonBehaviorCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationEffect.Timing">
            <summary>
            Defines timing value for effect.
            Read/write <see cref="T:Spire.Presentation.Drawing.Animation.Timing"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationEffect.StartParagraph">
            <summary>
            Starting text paragraph which effect is applied to.
            Read-only
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationEffect.EndParagraph">
            <summary>
            Ending text paragraph which effect is applied to.
            Read-only
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.AnimationFilterEffect">
            <summary>
            Represents a filter effect for an animation behavior..
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.Animation.AnimationFilterEffect.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationFilterEffect.Reveal">
            <summary>
            Determines how the embedded objects will be revealed.
            Read/write <see cref="T:Spire.Presentation.Drawing.Animation.FilterRevealType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationFilterEffect.Type">
            <summary>
            Represents the type of animation
            Read/write <see cref="T:Spire.Presentation.Drawing.Animation.FilterEffectType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationFilterEffect.Subtype">
            <summary>
            Sets or returns the subtype of the filter effect.
            Read/write <see cref="T:Spire.Presentation.Drawing.Animation.FilterEffectSubtype"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.Animation.MotionPath.Add(Spire.Presentation.Drawing.Animation.MotionCommandPathType,System.Drawing.PointF[],Spire.Presentation.Drawing.Animation.MotionPathPointsType,System.Boolean)">
            <summary>
            Add new command to path
            </summary>
            <param name="type"></param>
            <param name="pts"></param>
            <param name="ptsType"></param>
            <param name="bRelativeCoord"></param>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.MotionPath.Count">
            <summary>
            Gets the number of paths in the collection.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.Animation.MotionPath.Insert(System.Int32,Spire.Presentation.Drawing.Animation.MotionCommandPathType,System.Drawing.PointF[],Spire.Presentation.Drawing.Animation.MotionPathPointsType,System.Boolean)">
            <summary>
            Insert new command to path
            </summary>
            <param name="index"></param>
            <param name="type"></param>
            <param name="pts"></param>
            <param name="ptsType"></param>
            <param name="bRelativeCoord"></param>
        </member>
        <member name="M:Spire.Presentation.Drawing.Animation.MotionPath.Clear">
            <summary>
            Removes all commands from the collection.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.Animation.MotionPath.Remove(Spire.Presentation.Drawing.Animation.MotionCmdPath)">
            <summary>
            Removes specified commans from the collection.
            </summary>
            <param name="item">Motion path to remove.</param>
        </member>
        <member name="M:Spire.Presentation.Drawing.Animation.MotionPath.RemoveAt(System.Int32)">
            <summary>
            Removes a command at the specified index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.MotionPath.Item(System.Int32)">
            <summary>
            Gets a command at the specified index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Drawing.Animation.MotionPath.GetEnumerator">
            <summary>
            Gets an iterator for the collection.
            </summary>
            <returns>Iterator.</returns>
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.TimeAnimationValue">
            <summary>
            Represent animation point.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.TimeAnimationValue.Time">
            <summary>
            Represents time value.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.TimeAnimationValue.Value">
            <summary>
            Represents value.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.TimeAnimationValue.Formula">
            <summary>
            Formulas values."
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.TimeAnimationValueCollection">
            <summary>
            Represent collection of animation points.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.TimeAnimationValueCollection.Count">
            <summary>
            Gets the number of points in the collection.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.TimeAnimationValueCollection.Item(System.Int32)">
            <summary>
            Gets a point at the specified index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Drawing.Animation.TimeAnimationValueCollection.GetEnumerator">
            <summary>
            Gets an iterator for the collection.
            </summary>
            <returns>Iterator.</returns>
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.AnimationProperty">
            <summary>
            Represent property effect behavior.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationProperty.From">
            <summary>
            Indicates the starting value of the animation.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationProperty.To">
            <summary>
            Indicates the ending value for the animation.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationProperty.By">
            <summary>
            Specifies a relative offset value for the animation.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationProperty.ValueType">
            <summary>
            Indicates the type of a property value.
            Read/write <see cref="T:Spire.Presentation.Drawing.Animation.PropertyValueType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationProperty.CalcMode">
            <summary>
            Indicates the Calculation mode for the animation
            Read/write <see cref="T:Spire.Presentation.Drawing.Animation.AnimationCalculationMode"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationProperty.TimeAnimationValueCollection">
            <summary>
            Indicates the value of the animation.
            Read/write <see cref="P:Spire.Presentation.Drawing.Animation.AnimationProperty.TimeAnimationValueCollection"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.AnimationRotation">
            <summary>
            Represent rotation behavior of effect.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationRotation.From">
            <summary>
            Indicates the starting value for the animation.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationRotation.To">
            <summary>
            Indicates the ending value for the animation.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationRotation.By">
            <summary>
            Indicates the relative offset value for the animation.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.AnimationScale">
            <summary>
            Represents animation scale effect.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationScale.ZoomContent">
            <summary>
            Indicates whether a content should be zoomed.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationScale.From">
            <summary>
            Indicates Starting the animation from (in percents).
            Read/write <see cref="T:System.Drawing.PointF"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationScale.To">
            <summary>
            Indicates the ending location for an animation scale effect .
            Read/write <see cref="T:System.Drawing.PointF"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationScale.By">
            <summary>
            describes the relative offset value for the animation.
            Read/write <see cref="T:System.Drawing.PointF"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.SequenceCollection">
            <summary>
            Represent collection of interactive sequences.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.SequenceCollection.Count">
            <summary>
            Gets the number of elements in a collection
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.Animation.SequenceCollection.Add(Spire.Presentation.IShape)">
            <summary>
            Add new interactive sequence.
            Read/write <see cref="T:Spire.Presentation.Collections.AnimationEffectCollection"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.Animation.SequenceCollection.Remove(Spire.Presentation.Collections.AnimationEffectCollection)">
            <summary>
            Removes specified sequence from a collection.
            </summary>
            <param name="item">Sequence to remove.</param>
        </member>
        <member name="M:Spire.Presentation.Drawing.Animation.SequenceCollection.RemoveAt(System.Int32)">
            <summary>
            Removes sequence at the specified index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Spire.Presentation.Drawing.Animation.SequenceCollection.Clear">
            <summary>
            Removes all sequences from a collection.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.SequenceCollection.Item(System.Int32)">
            <summary>
            Gets a sequense at the specified index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Drawing.Animation.SequenceCollection.GetEnumerator">
            <summary>
            Gets an iterator for a collection.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.AnimationSet">
            <summary>
            Represents a set effect for an animation behavior.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.AnimationSet.To">
            <summary>
            Specifies the certain attribute of a effect after an animation effect.
            Read/write <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.TextAnimation">
            <summary>
            Represent text animation.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.TextAnimation.ParagraphBuildType">
            <summary>
            Paragraph build type of text animation.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.TextAnimation.Background">
            <summary>
            Shape effect.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.TimeLine">
            <summary>
            Represent timline of animation.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.TimeLine.InteractiveSequences">
            <summary>
            Gets collection of interactive sequences.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.TimeLine.MainSequence">
            <summary>
            Gets main sequence which may contain only main effects collection.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.Animation.Timing">
            <summary>
            Represents animation timing.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.Timing.Accelerate">
            <summary>
            Percentage of the duration over which acceleration should take place
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.Timing.Decelerate">
            <summary>
            Percentage of the duration over which acceleration should take place
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.Timing.AutoReverse">
            <summary>
            Whether an effect should play forward and then reverse, thereby doubling the duration
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.Timing.Duration">
            <summary>
            Length of animation (in seconds)
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.Timing.RepeatCount">
            <summary>
            Describes the number of times the effect should repeat.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.Timing.RepeatDuration">
            <summary>
            How long should the repeats last (in seconds)
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.Timing.Restart">
            <summary>
            Indicatesif a effect is to restart after complete.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.Timing.Speed">
            <summary>
            Returns or sets a valeue. 
            specifies the percentage by which to speed up (or slow down) the timing.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.Timing.TriggerDelayTime">
            <summary>
            Delay time from when the trigger is enabled (in seconds)
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Animation.Timing.TriggerType">
            <summary>
            Describes trigger type.
            Read/write <see cref="T:Spire.Presentation.Drawing.Animation.AnimationTriggerType"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.Backdrop">
            <summary>
            Represents Backdrop
            are being applied to
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Backdrop.NormalVector">
            <summary>
            Gets or sets a normal vector.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Backdrop.AnchorPoint">
            <summary>
            Gets or sets a point in 3D space. 
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Backdrop.UpVector">
            <summary>
            Gets or sets a vector representing up.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.BackgroundType">
            <summary>
            Defines the slide background fill type.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.BackgroundType.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.BackgroundType.Themed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.BackgroundType.Custom">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.BevelColorType">
            <summary>
            Indicates bevel color mode of shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.BevelColorType.Contour">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.BevelColorType.Extrusion">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.BevelPresetType">
            <summary>
            Indicates 3D bevel of shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.BevelPresetType.None">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.BevelPresetType.Angle">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.BevelPresetType.ArtDeco">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.BevelPresetType.Circle">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.BevelPresetType.Convex">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.BevelPresetType.CoolSlant">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.BevelPresetType.Cross">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.BevelPresetType.Divot">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.BevelPresetType.HardEdge">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.BevelPresetType.RelaxedInset">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.BevelPresetType.Riblet">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.BevelPresetType.Slope">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.BevelPresetType.SoftRound">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.BlackWhiteMode">
            <summary>
            Indicates how colored shape should be transformed into black and white.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.BlackWhiteMode.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.BlackWhiteMode.Color">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.BlackWhiteMode.Auto">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.BlackWhiteMode.Gray">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.BlackWhiteMode.LightGray">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.BlackWhiteMode.InverseGray">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.BlackWhiteMode.GrayWhite">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.BlackWhiteMode.BlackGray">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.BlackWhiteMode.BlackWhite">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.BlackWhiteMode.Black">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.BlackWhiteMode.White">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.BlackWhiteMode.Hidden">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.BlendMode">
            <summary>
            Indicates blend mode.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.BlendMode.Darken">
            <summary>
            Darken blend mode.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.BlendMode.Lighten">
            <summary>
            Lighten blend mode.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.BlendMode.Multiply">
            <summary>
            Multiply blend mode.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.BlendMode.Overlay">
            <summary>
            Overlay blend mode.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.BlendMode.Screen">
            <summary>
            Screen blend mode.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.BlendMode.None">
            <summary>
            No blend mode
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.ColorFormat">
            <summary>
            Represents the color of a one-color object
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ColorFormat.Color">
            <summary>
            Gets or Sets RGB colors.
            Read/write <see cref="P:Spire.Presentation.Drawing.ColorFormat.Color"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ColorFormat.ColorType">
            <summary>
            Gets or sets color type.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ColorFormat.KnownColor">
            <summary>
            Gets or sets the color preset.
            Read/write <see cref="P:Spire.Presentation.Drawing.ColorFormat.KnownColor"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ColorFormat.SystemColor">
            <summary>
            Gets or sets the color identified by the system color table.
            Read/write <see cref="P:Spire.Presentation.Drawing.ColorFormat.SystemColor"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ColorFormat.SchemeColor">
            <summary>
            Gets or sets the color identified by a color scheme.
            Read/write <see cref="P:Spire.Presentation.Drawing.ColorFormat.SchemeColor"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ColorFormat.R">
            <summary>
            Gets or sets the red component of a color. All color transformations are ignored.
            Read/write <see cref="T:System.Byte"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ColorFormat.G">
            <summary>
            Gets or sets the green component of a color. 
            Read/write <see cref="T:System.Byte"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ColorFormat.B">
            <summary>
            Gets or sets the blue component of a color.
            Read/write <see cref="T:System.Byte"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ColorFormat.Hue">
            <summary>
            Gets or sets the hue component of a color in HSL representation.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ColorFormat.Saturation">
            <summary>
            Gets or sets the saturation component of a color in HSL representation.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ColorFormat.Luminance">
            <summary>
            Gets or sets the luminance component of a color in HSL representation.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.ColorFormat.Equals(System.Object)">
            <summary>
            Indicates whether the two ColorFormat instances are equal.
            </summary>
            <param name="obj">The ColorFormat to compare with the current ColorFormat.</param>
            <returns><b>true</b> if the specified ColorFormat is equal to the current ColorFormat; otherwise, <b>false</b>.</returns>
        </member>
        <member name="T:Spire.Presentation.Drawing.ColorScheme">
            <summary>
            Represents a color scheme, which is a set of eight colors used for the different elements of a slide, notes page, or handout, such as the title or background.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ColorScheme.Item(Spire.Presentation.Drawing.ColorSchemeIndex)">
            <summary>
            Gets the element at the specified index.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ColorScheme.Dark1">
            <summary>
            First dark color in the scheme.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ColorScheme.Light1">
            <summary>
            First light color in the scheme.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ColorScheme.Dark2">
            <summary>
            Second dark color in the scheme.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ColorScheme.Light2">
            <summary>
            Second light color in the scheme.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ColorScheme.Accent1">
            <summary>
            First accent color in the scheme.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ColorScheme.Accent2">
            <summary>
            Second accent color in the scheme.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ColorScheme.Accent3">
            <summary>
            Third accent color in the scheme.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ColorScheme.Accent4">
            <summary>
            Fourth accent color in the scheme.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ColorScheme.Accent5">
            <summary>
            Fifth accent color in the scheme.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ColorScheme.Accent6">
            <summary>
            Sixth accent color in the scheme.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ColorScheme.HyperlinkColor">
            <summary>
            Color for the hyperlinks.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ColorScheme.FollowedHyperlink">
            <summary>
            Color for the visited hyperlinks.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ColorScheme.Slide">
            <summary>
            Gets the parent slide.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.ColorSchemeIndex">
            <summary>
            Represents an index in a colorscheme.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.ColorSchemeIndex.Dark1">
            <summary>
            Dark 1.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.ColorSchemeIndex.Light1">
            <summary>
            Light 1.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.ColorSchemeIndex.Dark2">
            <summary>
            Dark 2.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.ColorSchemeIndex.Light2">
            <summary>
            Light 2.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.ColorSchemeIndex.Accent1">
            <summary>
            Accent 1.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.ColorSchemeIndex.Accent2">
            <summary>
            Accent 2.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.ColorSchemeIndex.Accent3">
            <summary>
            Accent 3.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.ColorSchemeIndex.Accent4">
            <summary>
            Accent 4.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.ColorSchemeIndex.Accent5">
            <summary>
            Accent 5.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.ColorSchemeIndex.Accent6">
            <summary>
            Accent 6.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.ColorSchemeIndex.Hyperlink">
            <summary>
            Hyperlink.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.ColorSchemeIndex.FollowedHyperlink">
            <summary>
            Followed Hyperlink.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.ColorTransformCollection">
            <summary>
            Represents a collection of color transform operations.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.ColorTransformCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all elements from the collection to the specified array.
            </summary>
            <param name="array">Target array.</param>
            <param name="index">Starting index in the target array.</param>
        </member>
        <member name="P:Spire.Presentation.Drawing.ColorTransformCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ColorTransformCollection.SyncRoot">
            <summary>
            Gets a synchronization root.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.ColorTransformCollection.Clone">
            <summary>
            Creates a copy of a ColorTransform collection.
            </summary>
            <returns>New <see cref="T:Spire.Presentation.Drawing.ColorTransform"/> collection.</returns>
        </member>
        <member name="F:Spire.Presentation.Drawing.ColorType.None">
            <summary>
            Color is not defined at all.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.ColorType.RGB">
            <summary>
            Standard 24bit RGB color.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.ColorType.HSL">
            <summary>
            High definition HSL color.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.ColorType.Scheme">
            <summary>
            Scheme color.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.ColorType.KnownColor">
            <summary>
            Preset Color.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.EffectDag">
            <summary>
            Represents effect properties of shape.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.EffectDag.BlendEffect">
            <summary>
            Blur effect.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.EffectDag.FillOverlayEffect">
            <summary>
            Fill overlay effect.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.EffectDag.GlowEffect">
            <summary>
            Glow effect.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.EffectDag.InnerShadowEffect">
            <summary>
            Inner shadow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.EffectDag.OuterShadowEffect">
            <summary>
            Outer shadow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.EffectDag.PresetShadowEffect">
            <summary>
            Preset shadow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.EffectDag.ReflectionEffect">
            <summary>
            Reflection. 
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.EffectDag.SoftEdgeEffect">
            <summary>
            Soft edge.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.EffectDag.Spire#Presentation#IActiveSlide#Slide">
            <summary>
            Gets the parent slide of a ThreeDFormat.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.EffectDag.Spire#Presentation#IActivePresentation#Presentation">
            <summary>
            Gets the parent presentation of a ThreeDFormat.
            Read-only <see cref="T:Spire.Presentation.PresentationPptx"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.EffectStyle">
            <summary>
            Represents an effect style.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.EffectStyle.EffectDag">
            <summary>
            Gets an effect format.
            Readonly <see cref="P:Spire.Presentation.Drawing.EffectStyle.EffectDag"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.EffectStyle.FormatThreeDFormat">
            <summary>
            Gets an 3d format.
            Readonly <see cref="T:Spire.Presentation.Drawing.FormatThreeD"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.IImageData.GetHashCode">
            <summary>
            Gets the hash code of an image.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="P:Spire.Presentation.Drawing.IImageData.ContentType">
            <summary>
            Gets a MIME type of an image, encoded in <see cref="P:Spire.Presentation.Drawing.IImageData.Data"/>.
            Read-only <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.IImageData.Data">
            <summary>
            Gets the copy of an image's data.
            Read-only <see cref="T:System.Byte"/>[].
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.IImageData.Image">
            <summary>
            Gets the copy of an image.
            Read-only <see cref="P:Spire.Presentation.Drawing.IImageData.Image"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.IImageData.Width">
            <summary>
            Gets a width of an image.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.IImageData.Height">
            <summary>
            Gets a height of an image.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.IImageData.X">
            <summary>
            Gets a X-offset of an image.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.IImageData.Y">
            <summary>
            Gets a Y-offset of an image.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.FillFormat">
            <summary>
            Represents a fill formatting options.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.FillFormat.FillType">
            <summary>
            Gets or sets the type of filling.
            Read/write <see cref="P:Spire.Presentation.Drawing.FillFormat.FillType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.FillFormat.IsGroupFill">
            <summary>
            Indicate whether is Group fill.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.FillFormat.IsNoFill">
            <summary>
            Indicates whether is No Fill.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.FillFormat.SolidColor">
            <summary>
            Gets the fill color.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.FillFormat.Gradient">
            <summary>
            Gets the gradient fill format.
            Read-only <see cref="P:Spire.Presentation.Drawing.FillFormat.Gradient"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.FillFormat.Pattern">
            <summary>
            Gets the pattern fill format.
            Read-only <see cref="P:Spire.Presentation.Drawing.FillFormat.Pattern"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.FillFormat.PictureFill">
            <summary>
            Gets the picture fill format.
            Read-only <see cref="P:Spire.Presentation.Drawing.FillFormat.PictureFill"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.FillFormat.RotateWithShape">
            <summary>
            Indicates whether the fill would be rotated with shape.
            Read/write <see cref="T:Spire.Presentation.TriState"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.FillFormat.Equals(System.Object)">
            <summary>
            Indicates whether two FillFormat instances are equal.
            </summary>
            <param name="obj">The FillFormat to compare with the current FillFormat.</param>
            <returns><b>true</b> if the specified FillFormat is equal to the current FillFormat; otherwise, <b>false</b>.</returns>
        </member>
        <member name="P:Spire.Presentation.Drawing.FillFormat.Spire#Presentation#IActiveSlide#Slide">
            <summary>
            Gets the parent slide of a FillFormat.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.FillFormat.Spire#Presentation#IActivePresentation#Presentation">
            <summary>
            Gets the parent presentation of a FillFormat.
            Read-only <see cref="T:Spire.Presentation.PresentationPptx"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.FillFormatType">
            <summary>
            Represents the type of fill.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.FillFormatType.UnDefined">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.FillFormatType.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.FillFormatType.Solid">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.FillFormatType.Gradient">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.FillFormatType.Pattern">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.FillFormatType.Picture">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.FillFormatType.Group">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.FillStyleCollection">
            <summary>
            Represents the collection of fill styles.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.FillStyleCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all elements from the collection to the specified array.
            </summary>
            <param name="array">Target array.</param>
            <param name="index">Starting index in the target array.</param>
        </member>
        <member name="P:Spire.Presentation.Drawing.FillStyleCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.FillStyleCollection.SyncRoot">
            <summary>
            Gets a synchronization root.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.FillStyleList">
            <summary>
            Represents the collection of fill styles.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.FillStyleList.Count">
            <summary>
            Gets the number of elements actually contained in the collection.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.FillStyleList.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            Read-only <see cref="T:Spire.Presentation.Drawing.FillFormat"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.FillStyleList.GetEnumerator">
            <summary>
            Gets an enumerator for the entire collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the entire collection.</returns>
        </member>
        <member name="T:Spire.Presentation.Drawing.FormatScheme">
            <summary>
            Stores theme-defined formats for the shapes.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.FormatScheme.FillStyles">
            <summary>
            Gets a collection of theme defined fill styles.
            Readonly <see cref="T:Spire.Presentation.Drawing.FillStyleCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.FormatScheme.LineStyles">
            <summary>
            Gets a collection of theme defined line styles.
            Readonly <see cref="T:Spire.Presentation.Collections.LineStyleCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.FormatScheme.EffectStyles">
            <summary>
            Gets a collection of theme defined effect styles.
            Readonly <see cref="T:Spire.Presentation.Collections.EffectStyleCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.FormatScheme.BackgroundFillStyles">
            <summary>
            Gets a collection of theme defined background fill styles.
            Readonly <see cref="T:Spire.Presentation.Drawing.FillStyleCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.FormatScheme.Slide">
            <summary>
            Gets the parent slide.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.FormatThreeD">
            <summary>
            Represents 3-D properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.FormatThreeD.Camera">
            <summary>
            Gets or sets the settings of a camera.
            Read/write <see cref="T:Spire.Presentation.Camera"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.FormatThreeD.LightRig">
            <summary>
            Gets or sets the type of a light.
            Read/write <see cref="T:Spire.Presentation.LightRig"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.FormatThreeD.Spire#Presentation#IActiveSlide#Slide">
            <summary>
            Gets the parent slide of a ThreeDFormat.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.FormatThreeD.Spire#Presentation#IActivePresentation#Presentation">
            <summary>
            Gets the parent presentation of a ThreeDFormat.
            Read-only <see cref="T:Spire.Presentation.PresentationPptx"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.GradientFillFormat">
            <summary>
            Represent a gradient format.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.GradientFillFormat.Equals(System.Object)">
            <summary>
            Indicates whether the two GradientFormat instances are equal.
            </summary>
            <param name="obj">The GradientFormat to compare with the current GradientFormat.</param>
            <returns><b>true</b> if the specified GradientFormat is equal to the current GradientFormat; otherwise, <b>false</b>.</returns>
        </member>
        <member name="P:Spire.Presentation.Drawing.GradientFillFormat.TileFlip">
            <summary>
            Gets or sets the flipping mode for a gradient.
            Read/write <see cref="P:Spire.Presentation.Drawing.GradientFillFormat.TileFlip"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GradientFillFormat.TileRectangle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GradientFillFormat.GradientStyle">
            <summary>
            Gets or sets the style of a gradient.
            Read/write <see cref="P:Spire.Presentation.Drawing.GradientFillFormat.GradientStyle"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GradientFillFormat.GradientShape">
            <summary>
            Gets or sets the shape of a gradient.
            Read/write <see cref="P:Spire.Presentation.Drawing.GradientFillFormat.GradientShape"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GradientFillFormat.GradientStops">
            <summary>
            Gets the collection of gradient stops.
            Read-only <see cref="T:Spire.Presentation.Collections.GradientStopCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GradientFillFormat.Spire#Presentation#IActiveSlide#Slide">
            <summary>
            Gets the parent slide of a gradient.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GradientFillFormat.Spire#Presentation#IActivePresentation#Presentation">
            <summary>
            Gets the parent presentation of a gradient.
            Read-only <see cref="T:Spire.Presentation.PresentationPptx"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.GradientShapeType">
            <summary>
            Represents the shape of gradient fill.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.GradientShapeType.None">
             <summary>
            
             </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.GradientShapeType.Linear">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.GradientShapeType.Rectangle">
             <summary>
            
             </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.GradientShapeType.Radial">
             <summary>
            
             </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.GradientShapeType.Path">
             <summary>
            
             </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.GradientStop">
            <summary>
            Represents a gradient stop.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GradientStop.Position">
            <summary>
            Gets or sets the position (0..1) of a gradient stop.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GradientStop.Color">
            <summary>
            Gets the color of a gradient stop.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.GradientStopData">
            <summary>
            Represents a gradient stop.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GradientStopData.Position">
            <summary>
            Gets the position (0..1) of a gradient stop.
            Readonly <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GradientStopData.Color">
            <summary>
            Gets the color of a gradient stop.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.GradientStyle">
            <summary>
            Represents the gradient style.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.GradientStyle.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.GradientStyle.FromCorner1">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.GradientStyle.FromCorner2">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.GradientStyle.FromCorner3">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.GradientStyle.FromCorner4">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.GradientStyle.FromCenter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.GraphicalNode">
            <summary>
            Represents abstract graphical object.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GraphicalNode.ShapeLocking">
            <summary>
            Gets lock type of shape.
            Read-only <see cref="T:Spire.Presentation.Drawing.GraphicalNodeLocking"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.GraphicalNodeLocking">
            <summary>
            Indicates which operations are disabled on the parent GraphicalObject.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GraphicalNodeLocking.GroupingProtection">
            <summary>
            Indicates whether an adding this shape to a group Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GraphicalNodeLocking.DrilldownProtection">
            <summary>
            Indicates whether selecting subshapes of this object Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GraphicalNodeLocking.SelectionProtection">
            <summary>
            Indicates whether a selecting this shape Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GraphicalNodeLocking.AspectRatioProtection">
            <summary>
            Indicates whether a shape have to preserve aspect ratio on resizing.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GraphicalNodeLocking.PositionProtection">
            <summary>
            Indicates whether a moving this shape Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GraphicalNodeLocking.ResizeProtection">
            <summary>
            Indicates whether a resizing this shape Disallow.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.GraphicFrame">
            <summary>
            Represents shape frame's properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GraphicFrame.Left">
            <summary>
            Gets the X coordinate of the upper-left corner of a frame.
            Read-only <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GraphicFrame.Top">
            <summary>
            Gets the Y coordinate of the upper-left corner of a frame.
            Read-only <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GraphicFrame.Width">
            <summary>
            Gets the width of a frame.
            Read-only <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GraphicFrame.Height">
            <summary>
            Gets the height of a frame.
            Read-only <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GraphicFrame.Rotation">
            <summary>
            Gets the number of degrees a frame is rotated around the z-axis.
            Read-only <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GraphicFrame.CenterX">
            <summary>
            Gets the X coordinate of a frame's center.
            Read-only <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GraphicFrame.CenterY">
            <summary>
            Gets the Y coordinate of a frame's center.
            Read-only <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GraphicFrame.IsFlipX">
            <summary>
            Indicates whether a frame is flipped horizontally.
            Read-only <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GraphicFrame.IsFlipY">
            <summary>
            Indicates whether a frame is flipped vertically.
            Read-only <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GraphicFrame.Rectangle">
            <summary>
            Gets the coordinates of a frame.
            Read-only <see cref="T:System.Drawing.RectangleF"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.GraphicFrame.GetHashCode">
            <summary>
            Gets a hash code for this object.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.GaussianBlur.FilterEdge(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            Edge softness.
            </summary>
            <param name="image">Target image.</param>
            <param name="mw">Width.</param>
            <param name="mh">Height.</param>
            <returns></returns>
        </member>
        <member name="T:Spire.Presentation.Drawing.LineFillFormat">
            <summary>
            Represents properties for lines filling.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.LineFillFormat.FillType">
            <summary>
            Gets or sets the fill type.
            Read/write <see cref="P:Spire.Presentation.Drawing.LineFillFormat.FillType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.LineFillFormat.SolidFillColor">
            <summary>
            Gets the color of a solid fill.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.LineFillFormat.Gradient">
            <summary>
            Gets the gradient fill format.
            Read-only <see cref="P:Spire.Presentation.Drawing.LineFillFormat.Gradient"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.LineFillFormat.Pattern">
            <summary>
            Gets the pattern fill format.
            Read-only <see cref="P:Spire.Presentation.Drawing.LineFillFormat.Pattern"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.LineFillFormat.RotateWithShape">
            <summary>
            Indicates whether the fill should be rotated with a shape.
            Read/write <see cref="T:Spire.Presentation.TriState"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.LineFillFormat.Spire#Presentation#IActiveSlide#Slide">
            <summary>
            Gets the parent slide of a LineFillFormat.
            Read-only <see cref="!:PresentationSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.LineFillFormat.Spire#Presentation#IActivePresentation#Presentation">
            <summary>
            Gets the parent presentation of a LineFillFormat.
            Read-only <see cref="T:Spire.Presentation.PresentationPptx"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.PatternFillFormat">
            <summary>
            Represents a pattern to fill a shape.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PatternFillFormat.PatternType">
            <summary>
            Gets or sets the pattern style.
            Read/write <see cref="T:Spire.Presentation.Drawing.PatternFillType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PatternFillFormat.ForegroundColor">
            <summary>
            Gets the foreground pattern color.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PatternFillFormat.BackgroundColor">
            <summary>
            Gets the background pattern color.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.PatternFillFormat.GetTileImage(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Creates a tile image for the pattern fill with a specified colors.
            </summary>
            <param name="background">The background <see cref="T:System.Drawing.Color"/> for the pattern.</param>
            <param name="foreground">The foreground <see cref="T:System.Drawing.Color"/> for the pattern.</param>
            <returns>Tile <see cref="T:System.Drawing.Bitmap"/>.</returns>
        </member>
        <member name="M:Spire.Presentation.Drawing.PatternFillFormat.GetTileImage(System.Drawing.Color)">
            <summary>
            Creates a tile image for the pattern fill.
            </summary>
            <param name="styleColor">The default <see cref="T:System.Drawing.Color"/>, defined in ShapeEx's Style object. Fill's colors can depend on this.</param>
            <returns>Tile <see cref="T:System.Drawing.Bitmap"/>.</returns>
        </member>
        <member name="P:Spire.Presentation.Drawing.PatternFillFormat.Spire#Presentation#IActiveSlide#Slide">
            <summary>
            Gets the parent slide of a PatternFormat.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PatternFillFormat.Spire#Presentation#IActivePresentation#Presentation">
            <summary>
            Gets the parent presentation of a PatternFormat.
            Read-only <see cref="T:Spire.Presentation.PresentationPptx"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.PatternFillType">
            <summary>
            Represents the pattern style.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.UnDefined">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.Percent05">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.Percent10">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.Percent20">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.Percent25">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.Percent30">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.Percent40">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.Percent50">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.Percent60">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.Percent70">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.Percent75">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.Percent80">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.Percent90">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.DarkHorizontal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.DarkVertical">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.DarkDownwardDiagonal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.DarkUpwardDiagonal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.SmallCheckerBoard">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.Trellis">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.LightHorizontal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.LightVertical">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.LightDownwardDiagonal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.LightUpwardDiagonal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.SmallGrid">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.DottedDiamond">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.WideDownwardDiagonal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.WideUpwardDiagonal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.DashedUpwardDiagonal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.DashedDownwardDiagonal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.NarrowVertical">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.NarrowHorizontal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.DashedVertical">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.DashedHorizontal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.LargeConfetti">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.LargeGrid">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.HorizontalBrick">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.LargeCheckerBoard">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.SmallConfetti">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.Zigzag">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.SolidDiamond">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.DiagonalBrick">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.OutlinedDiamond">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.Plaid">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.Sphere">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.Weave">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.DottedGrid">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.Divot">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.Shingle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.Wave">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.Horizontal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.Vertical">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.Cross">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.DownwardDiagonal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.UpwardDiagonal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PatternFillType.DiagonalCross">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.PatternFormatData">
            <summary>
            Represents a pattern to fill a shape.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PatternFormatData.PatternStyle">
            <summary>
            Gets the pattern style.
            Read-only <see cref="T:Spire.Presentation.Drawing.PatternFillType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PatternFormatData.ForeColorFormat">
            <summary>
            Gets the foreground pattern color.
            Read-only <see cref="T:System.Drawing.Color"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PatternFormatData.BackColorFormat">
            <summary>
            Gets the background pattern color.
            Read-only <see cref="T:System.Drawing.Color"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.PatternFormatData.GetTileImage(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Creates a tile image for the pattern fill with a specified colors.
            </summary>
            <param name="background">The background <see cref="T:System.Drawing.Color"/> for the pattern.</param>
            <param name="foreground">The foreground <see cref="T:System.Drawing.Color"/> for the pattern.</param>
            <returns>Tile <see cref="T:System.Drawing.Bitmap"/>.</returns>
        </member>
        <member name="T:Spire.Presentation.Drawing.PenAlignmentType">
            <summary>
            Represents the lines alignment type.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PenAlignmentType.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PenAlignmentType.Center">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PenAlignmentType.Inset">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.PictureData">
            <summary>
            Represents a picture in a presentation.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PictureData.SourceEmbedImage">
            <summary>
            Gets or sets the embedded image.
            Read/write <see cref="T:Spire.Presentation.Drawing.ImageData"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PictureData.Url">
            <summary>
            Gets of sets linked image's URL.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PictureData.ImageTransform">
            <summary>
            Gets the collection of image transform effects.
            Read-only <see cref="P:Spire.Presentation.Drawing.PictureData.ImageTransform"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.PictureFillFormat">
            <summary>
            Represents a picture fill style.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PictureFillFormat.Dpi">
            <summary>
            Gets or sets the dpi which is used to fill a picture.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PictureFillFormat.FillType">
            <summary>
            Gets or sets the picture fill mode.
            Read/write <see cref="P:Spire.Presentation.Drawing.PictureFillFormat.FillType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PictureFillFormat.Picture">
            <summary>
            Gets the picture.
            Readonly <see cref="T:Spire.Presentation.PictureShape"/>
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PictureFillFormat.SourceRectangle">
            <summary>
            Gets or sets the number of percents of real image.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PictureFillFormatData.Dpi">
            <summary>
            Gets the dpi which is used to fill a picture.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PictureFillFormatData.PictureFillMode">
            <summary>
            Gets the picture fill mode.
            Read-only <see cref="P:Spire.Presentation.Drawing.PictureFillFormatData.PictureFillMode"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PictureFillFormatData.Picture">
            <summary>
            Gets the picture.
            Read-only <see cref="T:Spire.Presentation.Drawing.PictureData"/>
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PictureFillFormatData.CropLeft">
            <summary>
            Gets the number of percents of real image width that are cropped off
            the left of the picture. Read-only <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PictureFillFormatData.CropTop">
            <summary>
            Gets the number of percents of real image height that are cropped off
            the top of the picture. Read-only <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PictureFillFormatData.CropRight">
            <summary>
            Gets the number of percents of real image width that are cropped off
            the right of the picture. Read-only <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PictureFillFormatData.CropBottom">
            <summary>
            Gets the number of percents of real image height that are cropped off
            the bottom of the picture. Read-only <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.PictureFillType">
            <summary>
            Indicates how picture will fill area.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PictureFillType.Tile">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.PictureFillType.Stretch">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.SchemeColor">
            <summary>
            Represents colors in a color scheme.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.SchemeColor.None">
            <summary>
            Color scheme is not defined.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.SchemeColor.Background1">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.SchemeColor.Text1">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.SchemeColor.Background2">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.SchemeColor.Text2">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.SchemeColor.Accent1">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.SchemeColor.Accent2">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.SchemeColor.Accent3">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.SchemeColor.Accent4">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.SchemeColor.Accent5">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.SchemeColor.Accent6">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.SchemeColor.Hyperlink">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.SchemeColor.FollowedHyperlink">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.SchemeColor.StyleColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.SchemeColor.Dark1">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.SchemeColor.Light1">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.SchemeColor.Dark2">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.SchemeColor.Light2">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.BlendEffect">
            <summary>
            Represents a Blur effect that is applied to the entire shape, including its fill.
            All color channels, including alpha, are affected.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.BlendEffect.#ctor(System.Double,System.Boolean)">
            <summary>
            Blur effect constructor.
            </summary>
            <param name="radius">The radius of blur.</param>
            <param name="isGrow">
            Specifies whether the bounds of the object should be grown as a result of the blurring.
            True indicates the bounds are grown while false indicates that they are not.
            </param>
        </member>
        <member name="P:Spire.Presentation.Drawing.BlendEffect.Radius">
            <summary>
            Gets or sets blur radius.
            Read/write <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.BlendEffect.IsGrow">
            <summary>
            Indicates whether the bounds of the object should be grown as a result of the blurring.
            True indicates the bounds are grown while false indicates that they are not.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.BlurNode">
            <summary>
            Represents a Blur effect that is applied to the entire shape, including its fill.
            All color channels, including alpha, are affected.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.BlurNode.Radius">
            <summary>
            Blur radius.
            Readonly <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.BlurNode.Grow">
            <summary>
            Indicates whether effect spreads beyond shape border.
            Readonly <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.EffectNode">
            <summary>
            Base class for immutable objects, which represent effect.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.FillOverlayNode">
            <summary>
            Represents a Fill Overlay effect. A fill overlay may be used to specify
            an additional fill for an object and blend the two fills together.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.FillOverlayNode.BlendMode">
            <summary>
            Indicates how one fill drawn over another.
            Readonly <see cref="T:Spire.Presentation.Drawing.BlendMode"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.FillOverlayNode.FillFormat">
            <summary>
            Gets a overlaying fill properties.
            Readonly <see cref="T:Spire.Presentation.Drawing.BlendMode"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.FillOverlayEffect">
            <summary>
            Represents a Fill Overlay effect. A fill overlay may be used to specify
            an additional fill for an object and blend the two fills together.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.FillOverlayEffect.#ctor">
            <summary>
            Fill Overlay effect constructor.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.FillOverlayEffect.FillFormat">
            <summary>
            Fill format.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.FillOverlayEffect.Blend">
            <summary>
            BlendMode.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.GlowNode">
            <summary>
            Represents a glow effect, in which a color blurred outline 
            is added outside the edges of the object.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GlowNode.Radius">
            <summary>
            Radius.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GlowNode.Color">
            <summary>
            Color.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.GlowEffect">
            <summary>
            Represents a glow effect, in which a color blurred outline 
            is added outside the edges of the object.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.GlowEffect.#ctor">
            <summary>
            Creates a new instance of the Glow class.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GlowEffect.Radius">
            <summary>
            Radius.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.GlowEffect.ColorFormat">
            <summary>
            Color format.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.ImageTransform">
            <summary>
            Represents a collection of effects apllied to an image.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ImageTransform.Count">
            <summary>
            Gets the number of image effects in a collection.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.ImageTransform.RemoveAt(System.Int32)">
            <summary>
            Removes an image effect from a collection at the specified index.
            </summary>
            <param name="index">Index of an image effect that should be deleted.</param>
        </member>
        <member name="M:Spire.Presentation.Drawing.ImageTransform.Clear">
            <summary>
            Removes all image effects from a collection.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.ImageTransform.Add(Spire.Presentation.Drawing.ImageTransformBase)">
            <summary>
            Adds the new image effect to the end of a collection.
            </summary>
            <param name="base">The image effect to add to the end of a collection.</param>
            <returns>Index of the new image effect in a collection.</returns>
        </member>
        <member name="M:Spire.Presentation.Drawing.ImageTransform.GetEnumerator">
            <summary>
            Gets an enumerator for the entire collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the entire collection.</returns>
        </member>
        <member name="P:Spire.Presentation.Drawing.ImageTransform.Item(System.Int32)">
            <summary>
            Gets an <see cref="T:Spire.Presentation.Drawing.ImageTransformBase"/> from the collection by it's index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Presentation.Drawing.ImageTransform.Slide">
            <summary>
            Gets the parent slide for an ImageTransform collection.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ImageTransform.Presentation">
            <summary>
            Gets the parent presentation for an ImageTransform collection.
            Read-only <see cref="T:Spire.Presentation.PresentationPptx"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.ImageTransformBase">
            <summary>
            Represents image transformation effect.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.ImageTransformBase.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.ImageTransformBase.Clone">
            <summary>
            Gets effect object with new parent. In most cases returns the same object, but some can create a copy.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Spire.Presentation.Drawing.InnerShadowNode">
            <summary>
            Represents a inner shadow effect.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.InnerShadowNode.BlurRadius">
            <summary>
            Blur radius.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.InnerShadowNode.Direction">
            <summary>
            Direction of shadow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.InnerShadowNode.Distance">
            <summary>
            Distance of shadow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.InnerShadowNode.ShadowColor">
            <summary>
            Color of shadow.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.InnerShadowEffect">
            <summary>
            Represents a inner shadow effect.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.InnerShadowEffect.#ctor">
            <summary>
            Creates new instance of InnerShadow class.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.InnerShadowEffect.BlurRadius">
            <summary>
            Blur radius.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.InnerShadowEffect.Direction">
            <summary>
            Direction of shadow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.InnerShadowEffect.Distance">
            <summary>
            Distance of shadow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.InnerShadowEffect.ColorFormat">
            <summary>
            Color of shadow.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.OuterShadowNode">
            <summary>
            Represents a outer shadow effect.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.OuterShadowNode.BlurRadius">
            <summary>
            Blur radius.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.OuterShadowNode.Direction">
            <summary>
            Direction of shadow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.OuterShadowNode.Distance">
            <summary>
            Distance of shadow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.OuterShadowNode.ShadowColor">
            <summary>
            Color of shadow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.OuterShadowNode.RectangleAlign">
            <summary>
            Rectangle alignment.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.OuterShadowNode.SkewHorizontal">
            <summary>
            Specifies the horizontal skew angle.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.OuterShadowNode.SkewVertical">
            <summary>
            Specifies the vertical skew angle.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.OuterShadowNode.RotateShadowWithShape">
            <summary>
            Specifies whether the shadow should rotate with the shape if the shape is rotated.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.OuterShadowNode.ScaleHorizontal">
            <summary>
            Specifies the horizontal scaling factor, negative scaling causes a flip.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.OuterShadowNode.ScaleVertical">
            <summary>
            Specifies the vertical scaling factor, negative scaling causes a flip.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.OuterShadowEffect">
            <summary>
            Represents a outer shadow effect.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.OuterShadowEffect.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.OuterShadowEffect.BlurRadius">
            <summary>
            Blur radius.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.OuterShadowEffect.Direction">
            <summary>
            Direction of shadow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.OuterShadowEffect.Distance">
            <summary>
            Distance of shadow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.OuterShadowEffect.ColorFormat">
            <summary>
            Color of shadow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.OuterShadowEffect.RectangleAlign">
            <summary>
            Rectangle alignment.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.OuterShadowEffect.HorizontalSkew">
            <summary>
            Specifies the horizontal skew angle.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.OuterShadowEffect.VerticalSkew">
            <summary>
            Specifies the vertical skew angle.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.OuterShadowEffect.RotateWithShape">
            <summary>
            Specifies whether the shadow should rotate with the shape if the shape is rotated.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.OuterShadowEffect.HorizontalScalingFactor">
            <summary>
            Specifies the horizontal scaling factor, negative scaling causes a flip.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.OuterShadowEffect.VerticalScalingFactor">
            <summary>
            Specifies the vertical scaling factor, negative scaling causes a flip.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.PresetShadow">
            <summary>
            Represents a preset shadow effect.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.PresetShadow.#ctor">
            <summary>
            Creates a new instance of the PresetShadow class.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PresetShadow.Direction">
            <summary>
            Direction of shadow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PresetShadow.Distance">
            <summary>
            Distance of shadow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PresetShadow.ColorFormat">
            <summary>
            Color of shadow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PresetShadow.Preset">
            <summary>
            Preset.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.PresetShadowNode">
            <summary>
            Represents a preset shadow effect.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PresetShadowNode.Direction">
            <summary>
            Direction of shadow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PresetShadowNode.Distance">
            <summary>
            Distance of shadow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PresetShadowNode.ShadowColor">
            <summary>
            Color of shadow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.PresetShadowNode.Preset">
            <summary>
            Preset.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.ReflectionNode">
            <summary>
            Represents a reflection effect.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionNode.StartPosAlpha">
            <summary>
            Specifies the start position (along the alpha gradient ramp) of the start alpha value (percents).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionNode.EndPosAlpha">
            <summary>
            Specifies the end position (along the alpha gradient ramp) of the end alpha value (percents).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionNode.FadeDirection">
            <summary>
            Specifies the direction to offset the reflection. (angle).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionNode.StartReflectionOpacity">
            <summary>
            Starting reflection opacity. (percents).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionNode.EndReflectionOpacity">
            <summary>
            End reflection opacity. (percents).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionNode.BlurRadius">
            <summary>
            Blur radius.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionNode.Direction">
            <summary>
            Direction of reflection.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionNode.Distance">
            <summary>
            Distance of reflection.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionNode.RectangleAlign">
            <summary>
            Rectangle alignment.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionNode.SkewH">
            <summary>
            Specifies the horizontal skew angle.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionNode.SkewV">
            <summary>
            Specifies the vertical skew angle.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionNode.RotateShadowWithShape">
            <summary>
            Specifies whether the reflection should rotate with the shape if the shape is rotated.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionNode.ScaleH">
            <summary>
            Specifies the horizontal scaling factor, negative scaling causes a flip. (percents)
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionNode.ScaleV">
            <summary>
            Specifies the vertical scaling factor, negative scaling causes a flip. (percents)
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.ReflectionEffect">
            <summary>
            Represents a reflection effect.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.ReflectionEffect.#ctor">
            <summary>
            Creates a new instance of Reflection effect class.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionEffect.StartPosition">
            <summary>
            Specifies the start position (along the alpha gradient ramp) of the start alpha value (percents).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionEffect.EndPosition">
            <summary>
            Specifies the end position (along the alpha gradient ramp) of the end alpha value (percents).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionEffect.FadeDirection">
            <summary>
            Specifies the direction to offset the reflection. (angle).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionEffect.StartOpacity">
            <summary>
            Starting reflection opacity. (percents).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionEffect.EndOpacity">
            <summary>
            End reflection opacity. (percents).
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionEffect.BlurRadius">
            <summary>
            Blur radius.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionEffect.Direction">
            <summary>
            Direction of reflection.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionEffect.Distance">
            <summary>
            Distance of reflection.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionEffect.Alignment">
            <summary>
            Rectangle alignment.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionEffect.HorizontalSkew">
            <summary>
            Specifies the horizontal skew angle.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionEffect.VerticalSkew">
            <summary>
            Specifies the vertical skew angle.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionEffect.RotateWithShape">
            <summary>
            Specifies whether the reflection should rotate with the shape if the shape is rotated.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionEffect.HorizontalScale">
            <summary>
            Specifies the horizontal scaling factor, negative scaling causes a flip. (percents)
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.ReflectionEffect.VerticalScale">
            <summary>
            Specifies the vertical scaling factor, negative scaling causes a flip. (percents)
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.SoftEdgeNode">
            <summary>
            Represents a soft edge effect. 
            The edges of the shape are blurred, while the fill is not affected.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.SoftEdgeNode.Radius">
            <summary>
            Specifies the radius of blur to apply to the edges.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.SoftEdgeEffect">
            <summary>
            Represents a soft edge effect. 
            The edges of the shape are blurred, while the fill is not affected.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.SoftEdgeEffect.#ctor">
            <summary>
            Creates new instance of SoftEdge class.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.SoftEdgeEffect.Radius">
            <summary>
            Specifies the radius of blur to apply to the edges.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.Transition.TransitionCornerDirection">
            <summary>
            Represent corner direction transition types.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionCornerDirection.LeftDown">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionCornerDirection.LeftUp">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionCornerDirection.RightDown">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionCornerDirection.RightUp">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionCornerDirection.None">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Transition.TransitionDirection">
            <summary>
            Represent transition direction types.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionDirection.Horizontal">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionDirection.Vertical">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionDirection.None">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Transition.TransitionEightDirection">
            <summary>
            Represent eight direction transition types.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionEightDirection.LeftDown">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionEightDirection.LeftUp">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionEightDirection.RightDown">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionEightDirection.RightUp">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionEightDirection.Left">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionEightDirection.Up">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionEightDirection.Down">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionEightDirection.Right">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionEightDirection.None">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Transition.TransitionInOutDirection">
            <summary>
            Represent in or out direction transition types.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionInOutDirection.In">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionInOutDirection.Out">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionInOutDirection.None">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Transition.TransitionSideDirectionType">
            <summary>
            Represent side direction transition types.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionSideDirectionType.Left">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionSideDirectionType.Up">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionSideDirectionType.Down">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionSideDirectionType.Right">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Transition.GlitterTransitionDirection">
            <summary>
            Represent glitter transition direction types.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.GlitterTransitionDirection.HexagonFromLeft">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.GlitterTransitionDirection.HexagonFromUp">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.GlitterTransitionDirection.HexagonFromDown">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.GlitterTransitionDirection.HexagonFromRight">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.GlitterTransitionDirection.DiamondFromLeft">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.GlitterTransitionDirection.DiamondFromUp">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.GlitterTransitionDirection.DiamondFromDown">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.GlitterTransitionDirection.DiamondFromRight">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Transition.TransitionTwoDirection">
            <summary>
            Represent glitter transition direction types.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionTwoDirection.Left">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionTwoDirection.Right">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Transition.TransitionShredInOutDirection">
            <summary>
            Represent shred inout transition direction types.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionShredInOutDirection.StripIn">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionShredInOutDirection.StripOut">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionShredInOutDirection.RectangleIn">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionShredInOutDirection.RectangleOut">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Transition.TransitionFlythroughInOutDirection">
            <summary>
            Represent flythrough inout transition direction types.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionFlythroughInOutDirection.In">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionFlythroughInOutDirection.Out">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionFlythroughInOutDirection.BounceIn">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionFlythroughInOutDirection.BounceOut">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Transition.TransitionRevealLRDirection">
            <summary>
            Represent reveal leftright transition direction types.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionRevealLRDirection.SmoothlyFromLeft">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionRevealLRDirection.SmoothlyFromRight">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionRevealLRDirection.TroughBlackFromLeft">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionRevealLRDirection.TroughBlackFromRight">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Transition.TransitionSplitDirection">
            <summary>
            Represent Split transition direction types.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionSplitDirection.VerticalOut">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionSplitDirection.VerticalIn">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionSplitDirection.HorizontalOut">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionSplitDirection.HorizontalIn">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Transition.TransitionSoundMode">
            <summary>
            Represent sound mode of transition.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionSoundMode.None">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionSoundMode.StartSound">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionSoundMode.StopPrevoiusSound">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Transition.TransitionSpeed">
            <summary>
            Represent transition speed types.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionSpeed.Fast">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionSpeed.Medium">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionSpeed.Slow">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionSpeed.None">
            <summary />
        </member>
        <member name="T:Spire.Presentation.Drawing.Transition.TransitionType">
            <summary>
            Represent slide show transition type.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionType.None">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionType.Blinds">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionType.Checker">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionType.Circle">
            <summary>
            2010:Shapes.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionType.Comb">
            <summary>
            Supported Only In Office2007.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionType.Cover">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionType.Cut">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionType.Diamond">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionType.Dissolve">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionType.Fade">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionType.Newsflash">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionType.Plus">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionType.Prestige">
            <summary>
            2010:Uncover.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionType.Push">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionType.Random">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionType.RandomBar">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionType.Shred">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionType.Split">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionType.Strips">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionType.Wedge">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionType.Wheel">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionType.Wipe">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Drawing.Transition.TransitionType.Warp">
            <summary>
            2010:Zoom.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Transition.CoverSlideTransition.Direction">
            <summary>
            Direction of transition.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Transition.ZoomSlideTransition.Direction">
            <summary>
            Direction of a transition effect.
            Read/write <see cref="T:Spire.Presentation.Drawing.Transition.TransitionInOutDirection"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.Transition.OptionalBlackTransition">
            <summary>
            Optional black slide transition effect.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.Transition.OptionalBlackTransition.#ctor(Spire.Presentation.Drawing.Transition.TransitionType)">
            <summary>
            Constructor for optional black slide transition effects.
            </summary>
            <param name="type">Type of an optional black transition effect.</param>
        </member>
        <member name="P:Spire.Presentation.Drawing.Transition.OptionalBlackTransition.FromBlack">
            <summary>
            This attribute specifies if the transition will start from a black screen
            (and then transition the new slide over black).
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.Transition.SideDirectionTransition">
            <summary>
            Side direction slide transition effect.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.Transition.SideDirectionTransition.#ctor(Spire.Presentation.Drawing.Transition.TransitionType)">
            <summary>
            Constructor for side direction slide transition effects.
            </summary>
            <param name="type">Type of a transition effect.</param>
        </member>
        <member name="P:Spire.Presentation.Drawing.Transition.SideDirectionTransition.Direction">
            <summary>
            Direction of transition.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.Transition.SplitSlideTransition">
            <summary>
            Split slide transition effect.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.Transition.SplitSlideTransition.#ctor(Spire.Presentation.Drawing.Transition.TransitionType)">
            <summary>
            Constructor for split slide transition effects.
            </summary>
            <param name="type">Type of a split transition effect.</param>
        </member>
        <member name="P:Spire.Presentation.Drawing.Transition.SplitSlideTransition.Direction">
            <summary>
            Direction of transition split.
            Read/write <see cref="T:Spire.Presentation.Drawing.Transition.TransitionInOutDirection"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.Transition.Transition">
            <summary>
            Class for slide transition effects.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.Transition.Transition.#ctor(Spire.Presentation.Drawing.Transition.TransitionType)">
            <summary>
            Slide transition effect constructor.
            </summary>
            <param name="type">Type of a transition effect.</param>
        </member>
        <member name="P:Spire.Presentation.Drawing.Transition.WheelSlideTransition.Spokes">
            <summary>
            Number spokes of wheel transition.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.Transition.SlideShowTransition">
            <summary>
            Represents slide show transition.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Transition.SlideShowTransition.WavData">
            <summary>
            Gets or sets the embedded audio data.
            Read-only <see cref="T:System.Byte"/>[].
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Transition.SlideShowTransition.SoundMode">
            <summary>
            Set or returns sound mode for slide transition.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Transition.SlideShowTransition.BuiltInSound">
            <summary>
            Specifies whether or not this sound is a built-in sound. If this attribute is set to true then
            the generating application is alerted to check the name attribute specified for this sound
            in it's list of built-in sounds and can then surface a custom name or UI as needed.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Transition.SlideShowTransition.Loop">
            <summary>
            This attribute specifies if the sound will loop until the next sound event occurs in
            slideshow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Transition.SlideShowTransition.AdvanceOnClick">
            <summary>
            Specifies whether a mouse click will advance the slide or not. If this attribute is not
            specified then a value of true is assumed
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Transition.SlideShowTransition.AdvanceAfterTime">
            <summary>
            Specifies the time, in milliseconds, after which the transition should start. This setting
            may be used in conjunction with the advClick attribute. If this attribute is not specified
            then it is assumed that no auto-advance will occur.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Transition.SlideShowTransition.Speed">
            <summary>
            Specifies the transition speed that is to be used when transitioning from the current slide
            to the next.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Transition.SlideShowTransition.Duration">
            <summary>
            Specifies the transition duration.take effect above office 2010. 
            millisecond.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Transition.SlideShowTransition.Value">
            <summary>
            Slide show transition.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Transition.SlideShowTransition.Type">
            <summary>
            Type of transition
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.Transition.SlideShowTransition.Option">
            <summary>
            Option of transition
            </summary>
        </member>
        <member name="T:Spire.Presentation.Drawing.TimeLine.TimeNodeAnimateRotationBehavior">
            <summary>
            Summary description for TimeNodeParallel.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Drawing.TimeLine.TimeNodeAudio.m_presentation">
            <summary>
            m_presentation current instance
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.TimeLine.TimeNodeAudio.Presentation">
            <summary>
            Presentation current instance
            </summary>
        </member>
        <member name="M:Spire.Presentation.Drawing.TimeLine.TimeNodeAudio.SetAudioData(System.IO.FileInfo)">
            <summary>
            setTimeNodeAudio
            </summary>
            <param name="file">audio file</param>
        </member>
        <member name="M:Spire.Presentation.Drawing.TimeLine.TimeNodeAudio.GetAudioData">
            <summary>
            GetTimeNodeAudio : get audio bytes
            </summary>
            <returns></returns>
        </member>
        <member name="P:Spire.Presentation.Drawing.TimeLine.TimeNodeAudio.Volume">
            <summary>
            Volume :value range 0 - 1
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.TimeLine.TimeNodeAudio.IsMute">
            <summary>
            is mute default:false
            </summary>
        </member>
        <member name="P:Spire.Presentation.Drawing.TimeLine.TimeNodeAudio.SoundName">
            <summary>
            SoundName
            </summary>
        </member>
        <member name="P:Spire.Presentation.AudioCD.StartTrack">
            <summary>
            Gets or sets a start track index.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.AudioCD.StartTime">
            <summary>
            Gets or sets a start track time.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.AudioCD.EndTrack">
            <summary>
            Gets or sets a last track index
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.AudioCD.EndTime">
            <summary>
            Gets or sets a last track time.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITextFrameProperties.Paragraphs">
            <summary>
            Gets the list of all paragraphs in a frame.
            Read-only <see cref="T:Spire.Presentation.Collections.ParagraphCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITextFrameProperties.Text">
            <summary>
            Gets or sets the plain text for a TextFrame.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:Spire.Presentation.ITextFrameProperties.TextStyle">
            <summary>
            Gets text's style.
            Readonly <see cref="T:Spire.Presentation.TextStyle"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITextFrameProperties.MarginLeft">
            <summary>
            Gets or sets the left margin (points) in a TextFrame.
            Read/write <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITextFrameProperties.MarginRight">
            <summary>
            Gets or sets the right margin (points) in a TextFrame.
            Read/write <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITextFrameProperties.MarginTop">
            <summary>
            Gets or sets the top margin (points) in a TextFrame.
            Read/write <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITextFrameProperties.MarginBottom">
            <summary>
            Gets or sets the bottom margin (points) in a TextFrame.
            Read/write <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITextFrameProperties.TextRange">
            <summary>
            Text range of text frame.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITextFrameProperties.WordWrap">
            <summary>
            <b>True</b> if text is wrapped at TextFrame's margins.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITextFrameProperties.AnchoringType">
            <summary>
            Gets or sets vertical anchor text in a TextFrame.
            Read/write <see cref="T:Spire.Presentation.TextAnchorType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITextFrameProperties.IsCentered">
            <summary>
            Indicates, whether text should be centered in box horizontally.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITextFrameProperties.VerticalTextType">
            <summary>
            Indicates text orientation.
            Read/write <see cref="P:Spire.Presentation.ITextFrameProperties.VerticalTextType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITextFrameProperties.AutofitType">
            <summary>
            Gets or sets text's autofit mode.
            Read/write <see cref="T:Spire.Presentation.TextAutofitType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITextFrameProperties.Slide">
            <summary>
            Gets the parent slide of a TextFrame.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITextFrameProperties.Parent">
            <summary>
            Reference to Parent object. Read-only.
            </summary>
        </member>
        <member name="M:Spire.Presentation.ITextFrameProperties.Dispose">
            <summary>
            Dispose object and free resources.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITextFrameProperties.TextThreeD">
            <summary>
            Gets the FormatThreeD object that 3d effect properties for text.
            Read-only <see cref="T:Spire.Presentation.Drawing.FormatThreeD"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.LinearGradientFill.Angle">
            <summary>
            Gets or sets the angle of a gradient.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.LinearGradientFill.IsScaled">
            <summary>
            Indicates whether a gradient is scaled.
            Read/write <see cref="T:Spire.Presentation.TriState"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeThreeD.ContourWidth">
            <summary>
            Gets or sets the width of a 3D contour.
            Read/write <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeThreeD.ExtrusionHeight">
            <summary>
            Gets or sets the height of an extrusion effect.
            Read/write <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeThreeD.Depth">
            <summary>
            Gets or sets the depth of a 3D shape.
            Read/write <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeThreeD.TopBevel">
            <summary>
            Gets or sets the type of a top 3D bevel.
            Read <see cref="T:Spire.Presentation.ShapeBevelStyle"/>,
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeThreeD.BottomBevel">
            <summary>
            Gets or sets the type of a bottom 3D bevel.
            Read <see cref="T:Spire.Presentation.ShapeBevelStyle"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeThreeD.ContourColor">
            <summary>
            Gets or sets the color of a contour.
            Read/write <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeThreeD.ExtrusionColor">
            <summary>
            Gets or sets the color of an extrusion.
            Read/write <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeThreeD.BevelColorMode">
            <summary>
            Gets or sets the color mode used for 3D effects.
            Read/write <see cref="T:Spire.Presentation.Drawing.BevelColorType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeThreeD.PresetMaterial">
            <summary>
            Gets or sets the type of a material.
            Read/write <see cref="T:Spire.Presentation.PresetMaterialType"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.AudioPlayMode">
            <summary>
            Indicates how a sound is played.
            </summary>
        </member>
        <member name="F:Spire.Presentation.AudioPlayMode.Mixed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.AudioPlayMode.Auto">
            <summary>
            Play automatically.
            </summary>
        </member>
        <member name="F:Spire.Presentation.AudioPlayMode.OnClick">
            <summary>
            Play on click.
            </summary>
        </member>
        <member name="F:Spire.Presentation.AudioPlayMode.Presentation">
            <summary>
            Play on all slides.
            </summary>
        </member>
        <member name="T:Spire.Presentation.AudioVolumeType">
            <summary>
            Indicates audio volume.
            </summary>
        </member>
        <member name="F:Spire.Presentation.AudioVolumeType.Mixed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.AudioVolumeType.Mute">
            <summary>
            Zero sound volume.
            </summary>
        </member>
        <member name="F:Spire.Presentation.AudioVolumeType.Low">
            <summary>
            Low sound volume.
            </summary>
        </member>
        <member name="F:Spire.Presentation.AudioVolumeType.Medium">
            <summary>
            Medium sound volume.
            </summary>
        </member>
        <member name="F:Spire.Presentation.AudioVolumeType.Loud">
            <summary>
            Loud sound volume.
            </summary>
        </member>
        <member name="T:Spire.Presentation.TextBulletType">
            <summary>
            Represents the type of the extended bullets.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextBulletType.UnDefined">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextBulletType.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextBulletType.Symbol">
            <summary>
            Sysmbol bullets.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextBulletType.Numbered">
            <summary>
            Numbered bullets.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextBulletType.Picture">
            <summary>
            Picture bullets.
            </summary>
        </member>
        <member name="T:Spire.Presentation.PresetCameraType">
            <summary>
            Indicates camera preset type.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.None">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.IsometricBottomDown">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.IsometricBottomUp">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.IsometricLeftDown">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.IsometricLeftUp">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.IsometricOffAxis1Left">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.IsometricOffAxis1Right">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.IsometricOffAxis1Top">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.IsometricOffAxis2Left">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.IsometricOffAxis2Right">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.IsometricOffAxis2Top">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.IsometricOffAxis3Bottom">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.IsometricOffAxis3Left">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.IsometricOffAxis3Right">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.IsometricOffAxis4Bottom">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.IsometricOffAxis4Left">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.IsometricOffAxis4Right">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.IsometricRightDown">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.IsometricRightUp">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.IsometricTopDown">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.IsometricTopUp">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.LegacyObliqueBottom">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.LegacyObliqueBottomLeft">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.LegacyObliqueBottomRight">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.LegacyObliqueFront">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.LegacyObliqueLeft">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.LegacyObliqueRight">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.LegacyObliqueTop">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.LegacyObliqueTopLeft">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.LegacyObliqueTopRight">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.LegacyPerspectiveBottom">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.LegacyPerspectiveBottomLeft">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.LegacyPerspectiveBottomRight">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.LegacyPerspectiveFront">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.LegacyPerspectiveLeft">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.LegacyPerspectiveRight">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.LegacyPerspectiveTop">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.LegacyPerspectiveTopLeft">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.LegacyPerspectiveTopRight">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.ObliqueBottom">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.ObliqueBottomLeft">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.ObliqueBottomRight">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.ObliqueLeft">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.ObliqueRight">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.ObliqueTop">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.ObliqueTopLeft">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.ObliqueTopRight">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.OrthographicFront">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.PerspectiveAbove">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.PerspectiveAboveLeftFacing">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.PerspectiveAboveRightFacing">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.PerspectiveBelow">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.PerspectiveContrastingLeftFacing">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.PerspectiveContrastingRightFacing">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.PerspectiveFront">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.PerspectiveHeroicExtremeLeftFacing">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.PerspectiveHeroicExtremeRightFacing">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.PerspectiveHeroicLeftFacing">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.PerspectiveHeroicRightFacing">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.PerspectiveLeft">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.PerspectiveRelaxed">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.PerspectiveRelaxedModerately">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetCameraType.PerspectiveRight">
            <summary />
        </member>
        <member name="T:Spire.Presentation.TableBorderType">
            <summary>
            Represents table border style.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableBorderType.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableBorderType.All">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableBorderType.Inside">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableBorderType.Outside">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableBorderType.ToggleTop">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableBorderType.ToggleBottom">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableBorderType.ToggleLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableBorderType.ToggleRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableBorderType.InsideHorizontal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableBorderType.InsideVertical">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableBorderType.DiagonalDown">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableBorderType.DiagonalUp">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Presentation.FontAlignmentType">
            <summary>
            Represents vertical font alignment.
            </summary>
        </member>
        <member name="F:Spire.Presentation.FontAlignmentType.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.FontAlignmentType.Auto">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.FontAlignmentType.Top">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.FontAlignmentType.Center">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.FontAlignmentType.Bottom">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.FontAlignmentType.Baseline">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Presentation.FontCollectionIndex">
            <summary>
            Represents font's index in a collection.
            </summary>
        </member>
        <member name="F:Spire.Presentation.FontCollectionIndex.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.FontCollectionIndex.Minor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.FontCollectionIndex.Major">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Presentation.HyperlinkActionType">
            <summary>
            Represents a type of hyperlink action.
            </summary>
        </member>
        <member name="F:Spire.Presentation.HyperlinkActionType.None">
            <summary>
            Unrecognized action type.
            </summary>
        </member>
        <member name="F:Spire.Presentation.HyperlinkActionType.NoAction">
            <summary>
            No action.
            </summary>
        </member>
        <member name="F:Spire.Presentation.HyperlinkActionType.Hyperlink">
            <summary>
            hyperlink.
            </summary>
        </member>
        <member name="F:Spire.Presentation.HyperlinkActionType.GotoFirstSlide">
            <summary>
            Goto the first slide of the presentation.
            </summary>
        </member>
        <member name="F:Spire.Presentation.HyperlinkActionType.GotoPrevSlide">
            <summary>
            Goto the previous slide.
            </summary>
        </member>
        <member name="F:Spire.Presentation.HyperlinkActionType.GotoNextSlide">
            <summary>
            Goto the next slide.
            </summary>
        </member>
        <member name="F:Spire.Presentation.HyperlinkActionType.GotoLastSlide">
            <summary>
            Goto the last slide of the presentation.
            </summary>
        </member>
        <member name="F:Spire.Presentation.HyperlinkActionType.GotoEndShow">
            <summary>
            Goto the end of slideshow.
            </summary>
        </member>
        <member name="F:Spire.Presentation.HyperlinkActionType.GotoLastViewedSlide">
            <summary>
            Goto the last viewed slide.
            </summary>
        </member>
        <member name="F:Spire.Presentation.HyperlinkActionType.GotoSlide">
            <summary>
            Goto the specific slide, referred by <see cref="P:Spire.Presentation.ClickHyperlink.TargetSlide"/> property.
            </summary>
        </member>
        <member name="F:Spire.Presentation.HyperlinkActionType.StartCustomSlideShow">
            <summary>
            Start custom slideshow.
            </summary>
        </member>
        <member name="F:Spire.Presentation.HyperlinkActionType.OpenFile">
            <summary>
            Open file.
            </summary>
        </member>
        <member name="F:Spire.Presentation.HyperlinkActionType.OpenPresentation">
            <summary>
            Open presentation.
            </summary>
        </member>
        <member name="F:Spire.Presentation.HyperlinkActionType.StartStopMedia">
            <summary>
            Start/stop playing mediafile.
            </summary>
        </member>
        <member name="F:Spire.Presentation.HyperlinkActionType.StartMacro">
            <summary>
            Start executing macro script.
            </summary>
        </member>
        <member name="F:Spire.Presentation.HyperlinkActionType.StartProgram">
            <summary>
            Start program.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ImageTransformOperationEEEE.alphaBiLevel">
            <summary>
            Alpha Bi-Level Effect
            </summary>
        </member>
        <member name="F:Spire.Presentation.ImageTransformOperationEEEE.biLevel">
            <summary>
            Bi-Level (Black/White) Effect
            </summary>
        </member>
        <member name="F:Spire.Presentation.ImageTransformOperationEEEE.clrRepl">
            <summary>
            Solid Color Replacement
            </summary>
        </member>
        <member name="T:Spire.Presentation.LightingDirectionType">
            <summary>
            Indicates light directions.
            </summary>
        </member>
        <member name="F:Spire.Presentation.LightingDirectionType.None">
            <summary />
        </member>
        <member name="F:Spire.Presentation.LightingDirectionType.TopLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LightingDirectionType.Top">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LightingDirectionType.TopRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LightingDirectionType.Right">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LightingDirectionType.BottomRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LightingDirectionType.Bottom">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LightingDirectionType.BottomLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LightingDirectionType.Left">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Presentation.PresetLightRigType">
            <summary>
            Indicates light preset types.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.None">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.Balanced">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.BrightRoom">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.Chilly">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.Contrasting">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.Flat">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.Flood">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.Freezing">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.Glow">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.Harsh">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.LegacyFlat1">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.LegacyFlat2">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.LegacyFlat3">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.LegacyFlat4">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.LegacyHarsh1">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.LegacyHarsh2">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.LegacyHarsh3">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.LegacyHarsh4">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.LegacyNormal1">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.LegacyNormal2">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.LegacyNormal3">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.LegacyNormal4">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.Morning">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.Soft">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.Sunrise">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.Sunset">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.ThreePt">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetLightRigType.TwoPt">
            <summary />
        </member>
        <member name="T:Spire.Presentation.LineEndLength">
            <summary>
            Represents the length of an arrowhead.
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineEndLength.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineEndLength.Short">
            <summary>
             Represents the length of Arrow Size 1 , Arrow Size 4 and Arrow Size 7.
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineEndLength.Medium">
            <summary>
             Represents the length of Arrow Size 2 , Arrow Size 5 and Arrow Size 8.
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineEndLength.Long">
            <summary>
             Represents the length of Arrow Size 3 , Arrow Size 6 and Arrow Size 9.
            </summary>
        </member>
        <member name="T:Spire.Presentation.LineEndType">
            <summary>
            Represents the style of an arrowhead.
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineEndType.UnDefined">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineEndType.None">
            <summary>
             No Arrow.
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineEndType.TriangleArrowHead">
            <summary>
             Arrows.
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineEndType.StealthArrow">
            <summary>
             Stealth Arrow.
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineEndType.Diamond">
            <summary>
             Diamond Arrow.
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineEndType.Oval">
            <summary>
             Oval Arrow
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineEndType.NoEnd">
            <summary>
             Open Arrow
            </summary>
        </member>
        <member name="T:Spire.Presentation.LineEndWidth">
            <summary>
            Represents the width of an arrowhead.
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineEndWidth.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineEndWidth.Narrow">
            <summary>
             Represents the width of Arrow Size 1 , Arrow Size 2 and Arrow Size 3.
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineEndWidth.Medium">
            <summary>
             Represents the width of Arrow Size 4 , Arrow Size 5 and Arrow Size 6.
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineEndWidth.Wide">
            <summary>
             Represents the width of Arrow Size 7 , Arrow Size 8 and Arrow Size 9.
            </summary>
        </member>
        <member name="T:Spire.Presentation.LineCapStyle">
            <summary>
            Represents the line cap style.
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineCapStyle.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineCapStyle.Round">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineCapStyle.Square">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineCapStyle.Flat">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Presentation.LineDashStyleType">
            <summary>
            Represents the line dash style.
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineDashStyleType.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineDashStyleType.Solid">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineDashStyleType.Dot">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineDashStyleType.Dash">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineDashStyleType.LargeDash">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineDashStyleType.DashDot">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineDashStyleType.LargeDashDot">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineDashStyleType.LargeDashDotDot">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineDashStyleType.SystemDash">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineDashStyleType.SystemDot">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineDashStyleType.SystemDashDot">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineDashStyleType.SystemDashDotDot">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineDashStyleType.Custom">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Presentation.LineJoinType">
            <summary>
            Represents the lines join style.
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineJoinType.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineJoinType.Round">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineJoinType.Bevel">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.LineJoinType.Miter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Presentation.TextLineStyle">
            <summary>
            Represents the style of a line.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextLineStyle.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextLineStyle.Single">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextLineStyle.ThinThin">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextLineStyle.ThinThick">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextLineStyle.ThickThin">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextLineStyle.ThickBetweenThin">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Presentation.PresetMaterialType">
            <summary>
            Indicates material of shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PresetMaterialType.None">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetMaterialType.Clear">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetMaterialType.DkEdge">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetMaterialType.Flat">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetMaterialType.LegacyMatte">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetMaterialType.LegacyMetal">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetMaterialType.LegacyPlastic">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetMaterialType.LegacyWireframe">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetMaterialType.Matte">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetMaterialType.Metal">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetMaterialType.Plastic">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetMaterialType.Powder">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetMaterialType.SoftEdge">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetMaterialType.Softmetal">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetMaterialType.TranslucentPowder">
            <summary />
        </member>
        <member name="F:Spire.Presentation.PresetMaterialType.WarmMatte">
            <summary />
        </member>
        <member name="T:Spire.Presentation.TriState">
            <summary>
            Represents triple boolean values.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TriState.Null">
            <summary>
            Boolean value is Null.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TriState.False">
            <summary>
            False value.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TriState.True">
            <summary>
            True value.
            </summary>
        </member>
        <member name="T:Spire.Presentation.NumberedBulletStyle">
            <summary>
            Represents the style of the numbered bullets.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletAlphaLCPeriod">
            <summary>
            Lowercase alphabetical characters with a period. 
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletAlphaUCPeriod">
            <summary>
            Uppercase alphabetical characters with a period.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletArabicParenRight">
            <summary>
            Arabic numerals with closing parenthesis.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletArabicPeriod">
            <summary>
            Arabic numerals with a period.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletRomanLCParenBoth">
            <summary>
            Lowercase Roman numerals with both parentheses.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletRomanLCParenRight">
            <summary>
            Lowercase Roman numerals with closing parenthesis.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletRomanLCPeriod">
            <summary>
            Lowercase Roman numerals with period.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletRomanUCPeriod">
            <summary>
            Uppercase Roman numerals with period.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletAlphaLCParenBoth">
            <summary>
            Lowercase alphabetical characters with both parentheses.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletAlphaLCParenRight">
            <summary>
            Lowercase alphabetical characters with closing parenthesis.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletAlphaUCParenBoth">
            <summary>
            Uppercase alphabetical characters with both parentheses.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletAlphaUCParenRight">
            <summary>
            Uppercase alphabetical characters with closing parenthesis.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletArabicParenBoth">
            <summary>
            Arabic numerals with both parentheses.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletArabicPlain">
            <summary>
            Arabic numerals.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletRomanUCParenBoth">
            <summary>
            Uppercase Roman numerals with both parentheses.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletRomanUCParenRight">
            <summary>
            Uppercase Roman numerals with closing parenthesis.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletSimpChinPlain">
            <summary>
            Simplified Chinese without a period.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletSimpChinPeriod">
            <summary>
            Simplified Chinese with a period.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletCircleNumDBPlain">
            <summary>
            Double-byte circled number for values up to 10.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletCircleNumWDWhitePlain">
            <summary>
            Text colored number with same color circle drawn around it.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletCircleNumWDBlackPlain">
            <summary>
            Shadow color number with circular background of normal text color.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletTradChinPlain">
            <summary>
            Traditional Chinese without a period.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletTradChinPeriod">
            <summary>
            Traditional Chinese with a period.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletArabicAlphaDash">
            <summary>
            Arabic language alphabetical characters with a dash.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletArabicAbjadDash">
            <summary>
            Arabic Abjad alphabets with a dash.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletHebrewAlphaDash">
            <summary>
            Hebrew language alphabetical characters with a dash.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletKanjiKoreanPlain">
            <summary>
            Japanese/Korean numbers without a period.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletKanjiKoreanPeriod">
            <summary>
            Japanese/Korean numbers with a period.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletArabicDBPlain">
            <summary>
            Double-byte Arabic numbering scheme (no punctuation).
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletArabicDBPeriod">
            <summary>
            Double-byte Arabic numbering scheme with double-byte period.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletThaiAlphaPeriod">
            <summary>
            Thai Alpha period.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletThaiAlphaParenRight">
            <summary>
            Thai Alpha Paren right.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletThaiAlphaParenBoth">
            <summary>
            Thai Alpha Paren both.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletThaiNumPeriod">
            <summary>
            Thai Num period.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletThaiNumParenRight">
            <summary>
            Thai Num Paren right.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletThaiNumParenBoth">
            <summary>
            Thai Num Paren both.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletHindiAlphaPeriod">
            <summary>
            Hindi Alpha period.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletHindiNumPeriod">
            <summary>
            Hindi Num period.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletKanjiSimpChinDBPeriod">
            <summary>
            Kanji Simple Chinese DBPeriod.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletHindiNumParenRight">
            <summary>
            Hindi Num Paren right.
            </summary>
        </member>
        <member name="F:Spire.Presentation.NumberedBulletStyle.BulletHindiAlpha1Period">
            <summary>
            Hindi Alpha1 period.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Direction">
            <summary>
            Represents the orientation of a shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Direction.Horizontal">
            <summary>
            Horizontal.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Direction.Vertical">
            <summary>
            Vertical.
            </summary>
        </member>
        <member name="T:Spire.Presentation.PlaceholderSize">
            <summary>
            Represents the size of a placeholder.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PlaceholderSize.Full">
            <summary>
            Full.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PlaceholderSize.Half">
            <summary>
            Half.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PlaceholderSize.Quarter">
            <summary>
            Quarter.
            </summary>
        </member>
        <member name="T:Spire.Presentation.PlaceholderType">
            <summary>
            Represents the type of a placeholder.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PlaceholderType.Title">
            <summary>
            Title.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PlaceholderType.Body">
            <summary>
            Body.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PlaceholderType.CenteredTitle">
            <summary>
            Centered Title.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PlaceholderType.Subtitle">
            <summary>
            Subtitle.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PlaceholderType.DateAndTime">
            <summary>
            Date and Time.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PlaceholderType.SlideNumber">
            <summary>
            Slide Number.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PlaceholderType.Footer">
            <summary>
            Footer.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PlaceholderType.Header">
            <summary>
            Header.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PlaceholderType.Object">
            <summary>
            Object.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PlaceholderType.Chart">
            <summary>
            Chart.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PlaceholderType.Table">
            <summary>
            Table.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PlaceholderType.ClipArt">
            <summary>
            Clip Art.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PlaceholderType.Diagram">
            <summary>
            Diagram.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PlaceholderType.Media">
            <summary>
            Media.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PlaceholderType.SlideImage">
            <summary>
            Slide Image.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PlaceholderType.Picture">
            <summary>
            Picture.
            </summary>
        </member>
        <member name="T:Spire.Presentation.DocumentEditException">
            <summary>
            Represents an exception thrown when edit presentation error is detected.
            </summary>
        </member>
        <member name="M:Spire.Presentation.DocumentEditException.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Spire.Presentation.DocumentEditException.#ctor(System.String)">
            <summary>
            Constructor allowing a message to be added to this exception.
            </summary>
            <param name="message">message</param>
        </member>
        <member name="M:Spire.Presentation.DocumentEditException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor for an exception containing a message and an embedded exception.
            </summary>
            <param name="message">message </param>
            <param name="exception">original exception</param>
        </member>
        <member name="T:Spire.Presentation.DocumentReadException">
            <summary>
            Represents an exception about reading.
            </summary>
        </member>
        <member name="M:Spire.Presentation.DocumentReadException.#ctor">
            <summary>
            constructor.
            </summary>
        </member>
        <member name="M:Spire.Presentation.DocumentReadException.#ctor(System.String)">
            <summary>
            Constructor with exception message.
            </summary>
            <param name="message">message</param>
        </member>
        <member name="M:Spire.Presentation.DocumentReadException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor with exception message.
            </summary>
            <param name="message">message </param>
            <param name="exception">original exception</param>
        </member>
        <member name="T:Spire.Presentation.DocumentUnkownFormatException">
            <summary>
            Exception about file format not supported.
            </summary>
        </member>
        <member name="M:Spire.Presentation.DocumentUnkownFormatException.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Spire.Presentation.DocumentUnkownFormatException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message">message</param>
        </member>
        <member name="M:Spire.Presentation.DocumentUnkownFormatException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">message </param>
            <param name="exception">original exception</param>
        </member>
        <member name="T:Spire.Presentation.KnownColors">
            <summary>
            Represents predefined color presets.
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.None">
            <summary>
            Color preset is not defined.
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.AliceBlue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.AntiqueWhite">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Aqua">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Aquamarine">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Azure">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Beige">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Bisque">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Black">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.BlanchedAlmond">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Blue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.BlueViolet">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Brown">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.BurlyWood">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.CadetBlue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Chartreuse">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Chocolate">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Coral">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.CornflowerBlue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Cornsilk">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Crimson">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Cyan">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.DarkBlue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.DarkCyan">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.DarkGoldenrod">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.DarkGray">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.DarkGreen">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.DarkKhaki">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.DarkMagenta">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.DarkOliveGreen">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.DarkOrange">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.DarkOrchid">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.DarkRed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.DarkSalmon">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.DarkSeaGreen">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.DarkSlateBlue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.DarkSlateGray">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.DarkTurquoise">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.DarkViolet">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.DeepPink">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.DeepSkyBlue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.DimGray">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.DodgerBlue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Firebrick">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.FloralWhite">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.ForestGreen">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Fuchsia">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Gainsboro">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.GhostWhite">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Gold">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Goldenrod">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Gray">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Green">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.GreenYellow">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Honeydew">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.HotPink">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.IndianRed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Indigo">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Ivory">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Khaki">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Lavender">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.LavenderBlush">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.LawnGreen">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.LemonChiffon">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.LightBlue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.LightCoral">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.LightCyan">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.LightGoldenrodYellow">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.LightGray">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.LightGreen">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.LightPink">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.LightSalmon">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.LightSeaGreen">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.LightSkyBlue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.LightSlateGray">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.LightSteelBlue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.LightYellow">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Lime">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.LimeGreen">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Linen">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Magenta">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Maroon">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.MediumAquamarine">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.MediumBlue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.MediumOrchid">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.MediumPurple">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.MediumSeaGreen">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.MediumSlateBlue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.MediumSpringGreen">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.MediumTurquoise">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.MediumVioletRed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.MidnightBlue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.MintCream">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.MistyRose">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Moccasin">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.NavajoWhite">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Navy">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.OldLace">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Olive">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.OliveDrab">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Orange">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.OrangeRed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Orchid">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.PaleGoldenrod">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.PaleGreen">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.PaleTurquoise">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.PaleVioletRed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.PapayaWhip">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.PeachPuff">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Peru">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Pink">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Plum">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.PowderBlue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Purple">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Red">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.RosyBrown">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.RoyalBlue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.SaddleBrown">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Salmon">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.SandyBrown">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.SeaGreen">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.SeaShell">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Sienna">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Silver">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.SkyBlue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.SlateBlue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.SlateGray">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Snow">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.SpringGreen">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.SteelBlue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Tan">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Teal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Thistle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Tomato">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Turquoise">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Violet">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Wheat">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.White">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.WhiteSmoke">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.Yellow">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.KnownColors.YellowGreen">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Presentation.PresetShadowValue">
            <summary>
            Represents a preset for a shadow effect.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PresetShadowValue.TopLeftDrop">
            <summary>
            Represents Top Left Drop Shadow.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PresetShadowValue.TopLeftLargeDrop">
            <summary>
            Represents Top Left Large Drop Shadow.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PresetShadowValue.BackLeftLongPerspective">
            <summary>
            Represents Back Left Long Perspective Shadow
            </summary>
        </member>
        <member name="F:Spire.Presentation.PresetShadowValue.BackRightLongPerspective">
            <summary>
            Represents Back Right Long Perspective Shadow
            </summary>
        </member>
        <member name="F:Spire.Presentation.PresetShadowValue.TopLeftDoubleDrop">
            <summary>
            Represents Top Left Double Drop Shadow.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PresetShadowValue.BottomRightSmallDrop">
            <summary>
            Represents Bottom Right Small Drop Shadow.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PresetShadowValue.FrontLeftLongPerspective">
            <summary>
            Represents Front Left Long Perspective Shadow.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PresetShadowValue.FrontRightLongPerspective">
            <summary>
            Represents Front Right Long Perspective Shadow.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PresetShadowValue.OuterBox3D">
            <summary>
            Represents Outer Box Shadow 3D.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PresetShadowValue.InnerBox3D">
            <summary>
            Represents Inner Box Shadow 3D.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PresetShadowValue.BackCenterPerspective">
            <summary>
            Represents Back Center Perspective Shadow.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PresetShadowValue.TopRightDrop">
            <summary>
            Represents Top Right Drop Shadow.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PresetShadowValue.FrontBottom">
            <summary>
            Represents Front Bottom Shadow.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PresetShadowValue.BackLeftPerspective">
            <summary>
            Represents Back Left Perspective Shadow.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PresetShadowValue.BackRightPerspective">
            <summary>
            Represents Back Right Perspective Shadow.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PresetShadowValue.BottomLeftDrop">
            <summary>
            Represents Bottom Left Drop Shadow.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PresetShadowValue.BottomRightDrop">
            <summary>
            Represents Bottom Right Drop Shadow.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PresetShadowValue.FrontLeftPerspective">
            <summary>
            Represents Front Left Perspective Shadow.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PresetShadowValue.FrontRightPerspective">
            <summary>
            Represents Front Right Perspective Shadow.
            </summary>
        </member>
        <member name="F:Spire.Presentation.PresetShadowValue.TopLeftSmallDrop">
            <summary>
            Represents Top Left Small Drop Shadow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.RecolorInfoEntryExCollection.Count">
            <summary>
            Gets the number of elements actually contained in the collection.
            </summary>
        </member>
        <member name="M:Spire.Presentation.RecolorInfoEntryExCollection.GetEnumerator">
            <summary>
            Gets an enumerator for the entire collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the entire collection.</returns>
        </member>
        <member name="T:Spire.Presentation.RectangleAlignment">
            <summary>
            Defines 2-dimension allignment.
            </summary>
        </member>
        <member name="F:Spire.Presentation.RectangleAlignment.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.RectangleAlignment.TopLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.RectangleAlignment.Top">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.RectangleAlignment.TopRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.RectangleAlignment.Left">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.RectangleAlignment.Center">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.RectangleAlignment.Right">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.RectangleAlignment.BottomLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.RectangleAlignment.Bottom">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.RectangleAlignment.BottomRight">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Presentation.ShapeElementFillSource">
            <summary>
            Represents how shape element should be filled.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeElementFillSource.NoFill">
            <summary>
            Don't fill primitive.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeElementFillSource.Shape">
            <summary>
            Use shape's fill.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeElementFillSource.Lighten">
            <summary>
            Use lighten shape's fill.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeElementFillSource.LightenLess">
            <summary>
            Use less lighten shape's fill.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeElementFillSource.Darken">
            <summary>
            Use darken shape's fill.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeElementFillSource.DarkenLess">
            <summary>
            Use less darken shape's fill.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeElementFillSource.OwnFill">
            <summary>
            Use own color.
            </summary>
        </member>
        <member name="T:Spire.Presentation.ShapeElementStrokeSource">
            <summary>
            Represents how shape element should be drawn.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeElementStrokeSource.NoStroke">
            <summary>
            Don't stroke primitive.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeElementStrokeSource.Shape">
            <summary>
            Use shape's LineFormat.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeElementStrokeSource.OwnStroke">
            <summary>
            Use own stroke.
            </summary>
        </member>
        <member name="T:Spire.Presentation.ShapeElementType">
            <summary>
            Represents the type of a ShapeElement.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeElementType.Shape">
            <summary>
            Shape's basic geometry.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeElementType.Shadow">
            <summary>
            Shape's shadow.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeElementType.Extrusion">
            <summary>
            Extrusion of 3D shape.
            </summary>
        </member>
        <member name="T:Spire.Presentation.ShapeType">
            <summary>
            Represents preset geometry of geometry shapes.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Custom">
            <summary>
            Custom shape.
            This is return-only value.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Line">
            <summary>
            Line Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.LineInverse">
            <summary>
            Line Inverse Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Triangle">
            <summary>
            Triangle Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.RightTriangle">
            <summary>
            Right Triangle Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Rectangle">
            <summary>
            Rectangle Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Diamond">
            <summary>
            Diamond Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Parallelogram">
            <summary>
            Parallelogram Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Trapezoid">
            <summary>
            Trapezoid Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.NonIsoscelesTrapezoid">
            <summary>
            Non-Isosceles Trapezoid Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Pentagon">
            <summary>
            Pentagon Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Hexagon">
            <summary>
            Hexagon Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Heptagon">
            <summary>
            Heptagon Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Octagon">
            <summary>
            Octagon Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Decagon">
            <summary>
            Decagon Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Dodecagon">
            <summary>
            Dodecagon Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.FourPointedStar">
            <summary>
            Four Pointed Star Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.FivePointedStar">
            <summary>
            Five Pointed Star Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.SixPointedStar">
            <summary>
            Six Pointed Star Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.SevenPointedStar">
            <summary>
            Seven Pointed Star Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.EightPointedStar">
            <summary>
            Eight Pointed Star Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.TenPointedStar">
            <summary>
            Ten Pointed Star Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.TwelvePointedStar">
            <summary>
            Twelve Pointed Star Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.SixteenPointedStar">
            <summary>
            Sixteen Pointed Star Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.TwentyFourPointedStar">
            <summary>
            Twenty Four Pointed Star Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.ThirtyTwoPointedStar">
            <summary>
            Thirty Two Pointed Star Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.RoundCornerRectangle">
            <summary>
            Round Corner Rectangle Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.OneRoundCornerRectangle">
            <summary>
            One Round Corner Rectangle Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.TwoSamesideRoundCornerRectangle">
            <summary>
            Two Same-side Round Corner Rectangle Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.TwoDiagonalRoundCornerRectangle">
            <summary>
            Two Diagonal Round Corner Rectangle Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.OneSnipOneRoundCornerRectangle">
            <summary>
            One Snip One Round Corner Rectangle Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.OneSnipCornerRectangle">
            <summary>
            One Snip Corner Rectangle Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.TwoSamesideSnipCornerRectangle">
            <summary>
            Two Same-side Snip Corner Rectangle Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.TwoDiagonalSnipCornerRectangle">
            <summary>
            Two Diagonal Snip Corner Rectangle Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Plaque">
            <summary>
            Plaque Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Ellipse">
            <summary>
            Ellipse Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Teardrop">
            <summary>
            Teardrop Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.HomePlate">
            <summary>
            Home Plate Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Chevron">
            <summary>
            Chevron Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.PieWedge">
            <summary>
            Pie Wedge Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Pie">
            <summary>
            Pie Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.BlockArc">
            <summary>
            Block Arc Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Donut">
            <summary>
            Donut Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.NoSmoking">
            <summary>
            No Smoking Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.RightArrow">
            <summary>
            Right Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.LeftArrow">
            <summary>
            Left Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.UpArrow">
            <summary>
            Up Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.DownArrow">
            <summary>
            Down Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.StripedRightArrow">
            <summary>
            Striped Right Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.NotchedRightArrow">
            <summary>
            Notched Right Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.BentUpArrow">
            <summary>
            Bent Up Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.LeftRightArrow">
            <summary>
            Left Right Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.UpDownArrow">
            <summary>
            Up Down Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.LeftUpArrow">
            <summary>
            Left Up Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.LeftRightUpArrow">
            <summary>
            Left Right Up Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.QuadArrow">
            <summary>
            Quad-Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.CalloutLeftArrow">
            <summary>
            Callout Left Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.CalloutRightArrow">
            <summary>
            Callout Right Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.CalloutUpArrow">
            <summary>
            Callout Up Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.CalloutDownArrow">
            <summary>
            Callout Down Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.CalloutLeftRightArrow">
            <summary>
            Callout Left Right Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.CalloutUpDownArrow">
            <summary>
            Callout Up Down Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.CalloutQuadArrow">
            <summary>
            Callout Quad-Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.BentArrow">
            <summary>
            Bent Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.UTurnArrow">
            <summary>
            U-Turn Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.CircularArrow">
            <summary>
            Circular Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.LeftCircularArrow">
            <summary>
            Left Circular Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.LeftRightCircularArrow">
            <summary>
            Left Right Circular Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.CurvedRightArrow">
            <summary>
            Curved Right Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.CurvedLeftArrow">
            <summary>
            Curved Left Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.CurvedUpArrow">
            <summary>
            Curved Up Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.CurvedDownArrow">
            <summary>
            Curved Down Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.SwooshArrow">
            <summary>
            Swoosh Arrow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Cube">
            <summary>
            Cube Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Can">
            <summary>
            Can Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.LightningBolt">
            <summary>
            Lightning Bolt Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Heart">
            <summary>
            Heart Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Sun">
            <summary>
            Sun Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Moon">
            <summary>
            Moon Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.SmileyFace">
            <summary>
            Smiley Face Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.IrregularSeal1">
            <summary>
            Irregular Seal 1 Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.IrregularSeal2">
            <summary>
            Irregular Seal 2 Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.FoldedCorner">
            <summary>
            Folded Corner Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Bevel">
            <summary>
            Bevel Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Frame">
            <summary>
            Frame Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.HalfFrame">
            <summary>
            Half Frame Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Corner">
            <summary>
            Corner Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.DiagonalStripe">
            <summary>
            Diagonal Stripe Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Chord">
            <summary>
            Chord Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.CurvedArc">
            <summary>
            Curved Arc Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.LeftBracket">
            <summary>
            Left Bracket Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.RightBracket">
            <summary>
            Right Bracket Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.LeftBrace">
            <summary>
            Left Brace Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.RightBrace">
            <summary>
            Right Brace Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.BracketPair">
            <summary>
            Bracket Pair Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.BracePair">
            <summary>
            Brace Pair Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.StraightConnector1">
            <summary>
            Straight Connector 1 Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.BentConnector2">
            <summary>
            Bent Connector 2 Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.BentConnector3">
            <summary>
            Bent Connector 3 Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.BentConnector4">
            <summary>
            Bent Connector 4 Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.BentConnector5">
            <summary>
            Bent Connector 5 Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.CurvedConnector2">
            <summary>
            Curved Connector 2 Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.CurvedConnector3">
            <summary>
            Curved Connector 3 Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.CurvedConnector4">
            <summary>
            Curved Connector 4 Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.CurvedConnector5">
            <summary>
            Curved Connector 5 Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Callout1">
            <summary>
            Callout 1 Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Callout2">
            <summary>
            Callout 2 Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Callout3">
            <summary>
            Callout 3 Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Callout1WithAccent">
            <summary>
            Callout 1 with Accent Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Callout2WithAccent">
            <summary>
            Callout 2 with Accent Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Callout3WithAccent">
            <summary>
            Callout 3 with Accent Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Callout1WithBorder">
            <summary>
            Callout 1 with Border Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Callout2WithBorder">
            <summary>
            Callout 2 with Border Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Callout3WithBorder">
            <summary>
            Callout 3 with Border Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Callout1WithBorderAndAccent">
            <summary>
            Callout 1 with Border and Accent Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Callout2WithBorderAndAccent">
            <summary>
            Callout 2 with Border and Accent Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Callout3WithBorderAndAccent">
            <summary>
            Callout 3 with Border and Accent Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.CalloutWedgeRectangle">
            <summary>
            Callout Wedge Rectangle Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.CalloutWedgeRoundRectangle">
            <summary>
            Callout Wedge Round Rectangle Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.CalloutWedgeEllipse">
            <summary>
            Callout Wedge Ellipse Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.CalloutCloud">
            <summary>
            Callout Cloud Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Cloud">
            <summary>
            Cloud Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Ribbon">
            <summary>
            Ribbon Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Ribbon2">
            <summary>
            Ribbon 2 Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.EllipseRibbon">
            <summary>
            Ellipse Ribbon Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.EllipseRibbon2">
            <summary>
            Ellipse Ribbon 2 Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.LeftRightRibbon">
            <summary>
            Left Right Ribbon Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.VerticalScroll">
            <summary>
            Vertical Scroll Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.HorizontalScroll">
            <summary>
            Horizontal Scroll Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Wave">
            <summary>
            Wave Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.DoubleWave">
            <summary>
            Double Wave Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Plus">
            <summary>
            Plus Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.ProcessFlow">
            <summary>
            Process Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.DecisionFlow">
            <summary>
            Decision Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.InputOutputFlow">
            <summary>
            Input Output Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.PredefinedProcessFlow">
            <summary>
            Predefined Process Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.InternalStorageFlow">
            <summary>
            Internal Storage Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.DocumentFlow">
            <summary>
            Document Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.MultiDocumentFlow">
            <summary>
            Multi-Document Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.TerminatorFlow">
            <summary>
            Terminator Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.PreparationFlow">
            <summary>
            Preparation Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.ManualInputFlow">
            <summary>
            Manual Input Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.ManualOperationFlow">
            <summary>
            Manual Operation Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.ConnectorFlow">
            <summary>
            Connector Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.PunchedCardFlow">
            <summary>
            Punched Card Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.PunchedTapeFlow">
            <summary>
            Punched Tape Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.SummingJunctionFlow">
            <summary>
            Summing Junction Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.OrFlow">
            <summary>
            Or Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.CollateFlow">
            <summary>
            Collate Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.SortFlow">
            <summary>
            Sort Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.ExtractFlow">
            <summary>
            Extract Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.MergeFlow">
            <summary>
            Merge Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.OfflineStorageFlow">
            <summary>
            Offline Storage Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.OnlineStorageFlow">
            <summary>
            Online Storage Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.MagneticTapeFlow">
            <summary>
            Magnetic Tape Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.MagneticDiskFlow">
            <summary>
            Magnetic Disk Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.MagneticDrumFlow">
            <summary>
            Magnetic Drum Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.DisplayFlow">
            <summary>
            Display Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.DelayFlow">
            <summary>
            Delay Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.AlternateProcessFlow">
            <summary>
            Alternate Process Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.OffPageConnectorFlow">
            <summary>
            Off-Page Connector Flow Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.BlankButton">
            <summary>
            Blank Button Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.HomeButton">
            <summary>
            Home Button Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.HelpButton">
            <summary>
            Help Button Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.InformationButton">
            <summary>
            Information Button Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.ForwardOrNextButton">
            <summary>
            Forward or Next Button Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.BackOrPreviousButton">
            <summary>
            Back or Previous Button Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.EndButton">
            <summary>
            End Button Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.BeginningButton">
            <summary>
            Beginning Button Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.ReturnButton">
            <summary>
            Return Button Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.DocumentButton">
            <summary>
            Document Button Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.SoundButton">
            <summary>
            Sound Button Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.MovieButton">
            <summary>
            Movie Button Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Gear6">
            <summary>
            Gear 6 Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Gear9">
            <summary>
            Gear 9 Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.Funnel">
            <summary>
            Funnel Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.PlusMath">
            <summary>
            Plus Math Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.MinusMath">
            <summary>
            Minus Math Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.MultiplyMath">
            <summary>
            Multiply Math Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.DivideMath">
            <summary>
            Divide Math Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.EqualMath">
            <summary>
            Equal Math Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.NotEqualMath">
            <summary>
            Not Equal Math Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.CornerTabs">
            <summary>
            Corner Tabs Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.SquareTabs">
            <summary>
            Square Tabs Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.PlaqueTabs">
            <summary>
            Plaque Tabs Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.ChartX">
            <summary>
            Chart X Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.ChartStar">
            <summary>
            Chart Star Shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ShapeType.ChartPlus">
            <summary>
            Chart Plus Shape.
            </summary>
        </member>
        <member name="T:Spire.Presentation.SlideLayoutType">
            <summary>
            Represents the slide layout type.
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.Custom">
             <summary>
             Custom 
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.Title">
             <summary>
             Title 
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.Text">
             <summary>
             Text 
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.TwoColumnText">
             <summary>
             Two Column Text 
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.Table">
             <summary>
             Table 
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.TextAndChart">
             <summary>
             Text and Chart 
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.ChartAndText">
             <summary>
             Chart and Text 
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.Diagram">
             <summary>
             Diagram 
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.Chart">
             <summary>
             Chart
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.TextAndClipArt">
             <summary>
             Text and Clip Art
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.ClipArtAndText">
             <summary>
             Clip Art and Text
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.TitleOnly">
             <summary>
             Title Only 
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.Blank">
             <summary>
             Blank 
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.TextAndObject">
             <summary>
             Text and Object 
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.ObjectAndText">
             <summary>
             Object and Text 
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.Object">
             <summary>
             Object
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.TitleAndObject">
             <summary>
             Title and Object
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.TextAndMedia">
             <summary>
             Text and Media 
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.MediaAndText">
             <summary>
             Media and Text 
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.ObjectOverText">
             <summary>
             Object over Text
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.TextOverObject">
             <summary>
             Text over Object
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.TextAndTwoObjects">
             <summary>
             Text and Two Objects
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.TwoObjectsAndText">
             <summary>
             Two Objects and Text
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.TwoObjectsOverText">
             <summary>
             Two Objects over Text
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.FourObjects">
             <summary>
             Four Objects
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.VerticalText">
             <summary>
             Vertical Text
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.ClipArtAndVerticalText">
             <summary>
             Clip Art and Vertical Text
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.VerticalTitleAndText">
             <summary>
             Vertical Title and Text
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.VerticalTitleAndTextOverChart">
             <summary>
             Vertical Title and Text Over Chart
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.TwoObjects">
             <summary>
             Two Objects
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.ObjectAndTwoObject">
             <summary>
             Object and Two Object
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.TwoObjectsAndObject">
             <summary>
             Two Objects and Object
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.SectionHeader">
             <summary>
             Section Header
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.TwoTextAndTwoObjects">
             <summary>
             Two Text and Two Objects
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.TitleObjectAndCaption">
             <summary>
             Title, Object, and Caption
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideLayoutType.PictureAndCaption">
             <summary>
             Picture and Caption
            </summary>
        </member>
        <member name="T:Spire.Presentation.SlideOrienation">
            <summary>
            Represents the slide orientation.
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideOrienation.Landscape">
            <summary>
            Landscape orientation.
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideOrienation.Portrait">
            <summary>
            Portrait orientation.
            </summary>
        </member>
        <member name="T:Spire.Presentation.SlideSizeType">
            <summary>
            Represents the slide size preset.
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideSizeType.Screen4x3">
            <summary>
            On screen 4x3
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideSizeType.Letter">
            <summary>
            Letter
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideSizeType.A4">
            <summary>
            A4
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideSizeType.Film35mm">
            <summary>
            Slide 35mm
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideSizeType.Overhead">
            <summary>
            Overhead
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideSizeType.Banner">
            <summary>
            Banner
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideSizeType.Custom">
            <summary>
            Custom size
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideSizeType.Ledger">
            <summary>
            Ledger
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideSizeType.A3">
            <summary>
            A3
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideSizeType.B4ISO">
            <summary>
            B4 ISO
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideSizeType.B5ISO">
            <summary>
            B5 ISO
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideSizeType.B4JIS">
            <summary>
            B4 JIS
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideSizeType.B5JIS">
            <summary>
            B5 JIS
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideSizeType.HagakiCard">
            <summary>
            Hagaki card
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideSizeType.Screen16x9">
            <summary>
            On screen 16x9
            </summary>
        </member>
        <member name="F:Spire.Presentation.SlideSizeType.Screen16x10">
            <summary>
            On Screen 16x10
            </summary>
        </member>
        <member name="T:Spire.Presentation.ImportDataFormat">
            <summary>
            Represents source file format.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ImportDataFormat.Ppt">
            <summary>
            PPT format.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ImportDataFormat.Pptx">
            <summary>
            Pptx format.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ImportDataFormat.Odp">
            <summary>
            Odp format.
            </summary>
        </member>
        <member name="T:Spire.Presentation.SystemColorType">
            <summary>
            Represents predefined system colors.
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.None">
            <summary>
            System color is not defined.
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.ScrollBar">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.Background">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.ActiveCaption">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.InactiveCaption">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.Menu">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.Window">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.WindowFrame">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.MenuText">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.WindowText">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.CaptionText">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.ActiveBorder">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.InactiveBorder">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.AppWorkspace">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.Highlight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.HighlightText">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.BtnFace">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.BtnShadow">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.GrayText">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.BtnText">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.InactiveCaptionText">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.BtnHighlight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.ThreeDDkShadow">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.ThreeDLight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.InfoText">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.InfoBk">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.HotLight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.GradientActiveCaption">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.GradientInactiveCaption">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.MenuHighlight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.SystemColorType.MenuBar">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Presentation.TabAlignmentType">
            <summary>
            Represents the tab alignment.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TabAlignmentType.Left">
            <summary>
            Left alignment
            </summary>
        </member>
        <member name="F:Spire.Presentation.TabAlignmentType.Center">
            <summary>
            Center alignment
            </summary>
        </member>
        <member name="F:Spire.Presentation.TabAlignmentType.Right">
            <summary>
            Right alignment
            </summary>
        </member>
        <member name="F:Spire.Presentation.TabAlignmentType.Decimal">
            <summary>
            Decimal alignment
            </summary>
        </member>
        <member name="T:Spire.Presentation.TableStylePreset">
            <summary>
            Represents builtin table styles.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.Custom">
            <summary>
            Table has a custom style.
            This is return-only value.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.None">
            <summary>
            No style.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle2Accent1">
            <summary>
            Medium Style 2 - Accent 1.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle2">
            <summary>
            Medium Style 2.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.NoStyleNoGrid">
            <summary>
            No Style, No Grid.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.ThemedStyle1Accent1">
            <summary>
            Themed Style 1 - Accent 1.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.ThemedStyle1Accent2">
            <summary>
            Themed Style 1 - Accent 2.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.ThemedStyle1Accent3">
            <summary>
            Themed Style 1 - Accent 3.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.ThemedStyle1Accent4">
            <summary>
            Themed Style 1 - Accent 4.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.ThemedStyle1Accent5">
            <summary>
            Themed Style 1 - Accent 5.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.ThemedStyle1Accent6">
            <summary>
            Themed Style 1 - Accent 6.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.NoStyleTableGrid">
            <summary>
            No Style, Table Grid.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.ThemedStyle2Accent1">
            <summary>
            Themed Style 2 - Accent 1.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.ThemedStyle2Accent2">
            <summary>
            Themed Style 2 - Accent 2.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.ThemedStyle2Accent3">
            <summary>
            Themed Style 2 - Accent 3.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.ThemedStyle2Accent4">
            <summary>
            Themed Style 2 - Accent 4.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.ThemedStyle2Accent5">
            <summary>
            Themed Style 2 - Accent 5.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.ThemedStyle2Accent6">
            <summary>
            Themed Style 2 - Accent 6.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.LightStyle1">
            <summary>
            Light Style 1
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.LightStyle1Accent1">
            <summary>
            Light Style 1 - Accent 1.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.LightStyle1Accent2">
            <summary>
            Light Style 1 - Accent 2.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.LightStyle1Accent3">
            <summary>
            Light Style 1 - Accent 3.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.LightStyle1Accent4">
            <summary>
            Light Style 1 - Accent 4.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.LightStyle2Accent5">
            <summary>
            Light Style 2 - Accent 5.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.LightStyle1Accent6">
            <summary>
            Light Style 1 - Accent 6.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.LightStyle2">
            <summary>
            Light Style 2.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.LightStyle2Accent1">
            <summary>
            Light Style 2 - Accent 1.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.LightStyle2Accent2">
            <summary>
            Light Style 2 - Accent 2.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.LightStyle2Accent3">
            <summary>
            Light Style 2 - Accent 3.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle2Accent3">
            <summary>
            Medium Style 2 - Accent 3.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle2Accent4">
            <summary>
            Medium Style 2 - Accent 4.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle2Accent5">
            <summary>
            Medium Style 2 - Accent 5.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.LightStyle2Accent6">
            <summary>
            Light Style 2 - Accent 6.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.LightStyle2Accent4">
            <summary>
            Light Style 2 - Accent 4.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.LightStyle3">
            <summary>
            Light Style 3.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.LightStyle3Accent1">
            <summary>
            Light Style 3 - Accent 1.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle2Accent2">
            <summary>
            Medium Style 2 - Accent 2.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.LightStyle3Accent2">
            <summary>
            Light Style 3 - Accent 2.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.LightStyle3Accent3">
            <summary>
            Light Style 3 - Accent 3.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.LightStyle3Accent4">
            <summary>
            Light Style 3 - Accent 4.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.LightStyle3Accent5">
            <summary>
            Light Style 3 - Accent 5.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.LightStyle3Accent6">
            <summary>
            Light Style 3 - Accent 6.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle1">
            <summary>
            Medium Style 1.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle1Accent1">
            <summary>
            Medium Style 1 - Accent 1.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle1Accent2">
            <summary>
            Medium Style 1 - Accent 2.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle1Accent3">
            <summary>
            Medium Style 1 - Accent 3.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle1Accent4">
            <summary>
            Medium Style 1 - Accent 4.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle1Accent5">
            <summary>
            Medium Style 1 - Accent 5.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle1Accent6">
            <summary>
            Medium Style 1 - Accent 6.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle2Accent6">
            <summary>
            Medium Style 2 - Accent 6.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle3">
            <summary>
            Medium Style 3.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle3Accent1">
            <summary>
            Medium Style 3 - Accent 1.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle3Accent2">
            <summary>
            Medium Style 3 - Accent 2.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle3Accent3">
            <summary>
            Medium Style 3 - Accent 3.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle3Accent4">
            <summary>
            Medium Style 3 - Accent 4.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle3Accent5">
            <summary>
            Medium Style 3 - Accent 5.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle3Accent6">
            <summary>
            Medium Style 3 - Accent 6.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle4">
            <summary>
            Medium Style 4.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle4Accent1">
            <summary>
            Medium Style 4 - Accent 1.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle4Accent2">
            <summary>
            Medium Style 4 - Accent 2.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle4Accent3">
            <summary>
            Medium Style 4 - Accent 3.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle4Accent4">
            <summary>
            Medium Style 4 - Accent 4.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle4Accent5">
            <summary>
            Medium Style 4 - Accent 5.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.MediumStyle4Accent6">
            <summary>
            Medium Style 4 - Accent 6.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.DarkStyle1">
            <summary>
            Dark Style 1.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.DarkStyle1Accent1">
            <summary>
            Dark Style 1 - Accent 1.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.DarkStyle1Accent2">
            <summary>
            Dark Style 1 - Accent 2.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.DarkStyle1Accent3">
            <summary>
            Dark Style 1 - Accent 3.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.DarkStyle1Accent4">
            <summary>
            Dark Style 1 - Accent 4.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.DarkStyle1Accent5">
            <summary>
            Dark Style 1 - Accent 5.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.DarkStyle1Accent6">
            <summary>
            Dark Style 1 - Accent 6.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.DarkStyle2">
            <summary>
            Dark Style 2.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.DarkStyle2Accent1Accent2">
            <summary>
            Dark Style 2 - Accent 1/Accent 2.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.DarkStyle2Accent3Accent4">
            <summary>
            Dark Style 2 - Accent 3/Accent 4.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TableStylePreset.DarkStyle2Accent5Accent6">
            <summary>
            Dark Style 2 - Accent 5/Accent 6.
            </summary>
        </member>
        <member name="T:Spire.Presentation.TextAlignmentType">
            <summary>
            Represents different text alignment styles.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextAlignmentType.None">
            <summary>
            Default aligment.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextAlignmentType.Left">
            <summary>
            Left alignment.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextAlignmentType.Center">
            <summary>
            Center alignment.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextAlignmentType.Right">
            <summary>
            Right alignment.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextAlignmentType.Justify">
            <summary>
            Justify alignment.
            </summary>
        </member>
        <member name="T:Spire.Presentation.TextAnchorType">
            <summary>
            Alignment within a text area.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextAnchorType.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextAnchorType.Top">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextAnchorType.Center">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextAnchorType.Bottom">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextAnchorType.Justified">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextAnchorType.Distributed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextAnchorType.Right">
            <summary>
            Define the text to the right when the text is vertically arranged.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextAnchorType.Left">
            <summary>
            Define the text to the left when the text is vertically arranged.
            </summary>
        </member>
        <member name="T:Spire.Presentation.TextAutofitType">
            <summary>
            Represents text autofit mode.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextAutofitType.UnDefined">
            <summary>
            Not defined.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextAutofitType.None">
            <summary>
            No autofit.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextAutofitType.Normal">
            <summary>
            Normal autofit.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextAutofitType.Shape">
            <summary>
            Shape autofit
            </summary>
        </member>
        <member name="T:Spire.Presentation.TextCapType">
            <summary>
            Represents the type of text capitalisation.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextCapType.UnDefined">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextCapType.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextCapType.Small">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextCapType.All">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Presentation.TextHorizontalOverflowType">
            <summary>
            Represents text horizontal overflow type.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextHorizontalOverflowType.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextHorizontalOverflowType.Overflow">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextHorizontalOverflowType.Clip">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Presentation.TextShapeType">
            <summary>
            Represents text wrapping shape.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.UnDefined">
            <summary>
            Not defined
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.None">
             <summary>
             No shape
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.Plain">
             <summary>
             Plain
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.Stop">
             <summary>
             Stop Sign
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.Triangle">
             <summary>
             Triangle
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.TriangleInverted">
             <summary>
             Inverted Triangle
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.Chevron">
             <summary>
             Chevron
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.ChevronInverted">
             <summary>
             Inverted Chevron
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.RingInside">
             <summary>
             Inside Ring
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.RingOutside">
             <summary>
             Outside Ring
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.ArchUp">
             <summary>
             Upward Arch
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.ArchDown">
             <summary>
             Downward Arch
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.Circle">
             <summary>
             Circle
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.Button">
             <summary>
             Button
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.ArchUpPour">
             <summary>
             Upward Pour Arch
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.ArchDownPour">
             <summary>
             Downward Pour Arch
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.CirclePour">
             <summary>
             Circle Pour
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.ButtonPour">
             <summary>
             Button Pour
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.CurveUp">
             <summary>
             Upward Curve
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.CurveDown">
             <summary>
             Downward Curve
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.CanUp">
             <summary>
             Upward Can
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.CanDown">
             <summary>
             Downward Can
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.Wave1">
             <summary>
             Wave 1
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.Wave2">
             <summary>
             Wave 2
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.DoubleWave1">
             <summary>
             Double Wave 1
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.Wave4">
             <summary>
             Wave 4
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.Inflate">
             <summary>
             Inflate
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.Deflate">
             <summary>
             Deflate
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.InflateBottom">
             <summary>
             Bottom Inflate
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.DeflateBottom">
             <summary>
             Bottom Deflate
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.InflateTop">
             <summary>
             Top Inflate
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.DeflateTop">
             <summary>
             Top Deflate
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.DeflateInflate">
             <summary>
             Deflate-Inflate
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.DeflateInflateDeflate">
             <summary>
             Deflate-Inflate-Deflate
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.FadeRight">
             <summary>
             Right Fade
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.FadeLeft">
             <summary>
             Left Fade
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.FadeUp">
             <summary>
             Upward Fade
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.FadeDown">
             <summary>
             Downward Fade
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.SlantUp">
             <summary>
             Upward Slant
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.SlantDown">
             <summary>
             Downward Slant
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.CascadeUp">
             <summary>
             Upward Cascade
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.CascadeDown">
             <summary>
             Downward Cascade
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextShapeType.Custom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="T:Spire.Presentation.TextStrikethroughType">
            <summary>
            Represents the type of text strikethrough.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextStrikethroughType.UnDefined">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextStrikethroughType.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextStrikethroughType.Single">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextStrikethroughType.Double">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Presentation.TextUnderlineType">
            <summary>
            Represents the type of text underline.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextUnderlineType.UnDefined">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextUnderlineType.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextUnderlineType.Words">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextUnderlineType.Single">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextUnderlineType.Double">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextUnderlineType.Heavy">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextUnderlineType.Dotted">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextUnderlineType.HeavyDotted">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextUnderlineType.Dashed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextUnderlineType.HeavyDashed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextUnderlineType.LongDashed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextUnderlineType.HeavyLongDashed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextUnderlineType.DotDash">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextUnderlineType.HeavyDotDash">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextUnderlineType.DotDotDash">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextUnderlineType.HeavyDotDotDash">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextUnderlineType.Wavy">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextUnderlineType.HeavyWavy">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextUnderlineType.DoubleWavy">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Presentation.TextVerticalOverflowType">
            <summary>
            Represents text vertical overflow type.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextVerticalOverflowType.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextVerticalOverflowType.Overflow">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextVerticalOverflowType.Ellipsis">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TextVerticalOverflowType.Clip">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Presentation.VerticalTextType">
            <summary>
            Indicates vertical writing mode for a text.
            </summary>
        </member>
        <member name="F:Spire.Presentation.VerticalTextType.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Spire.Presentation.VerticalTextType.Horizontal">
            <summary>
            Horizontal text.
            </summary>
        </member>
        <member name="F:Spire.Presentation.VerticalTextType.Vertical">
            <summary>
            Vertical text.
            </summary>
        </member>
        <member name="F:Spire.Presentation.VerticalTextType.Vertical270">
            <summary>
            Vertical 270 degrees text.
            </summary>
        </member>
        <member name="F:Spire.Presentation.VerticalTextType.WordArtVertical">
            <summary>
            WordArt vertical text.
            </summary>
        </member>
        <member name="F:Spire.Presentation.VerticalTextType.EastAsianVertical">
            <summary>
            East asian vertical text.
            </summary>
        </member>
        <member name="F:Spire.Presentation.VerticalTextType.MongolianVertical">
            <summary>
            Mongolian vertical text.
            </summary>
        </member>
        <member name="F:Spire.Presentation.VerticalTextType.WordArtVerticalRightToLeft">
            <summary>
            WordArt vertical right to left text.
            </summary>
        </member>
        <member name="T:Spire.Presentation.TileFlipMode">
            <summary>
            Defines tile flipping mode.
            </summary>
        </member>
        <member name="F:Spire.Presentation.TileFlipMode.UnDefined">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TileFlipMode.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TileFlipMode.Horizontal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TileFlipMode.Vertical">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.TileFlipMode.HorizontalAndVertical">
            <summary>
            
            </summary>
        </member>
        <member name="T:Spire.Presentation.VideoPlayMode">
            <summary>
            Indicates how a video is played.
            </summary>
        </member>
        <member name="F:Spire.Presentation.VideoPlayMode.Mixed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Spire.Presentation.VideoPlayMode.Auto">
            <summary>
            Play automatically.
            </summary>
        </member>
        <member name="F:Spire.Presentation.VideoPlayMode.OnClick">
            <summary>
            Play on click.
            </summary>
        </member>
        <member name="F:Spire.Presentation.VideoPlayMode.Presentation">
            <summary>
            Play on all slides.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudioData.ContentType">
            <summary>
            Gets a MIME type of an audio.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudioData.Data">
            <summary>
            Gets the copy of an audio's data.
            Read-only <see cref="T:System.Byte"/>[].
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudioData.Stream">
            <summary>
            Gets stream.
            </summary>
        </member>
        <member name="M:Spire.Presentation.IAudioData.GetStream">
            <summary>
            Gets stream from audio.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.IAudioData.SaveToFile(System.String)">
            <summary>
            Save audio to disk.
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="T:Spire.Presentation.WavAudioCollection">
            <summary>
            Represents a collection of embedded audio files.
            </summary>
        </member>
        <member name="P:Spire.Presentation.WavAudioCollection.Count">
            <summary>
            Gets a number of audio files in the collection.
            </summary>
        </member>
        <member name="P:Spire.Presentation.WavAudioCollection.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            Read-only <see cref="T:Spire.Presentation.Drawing.ImageData"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.WavAudioCollection.Append(Spire.Presentation.IAudioData)">
            <summary>
            Adds an audio file to list.
            </summary>
            <param name="audioData">Source audio.</param>
            <returns>Added audio.</returns>
        </member>
        <member name="M:Spire.Presentation.WavAudioCollection.Append(System.IO.Stream)">
            <summary>
            Adds an audio to the list from stream.
            </summary>
            <param name="stream">Stream to add audio from.</param>
            <returns>Added audio.</returns>
        </member>
        <member name="M:Spire.Presentation.WavAudioCollection.Append(System.Byte[])">
            <summary>
            Adds an audio to the list from byte array.
            </summary>
            <param name="audioData">Audio bytes.</param>
            <returns>Added audio.</returns>
        </member>
        <member name="P:Spire.Presentation.IAudio.Volume">
            <summary>
            Gets or sets the audio volume.
            Read/write <see cref="T:Spire.Presentation.AudioVolumeType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.PlayMode">
            <summary>
            Gets or sets the audio play mode.
            Read/write <see cref="T:Spire.Presentation.AudioPlayMode"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.IsLoop">
            <summary>
            Indicates whether an audio is looped.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.IsEmbedded">
            <summary>
            Indicates whether a sound is embedded to a presentation.
            Read-only <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.FileName">
            <summary>
            Gets or sets the name of an audio file.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.Data">
            <summary>
            Gets or sets embedded audio data.
            Read/write <see cref="T:Spire.Presentation.AudioData"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.AudioCd">
            <summary>
            Gets setting of CD.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.ShapeLocking">
            <summary>
            Gets shape's locks.
            Readonly <see cref="T:Spire.Presentation.SlidePictureLocking"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.ShapeType">
            <summary>
            Returns or sets the AutoShape type.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.PictureFill">
            <summary>
            Gets the PictureFillFormat object.
            Read-only <see cref="T:Spire.Presentation.Drawing.PictureFillFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.ShapeStyle">
            <summary>
            Gets shape's style object.
            Read-only <see cref="P:Spire.Presentation.IAudio.ShapeStyle"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.Adjustments">
            <summary>
            Gets a collection of shape's adjustment values.
            Readonly <see cref="T:Spire.Presentation.Collections.ShapeAdjustCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.IsTextBox">
            <summary>
            Indicates whether the shape is TextHolder.
            Read-only <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.Placeholder">
            <summary>
            Gets the placeholder for a shape.
            Read-only <see cref="P:Spire.Presentation.IAudio.Placeholder"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.TagsList">
            <summary>
            Gets the shape's tags collection.
            Read-only <see cref="T:Spire.Presentation.Collections.TagCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.Frame">
            <summary>
            Gets or sets the shape frame's properties.
            Read/write <see cref="T:Spire.Presentation.Drawing.GraphicFrame"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.Line">
            <summary>
            Gets the LineFormat object that contains line formatting properties for a shape.
            Read-only <see cref="P:Spire.Presentation.IAudio.Line"/>.
            Note: can return null for certain types of shapes which don't have line properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.ThreeD">
            <summary>
            Gets the ThreeDFormat object that 3d effect properties for a shape.
            Read-only <see cref="T:Spire.Presentation.Drawing.FormatThreeD"/>.
            Note: can return null for certain types of shapes which don't have 3d properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.EffectDag">
            <summary>
            Gets the EffectFormat object which contains pixel effects applied to a shape.
            Read-only <see cref="P:Spire.Presentation.IAudio.EffectDag"/>
            Note: can return null for certain types of shapes which don't have effect properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.Fill">
            <summary>
            Gets the FillFormat object that contains fill formatting properties for a shape.
            Read-only <see cref="P:Spire.Presentation.IAudio.Fill"/>.
            Note: can return null for certain types of shapes which don't have fill properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.Click">
            <summary>
            Gets or sets the hyperlink defined for mouse click.
            Read/write <see cref="T:Spire.Presentation.ClickHyperlink"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.MouseOver">
            <summary>
            Gets or sets the hyperlink defined for mouse over.
            Read/write <see cref="T:Spire.Presentation.ClickHyperlink"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.IsHidden">
            <summary>
            Indicates whether the shape is hidden.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.Parent">
            <summary>
            Gets the parent slide of a shape.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.ZOrderPosition">
            <summary>
            Gets the position of a shape in the z-order.
            Shapes[0] returns the shape at the back of the z-order,
            and Shapes[Shapes.Count - 1] returns the shape at the front of the z-order.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.Rotation">
            <summary>
            Gets or sets the number of degrees the specified shape is rotated around
            the z-axis. A positive value indicates clockwise rotation; a negative value
            indicates counterclockwise rotation.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.Left">
            <summary>
            Gets or sets the x-coordinate of the upper-left corner of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.Top">
            <summary>
            Gets or sets the y-coordinate of the upper-left corner of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.Width">
            <summary>
            Gets or sets the width of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.Height">
            <summary>
            Gets or sets the height of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.AlternativeText">
            <summary>
            Gets or sets the alternative text associated with a shape.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.Name">
            <summary>
            Gets or sets the name of a shape.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAudio.Slide">
            <summary>
            Gets the parent slide of a shape.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.IAudio.RemovePlaceholder">
            <summary>
            Removes placeholder from the shape.
            </summary>
        </member>
        <member name="M:Spire.Presentation.IAudio.Dispose">
            <summary>
            Dispose object and free resources.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Audio">
            <summary>
             Represents an audio clip on a slide.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Audio.Volume">
            <summary>
            Gets or sets the audio volume.
            Read/write <see cref="T:Spire.Presentation.AudioVolumeType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Audio.PlayMode">
            <summary>
            Gets or sets the audio play mode.
            Read/write <see cref="T:Spire.Presentation.AudioPlayMode"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Audio.IsLoop">
            <summary>
            Indicates whether an audio is looped.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Audio.IsEmbedded">
            <summary>
            Indicates whether a sound is embedded to a presentation.
            Read-only <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Audio.FileName">
            <summary>
            Gets or sets the name of an audio file.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Audio.Data">
            <summary>
            Gets or sets embedded audio data.
            Read/write <see cref="T:Spire.Presentation.AudioData"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Audio.AudioCd">
            <summary>
            Gets setting of CD.
            </summary>
        </member>
        <member name="T:Spire.Presentation.SlideBackground">
            <summary>
            Represents background of a slide.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlideBackground.Type">
            <summary>
            Gets a type of background fill.
            Read/write <see cref="T:Spire.Presentation.Drawing.BackgroundType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlideBackground.EffectDag">
            <summary>
            Gets Effect Dag.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlideBackground.Fill">
            <summary>
            Gets a FillFormat for BackgroundType.OwnBackground fill.
            Readonly <see cref="P:Spire.Presentation.SlideBackground.Fill"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlideBackground.ThemeColor">
            <summary>
            Return a ColorFormat for Themed fill.
            Readonly <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlideBackground.ThemeIndex">
            <summary>
            Gets an index of Theme.
            0..999, 0 eqauls no fill.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlideBackground.Slide">
            <summary>
            Gets the parent slide of a shape.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlideBackground.Presentation">
            <summary>
            Gets the parent presentation of a slide.
            Read-only <see cref="T:Spire.Presentation.PresentationPptx"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Camera">
            <summary>
            Represents Camera.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Camera.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Camera.PresetType">
            <summary>
            Camera type
            Read/write <see cref="P:Spire.Presentation.Camera.PresetType"/>
            </summary>
        </member>
        <member name="P:Spire.Presentation.Camera.FieldOfView">
            <summary>
            Camera field of view.
            Read/write <see cref="T:System.Single"/>
            </summary>
        </member>
        <member name="P:Spire.Presentation.Camera.Zoom">
            <summary>
            Camera percentage zoom.
            Read/write <see cref="T:System.Single"/>
            </summary>
        </member>
        <member name="M:Spire.Presentation.Camera.SetCameraRotation(System.Single,System.Single,System.Single)">
            <summary>
            A rotation is defined .
            </summary>
        </member>
        <member name="M:Spire.Presentation.Camera.GetCameraRotations">
            <summary>
            A rotation is defined. latitude, longitude, revolution.
            Gets null if no rotation defined.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Comment">
            <summary>
            Represents a comment on a slide.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Comment.Text">
            <summary>
            Returns a String that represents the text in a comment
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Comment.DateTime">
            <summary>
            Returns the date and time a comment was created.
            Read/write <see cref="T:System.DateTime"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Comment.Slide">
            <summary>
            Gets or sets the parent slide of a comment.
            Read-only <see cref="P:Spire.Presentation.Comment.Slide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Comment.AuthorName">
            <summary>
            Gets or sets a String that represents the author as for a specified Comment object.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Comment.AuthorInitials">
            <summary>
            Gets or sets the author's initials as a read-only String for a specified Comment object
            </summary>
        </member>
        <member name="P:Spire.Presentation.Comment.Left">
            <summary>
            Represents the distance in points from the left edge of the comment to the left edge of the slide.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Comment.Top">
            <summary>
             Represents the distance in points from the left edge of the comment to the left edge of the slide.
            </summary>
        </member>
        <member name="T:Spire.Presentation.OleObject">
            <summary>
            Represents an Ole object.
            </summary>
        </member>
        <member name="P:Spire.Presentation.OleObject.Name">
            <summary>
            Gets the name of this control.
            Readonly <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.OleObject.PictureFill">
            <summary>
            Gets Control image fill properties object.
            Readonly <see cref="T:Spire.Presentation.Drawing.PictureFillFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.OleObject.Frame">
            <summary>
            Gets or sets control's frame.
            Read/write <see cref="F:Spire.Presentation.OleObject.GraphicFrame"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.OleObject.Properties">
            <summary>
            Gets a collection of OleObject properties.
            Readonly <see cref="T:Spire.Presentation.Collections.OleObjectProperties"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Field">
            <summary>
            Represents a field.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Field.Type">
            <summary>
            Gets or sets type of field.
            Read/write <see cref="T:Spire.Presentation.FieldType"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.FieldType">
            <summary>
            Represents a type of field. 
            </summary>
        </member>
        <member name="M:Spire.Presentation.FieldType.#ctor(System.String)">
            <summary>
            Initializes a new instance of FieldType class.
            </summary>
        </member>
        <member name="M:Spire.Presentation.FieldType.Equals(System.Object)">
            <summary>
            Checks if this field is equal to another.
            </summary>
            <param name="obj">Field to compare.</param>
            <returns>True if fields are equal.</returns>
        </member>
        <member name="M:Spire.Presentation.FieldType.GetHashCode">
            <summary>
            Gets hashcode for this object.
            </summary>
            <returns>Hashcode <see cref="T:System.Int32"/>.</returns>
        </member>
        <member name="M:Spire.Presentation.FieldType.op_Equality(Spire.Presentation.FieldType,Spire.Presentation.FieldType)">
            <summary>
            Checks Objects is equal.
            </summary>
        </member>
        <member name="M:Spire.Presentation.FieldType.op_Inequality(Spire.Presentation.FieldType,Spire.Presentation.FieldType)">
            <summary>
            Checks Objects is inequal.
            </summary>
        </member>
        <member name="P:Spire.Presentation.FieldType.DateTime">
            <summary>
            Gets current date and time in default date time format.
            </summary>
        </member>
        <member name="P:Spire.Presentation.FieldType.DateTime1">
            <summary>
            Gets current date and time in a first predefined format (MM/DD/YYYY).
            </summary>
        </member>
        <member name="P:Spire.Presentation.FieldType.DateTime2">
            <summary>
            Gets current date and time in a second predefined format (Day, Month DD, YYYY).
            </summary>
        </member>
        <member name="P:Spire.Presentation.FieldType.DateTime3">
            <summary>
            Gets current date and time in a third predefined format (DD Month YYYY).
            </summary>
        </member>
        <member name="P:Spire.Presentation.FieldType.DateTime4">
            <summary>
            Gets current date and time in a fourth predefined format (Month DD, YYYY).
            </summary>
        </member>
        <member name="P:Spire.Presentation.FieldType.DateTime5">
            <summary>
            Gets current date and time in a fifth predefined format (DD-Mon-YY).
            </summary>
        </member>
        <member name="P:Spire.Presentation.FieldType.DateTime6">
            <summary>
            Gets current date and time in a sixth predefined format (Month YY).
            </summary>
        </member>
        <member name="P:Spire.Presentation.FieldType.DateTime7">
            <summary>
            Gets current date and time in a seventh predefined format (Mon-YY).
            </summary>
        </member>
        <member name="P:Spire.Presentation.FieldType.DateTime8">
            <summary>
            Gets current date and time in a eighth predefined format (MM/DD/YYYY hh:mm AM/PM).
            </summary>
        </member>
        <member name="P:Spire.Presentation.FieldType.DateTime9">
            <summary>
            Gets current date and time in a ninth predefined format (MM/DD/YYYY hh:mm:ss AM/PM).
            </summary>
        </member>
        <member name="P:Spire.Presentation.FieldType.DateTime10">
            <summary>
            Gets current date and time in a tenth predefined format (hh:mm).
            </summary>
        </member>
        <member name="P:Spire.Presentation.FieldType.DateTime11">
            <summary>
            Gets current date and time in a eleventh predefined format (hh:mm:ss).
            </summary>
        </member>
        <member name="P:Spire.Presentation.FieldType.DateTime12">
            <summary>
            Gets current date and time in a twelfth predefined format (hh:mm AM/PM)
            </summary>
        </member>
        <member name="P:Spire.Presentation.FieldType.DateTime13">
            <summary>
            Gets current date and time in a thirteenth predefined format (hh:mm:ss AM/PM)
            </summary>
        </member>
        <member name="T:Spire.Presentation.ParagraphFormatData">
            <summary>
            Immutable object which contains the paragraph's formatting properties.
            </summary>
        </member>
        <member name="F:Spire.Presentation.ParagraphFormatData.m_alignment">
            <summary />
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.Depth">
            <summary>
            Gets or sets a depth of a paragraph.
            Readonly <see cref="T:System.Int16"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.TextBulletType">
            <summary>
            Gets or sets the bullet type of a paragraph.
            Readonly <see cref="P:Spire.Presentation.ParagraphFormatData.TextBulletType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.BulletChar">
            <summary>
            Gets or sets the bullet char of a paragraph.
            Readonly <see cref="T:System.Char"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.BulletFont">
            <summary>
            Gets or sets the bullet font of a paragraph.
            Readonly <see cref="T:Spire.Presentation.TextFont"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.BulletHeight">
            <summary>
            Gets or sets the bullet height of a paragraph.
            Readonly <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.BulletNumber">
            <summary>
            Gets or sets the first number which is used for group of numbered bullets.
            Readonly <see cref="T:System.Int16"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.BulletStyle">
            <summary>
            Gets or sets the style of a numbered bullet.
            Readonly <see cref="T:Spire.Presentation.NumberedBulletStyle"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.Alignment">
            <summary>
            Gets or sets the text alignment in a paragraph.
            Readonly <see cref="T:Spire.Presentation.TextAlignmentType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.LineSpacing">
            <summary>
            Gets or sets the amount of space between base lines in a paragraph.
            Readonly <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.SpaceBefore">
            <summary>
            Gets or sets the amount of space before the first line in a paragraph.
            Readonly <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.SpaceAfter">
            <summary>
            Gets or sets the amount of space after the last line in a paragraph.
            Readonly <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.EastAsianLineBreak">
            <summary>
            Indicates whether the East Asian line break is used in a paragraph.
            Readonly <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.RightToLeft">
            <summary>
            Indicates whether the Right to Left writing is used in a paragraph.
            Readonly <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.LatinLineBreak">
            <summary>
            Indicates whether the Latin line break is used in a paragraph.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.HangingPunctuation">
            <summary>
            Indicates whether the hanging punctuation is used in a paragraph.
            Readonly <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.LeftMargin">
            <summary>
            Gets or sets the left margin in a paragraph.
            Readonly <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.RightMargin">
            <summary>
            Gets or sets the right margin in a paragraph.
            Readonly <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.Indent">
            <summary>
            Gets or sets text indentation in a paragraph.
            Readonly <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.DefaultTabSize">
            <summary>
            Gets or sets default tabulation size.
            Readonly <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.Tabs">
            <summary>
            Gets tabulations of a paragraph.
            Readonly array of <see cref="T:Spire.Presentation.TabStop"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.FontAlignment">
            <summary>
            Gets or sets a font alignment in a paragraph.
            Read/write <see cref="T:Spire.Presentation.FontAlignmentType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.BulletPicture">
            <summary>
            Gets a Picture used as a bullet in a paragraph.
            Read-only <see cref="T:Spire.Presentation.PictureShape"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.DefaultPortionFormat">
            <summary>
            Gets default portion format of a paragraph.
            Read-only <see cref="T:Spire.Presentation.TextRangeFormatData"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.IsBulletHardColor">
            <summary>
            Indicates whether the bullet has own color or inherits it from the first portion in the paragraph.
            <b>NullableBool.True</b> if bullet has own color and <b>NullableBool.False</b> if bullet
            inherits color from the first portion in the paragraph.
            Read/write <see cref="T:Spire.Presentation.TriState"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.BulletColor">
            <summary>
            Gets or sets the color of a bullet.
            Read-only <see cref="T:System.Drawing.Color"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.IsBulletHardFont">
            <summary>
            Indicates whether the bullet has own font or inherits it from the first portion in the paragraph.
            <b>NullableBool.True</b> if bullet has own font and <b>NullableBool.False</b> if bullet
            inherits font from the first portion in the paragraph.
            Read/write <see cref="T:Spire.Presentation.TriState"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.Spire#Presentation#IActiveSlide#Slide">
            <summary>
            Gets the parent slide of a paragraph.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphFormatData.Spire#Presentation#IActivePresentation#Presentation">
            <summary>
            Gets the parent presentation of a paragraph.
            Read-only <see cref="T:Spire.Presentation.PresentationPptx"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.TextParagraphProperties">
            <summary>
            Contains the paragraph's formatting properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraphProperties.Level">
            <summary>
            Gets or sets a level of a paragraph.
            Read/write <see cref="T:System.Int16"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraphProperties.TextTextBulletType">
            <summary>
            Gets or sets the bullet type of a paragraph.
            Read/write <see cref="T:Spire.Presentation.TextBulletType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraphProperties.BulletChar">
            <summary>
            Gets or sets the bullet char of a paragraph.
            Read/write <see cref="T:System.Char"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraphProperties.BulletFont">
            <summary>
            Gets or sets the bullet font of a paragraph.
            Read/write <see cref="T:Spire.Presentation.TextFont"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraphProperties.BulletSize">
            <summary>
            Gets or sets the bullet height of a paragraph.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraphProperties.BulletColor">
            <summary>
            Gets the color format of a bullet of a paragraph.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraphProperties.NumberedBulletStartWith">
            <summary>
            Gets or sets the first number which is used for group of numbered bullets.
            Read/write <see cref="T:System.Int16"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraphProperties.NumberedBulletStyle">
            <summary>
            Gets or sets the style of a numbered bullet.
            Read/write <see cref="T:Spire.Presentation.NumberedBulletStyle"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraphProperties.Alignment">
            <summary>
            Gets or sets the text alignment in a paragraph.
            Read/write <see cref="T:Spire.Presentation.TextAlignmentType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraphProperties.LineSpacing">
            <summary>
            Gets or sets the amount of space between base lines in a paragraph. Positive value means percentage, negative - size in points.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraphProperties.SpaceBefore">
            <summary>
            Gets or sets the amount of space before the first line in a paragraph.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraphProperties.SpaceAfter">
            <summary>
            Gets or sets the amount of space after the last line in a paragraph.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraphProperties.EastAsianLineBreak">
            <summary>
            Indicates whether the East Asian line break is used in a paragraph.
            Read/write <see cref="T:Spire.Presentation.TriState"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraphProperties.RightToLeft">
            <summary>
            Indicates whether the Right to Left writing is used in a paragraph.
            Read/write <see cref="T:Spire.Presentation.TriState"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraphProperties.LatinLineBreak">
            <summary>
            Indicates whether the Latin line break is used in a paragraph.
            Read/write <see cref="T:Spire.Presentation.TriState"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraphProperties.HangingPunctuation">
            <summary>
            Indicates whether the hanging punctuation is used in a paragraph.
            Read/write <see cref="T:Spire.Presentation.TriState"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraphProperties.LeftMargin">
            <summary>
            Gets or sets the left margin in a paragraph.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraphProperties.RightMargin">
            <summary>
            Gets or sets the right margin in a paragraph.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraphProperties.Indent">
            <summary>
            Gets or sets text indentation in a paragraph.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraphProperties.DefaultTabSize">
            <summary>
            Gets or sets default tabulation size.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraphProperties.TabStopsList">
            <summary>
            Gets tabulations of a paragraph.
            Read-only <see cref="T:Spire.Presentation.Collections.TabStopCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraphProperties.FontAlignment">
            <summary>
            Gets or sets a font alignment in a paragraph.
            Read/write <see cref="T:Spire.Presentation.FontAlignmentType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraphProperties.DefaultTextRangeProperties">
            <summary>
            Gets default portion format of a paragraph.
            Read-only <see cref="P:Spire.Presentation.TextParagraphProperties.DefaultTextRangeProperties"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraphProperties.IsBulletInheritFont">
            <summary>
            Indicates whether the bullet has own font or inherits it from the first portion in the paragraph.
            <b>NullableBool.True</b> if bullet has own font and <b>NullableBool.False</b> if bullet
            inherits font from the first portion in the paragraph.
            Read/write <see cref="T:Spire.Presentation.TriState"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraphProperties.Spire#Presentation#IActiveSlide#Slide">
            <summary>
            Gets the parent slide of a paragraph.
            Read-only <see cref="!:PresentationSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraphProperties.Spire#Presentation#IActivePresentation#Presentation">
            <summary>
            Gets the parent presentation of a paragraph.
            Read-only <see cref="T:Spire.Presentation.PresentationPptx"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.DefaultTextRangeProperties">
            <summary>
            Contains the text range formatting properties.
            </summary>
        </member>
        <member name="M:Spire.Presentation.DefaultTextRangeProperties.#ctor">
            <summary>
            Initializes a new instance of the DefaultTextRangeProperties class.
            </summary>
        </member>
        <member name="M:Spire.Presentation.DefaultTextRangeProperties.#ctor(Spire.Presentation.DefaultTextRangeProperties)">
            <summary>
            Initializes a new instance of the DefaultTextRangeProperties class.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.TextLineFormat">
            <summary>
            Gets the TextLineFormat properties for text outlining.
            Read-only <see cref="P:Spire.Presentation.DefaultTextRangeProperties.TextLineFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.Fill">
            <summary>
            Gets the text FillFormat properties.
            Read-only <see cref="P:Spire.Presentation.DefaultTextRangeProperties.Fill"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.EffectDag">
            <summary>
            Gets the text EffectFormat properties.
            Read-only <see cref="P:Spire.Presentation.DefaultTextRangeProperties.EffectDag"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.HighlightColor">
            <summary>
            Gets the color used to highlight a text.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.UnderlineFormat">
            <summary>
            Gets the LineFormat properties used to outline underline line.
            Read-only <see cref="P:Spire.Presentation.DefaultTextRangeProperties.TextLineFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.UnderlineFill">
            <summary>
            Gets the underline line FillFormat properties.
            Read-only <see cref="P:Spire.Presentation.DefaultTextRangeProperties.Fill"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.BookmarkId">
            <summary>
            Gets or sets bookmark target.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.Click">
            <summary>
            Gets or sets the hyperlink defined for mouse click.
            Read/write <see cref="T:Spire.Presentation.ClickHyperlink"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.MouseOver">
            <summary>
            Gets or sets the hyperlink defined for mouse over.
            Read/write <see cref="T:Spire.Presentation.ClickHyperlink"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.IsBold">
            <summary>
            Indicates whether the font is bold.
            Read/write <see cref="T:Spire.Presentation.TriState"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.IsItalic">
            <summary>
            Indicates whether the font is itallic.
            Read/write <see cref="T:Spire.Presentation.TriState"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.Kumimoji">
            <summary>
            Indicates whether the numbers should ignore text eastern language-specific vertical text layout.
            Read/write <see cref="T:Spire.Presentation.TriState"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.NormaliseHeight">
            <summary>
            Indicates whether the height of a text should be normalized.
            Read/write <see cref="T:Spire.Presentation.TriState"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.NoProofing">
            <summary>
            Indicates whether the text would be proofed.
            Read/write <see cref="T:Spire.Presentation.TriState"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.TextUnderlineType">
            <summary>
            Gets or sets the text underline type.
            Read/write <see cref="P:Spire.Presentation.DefaultTextRangeProperties.TextUnderlineType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.TextCapType">
            <summary>
            Gets or sets the type of text capitalization.
            Read/write <see cref="P:Spire.Presentation.DefaultTextRangeProperties.TextCapType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.TextStrikethroughType">
            <summary>
            Gets or sets the strikethrough type of a text.
            Read/write <see cref="P:Spire.Presentation.DefaultTextRangeProperties.TextStrikethroughType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.SmartTagClean">
            <summary>
            Indicates whether the smart tag should be cleaned.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.FontHeight">
            <summary>
            Gets or sets the font height of a text range.
            <b>float.NaN</b> means height is undefined and should be inherited from the Master.
            Read/write <see cref="T:System.Int16"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.LatinFont">
            <summary>
            Gets or sets the Latin font info.
            Read/write <see cref="T:Spire.Presentation.TextFont"/>.
            </summary>
            
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.EastAsianFont">
            <summary>
            Gets or sets the East Asian font info.
            Read/write <see cref="T:Spire.Presentation.TextFont"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.ComplexScriptFont">
            <summary>
            Gets or sets the complex script font info.
            Read/write <see cref="T:Spire.Presentation.TextFont"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.SymbolFont">
            <summary>
            Gets or sets the symbolic font info.
            Read/write <see cref="T:Spire.Presentation.TextFont"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.ScriptDistance">
            <summary>
            Gets or sets the superscript or subscript text.
            Read/write <see cref="T:System.Int16"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.FontMinSize">
            <summary>
            Gets or sets the minimal font size.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.Language">
            <summary>
            Gets or sets the Id of a language.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.AlternativeLanguage">
            <summary>
            Gets or sets the Id of an alternative language.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.LineSpacing">
            <summary>
            Gets or sets the line spacing.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.Spire#Presentation#IActiveSlide#Slide">
            <summary>
            Gets the parent slide of a text.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.DefaultTextRangeProperties.Spire#Presentation#IActivePresentation#Presentation">
            <summary>
            Gets the parent presentation of a text.
            Read-only <see cref="T:Spire.Presentation.PresentationPptx"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.LightRig">
            <summary>
            Represents LightRig.
            </summary>
        </member>
        <member name="M:Spire.Presentation.LightRig.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Spire.Presentation.LightRig.Direction">
            <summary>
            Light direction
            Read/write <see cref="T:Spire.Presentation.LightingDirectionType"/>
            </summary>
        </member>
        <member name="P:Spire.Presentation.LightRig.PresetType">
            <summary>
            Represents a preset light right that can be applied to a shape. 
            The light rig represents a group of lights oriented
            in a specific way relative to a 3D scene.
            Read/write <see cref="T:Spire.Presentation.PresetLightRigType"/>
            </summary>
        </member>
        <member name="M:Spire.Presentation.LightRig.SetRotation(System.Single,System.Single,System.Single)">
            <summary>
            A rotation is defined through the use of a latitude
            coordinate, a longitude coordinate, and a revolution about the axis 
            as the latitude and longitude coordinates.
            </summary>
        </member>
        <member name="M:Spire.Presentation.LightRig.GetRotation">
            <summary>
            A rotation is defined through the use of a latitude
            coordinate, a longitude coordinate, and a revolution about the axis 
            as the latitude and longitude coordinates.
            first element in return array - latitude, second - longitude, third - revolution.
            </summary>
        </member>
        <member name="T:Spire.Presentation.AppException">
            <summary>
            Represents a standard internal exception type.
            </summary>
        </member>
        <member name="M:Spire.Presentation.AppException.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Spire.Presentation.AppException.#ctor(System.String)">
            <summary>
            Constructor allowing a message to be added to this exception.
            </summary>
            <param name="message">message</param>
        </member>
        <member name="M:Spire.Presentation.AppException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor for an exception containing a message and an embedded exception.
            </summary>
            <param name="message">message </param>
            <param name="exception">original exception</param>
        </member>
        <member name="T:Spire.Presentation.ShapeBevelStyle">
            <summary>
            Contains the properties of shape.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeBevelStyle.Width">
            <summary>
            Bevel width.
            Read/write <see cref="T:System.Double"/>
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeBevelStyle.Height">
            <summary>
            Bevel height.
            Read/write <see cref="T:System.Double"/>
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeBevelStyle.PresetType">
            <summary>
            Bevel type.
            Read/write <see cref="T:Spire.Presentation.Drawing.BevelPresetType"/>
            </summary>
        </member>
        <member name="T:Spire.Presentation.ShapeCollection">
            <summary>
            Represents a collection of a shapes.
            </summary>
        </member>
        <member name="M:Spire.Presentation.ShapeCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all elements from the collection to the specified array.
            </summary>
            <param name="array">Target array.</param>
            <param name="index">Starting index in the target array.</param>
        </member>
        <member name="P:Spire.Presentation.ShapeCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeCollection.SyncRoot">
            <summary>
            Gets a synchronization root.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.TabData">
            <summary>
            Represents a text's tabulation stop.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TabData.Position">
            <summary>
            Gets or sets position of a tab.
            Assigning this property can change tab's index in collection and invalidate Enumerator.
            Read/write <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TabData.Alignment">
            <summary>
            Gets or sets align style of a tab.
            Read/write <see cref="T:Spire.Presentation.Converter.Entity.TabAlignment"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.TabData.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit integer that indicates the relative order of the comparands.
            The return value has these meanings:
            <UL>
            <LI> &lt; 0 - This instance is less than obj.</LI>
            <LI> = 0 - This instance is equal to obj.</LI>
            <LI> &gt; 0 - This instance is greater than obj.</LI>
            </UL>
            </returns>
        </member>
        <member name="T:Spire.Presentation.Theme">
            <summary>
            Represents a theme.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Theme.Name">
            <summary>
            Gets the name of a theme.
            Read-only <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Theme.ColorScheme">
            <summary>
            Gets the color scheme.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorScheme"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Theme.FontScheme">
            <summary>
            Gets the font scheme.
            Read-only <see cref="T:Spire.Presentation.FontScheme"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Theme.FormatScheme">
            <summary>
            Gets the shape format scheme.
            Read-only <see cref="T:Spire.Presentation.Drawing.FormatScheme"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Theme.Presentation">
            <summary>
            Gets the parent presentation.
            Read-only <see cref="T:Spire.Presentation.PresentationPptx"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.VideoData">
            <summary>
            Represents an image embedded into a presentation.
            </summary>
        </member>
        <member name="P:Spire.Presentation.VideoData.ContentType">
            <summary>
            Gets a MIME type of an video, encoded in <see cref="P:Spire.Presentation.VideoData.Data"/>.
            Read-only <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.VideoData.Data">
            <summary>
            Gets the copy of an video's data.
            Read-only <see cref="T:System.Byte"/>[].
            </summary>
        </member>
        <member name="P:Spire.Presentation.VideoData.Stream">
            <summary>
            Gets stream.
            </summary>
        </member>
        <member name="M:Spire.Presentation.VideoData.GetStream">
            <summary>
            Gets stream from video.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.VideoData.SaveToFile(System.String)">
            <summary>
            Save video to disk.
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="P:Spire.Presentation.IVideo.EmbedImage">
            <summary>
            Gets or sets an Video image.
            Read/write <see cref="P:Spire.Presentation.IVideo.EmbedImage"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.RewindVideo">
            <summary>
            Indicates whether a video is automatically rewinded to start
            as soon as the movie has finished playing.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.PlayLoopMode">
            <summary>
            Indicates whether an audio is looped.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.HideAtShowing">
            <summary>
            Indicates whether an AudioFrame is hidden.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.Volume">
            <summary>
            Gets or sets the audio volume.
            Read/write <see cref="T:Spire.Presentation.AudioVolumeType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.PlayMode">
            <summary>
            Gets or sets the video play mode.
            Read/write <see cref="T:Spire.Presentation.VideoPlayMode"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.FullScreenMode">
            <summary>
            Indicates whether a video is shown in full screen mode.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.LinkPathLong">
            <summary>
            Gets or sets the name of an audio file which is linked to a VideoFrame.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.EmbeddedVideoData">
            <summary>
            Gets or sets embedded video object.
            Read/write <see cref="T:Spire.Presentation.VideoData"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.ShapeLocking">
            <summary>
            Gets shape's locks.
            Readonly <see cref="T:Spire.Presentation.SlidePictureLocking"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.ShapeType">
            <summary>
            Returns or sets the AutoShape type.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.PictureFill">
            <summary>
            Gets the PictureFillFormat object.
            Read-only <see cref="T:Spire.Presentation.Drawing.PictureFillFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.ShapeStyle">
            <summary>
            Gets shape's style object.
            Read-only <see cref="P:Spire.Presentation.IVideo.ShapeStyle"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.Adjustments">
            <summary>
            Gets a collection of shape's adjustment values.
            Readonly <see cref="T:Spire.Presentation.Collections.ShapeAdjustCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.IsTextBox">
            <summary>
            Indicates whether the shape is TextHolder.
            Read-only <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.Placeholder">
            <summary>
            Gets the placeholder for a shape.
            Read-only <see cref="P:Spire.Presentation.IVideo.Placeholder"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.TagsList">
            <summary>
            Gets the shape's tags collection.
            Read-only <see cref="T:Spire.Presentation.Collections.TagCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.Frame">
            <summary>
            Gets or sets the shape frame's properties.
            Read/write <see cref="T:Spire.Presentation.Drawing.GraphicFrame"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.Line">
            <summary>
            Gets the LineFormat object that contains line formatting properties for a shape.
            Read-only <see cref="P:Spire.Presentation.IVideo.Line"/>.
            Note: can return null for certain types of shapes which don't have line properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.ThreeD">
            <summary>
            Gets the ThreeDFormat object that 3d effect properties for a shape.
            Read-only <see cref="T:Spire.Presentation.Drawing.FormatThreeD"/>.
            Note: can return null for certain types of shapes which don't have 3d properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.EffectDag">
            <summary>
            Gets the EffectFormat object which contains pixel effects applied to a shape.
            Read-only <see cref="P:Spire.Presentation.IVideo.EffectDag"/>
            Note: can return null for certain types of shapes which don't have effect properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.Fill">
            <summary>
            Gets the FillFormat object that contains fill formatting properties for a shape.
            Read-only <see cref="P:Spire.Presentation.IVideo.Fill"/>.
            Note: can return null for certain types of shapes which don't have fill properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.Click">
            <summary>
            Gets or sets the hyperlink defined for mouse click.
            Read/write <see cref="T:Spire.Presentation.ClickHyperlink"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.MouseOver">
            <summary>
            Gets or sets the hyperlink defined for mouse over.
            Read/write <see cref="T:Spire.Presentation.ClickHyperlink"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.IsHidden">
            <summary>
            Indicates whether the shape is hidden.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.Parent">
            <summary>
            Gets the parent slide of a shape.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.ZOrderPosition">
            <summary>
            Gets the position of a shape in the z-order.
            Shapes[0] returns the shape at the back of the z-order,
            and Shapes[Shapes.Count - 1] returns the shape at the front of the z-order.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.Rotation">
            <summary>
            Gets or sets the number of degrees the specified shape is rotated around
            the z-axis. A positive value indicates clockwise rotation; a negative value
            indicates counterclockwise rotation.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.Left">
            <summary>
            Gets or sets the x-coordinate of the upper-left corner of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.Top">
            <summary>
            Gets or sets the y-coordinate of the upper-left corner of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.Width">
            <summary>
            Gets or sets the width of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.Height">
            <summary>
            Gets or sets the height of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.AlternativeText">
            <summary>
            Gets or sets the alternative text associated with a shape.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.Name">
            <summary>
            Gets or sets the name of a shape.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IVideo.Slide">
            <summary>
            Gets the parent slide of a shape.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.IVideo.RemovePlaceholder">
            <summary>
            Removes placeholder from the shape.
            </summary>
        </member>
        <member name="M:Spire.Presentation.IVideo.Dispose">
            <summary>
            Dispose object and free resources.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Video">
            <summary>
             Represents a video clip on a slide.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Video.EmbedImage">
            <summary>
            Gets or sets an Video image.
            Read/write <see cref="P:Spire.Presentation.Video.EmbedImage"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Video.RewindVideo">
            <summary>
            Indicates whether a video is automatically rewinded to start
            as soon as the movie has finished playing.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Video.PlayLoopMode">
            <summary>
            Indicates whether an audio is looped.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Video.HideAtShowing">
            <summary>
            Indicates whether an AudioFrame is hidden.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Video.Volume">
            <summary>
            Gets or sets the audio volume.
            Read/write <see cref="T:Spire.Presentation.AudioVolumeType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Video.PlayMode">
            <summary>
            Gets or sets the video play mode.
            Read/write <see cref="T:Spire.Presentation.VideoPlayMode"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Video.FullScreenMode">
            <summary>
            Indicates whether a video is shown in full screen mode.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Video.LinkPathLong">
            <summary>
            Gets or sets the name of an audio file which is linked to a VideoFrame.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Video.EmbeddedVideoData">
            <summary>
            Gets or sets embedded video object.
            Read/write <see cref="T:Spire.Presentation.VideoData"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAutoShape.Locking">
            <summary>
            Gets shape's locks.
            Read-only <see cref="P:Spire.Presentation.IAutoShape.Locking"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAutoShape.TextFrame">
            <summary>
            Gets TextFrame object for the AutoShape.
            Read-only <see cref="T:Spire.Presentation.TextFrameProperties"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAutoShape.UseBackgroundFill">
            <summary>
            Indicates whether this autoshape should be filled with slide's background fill instead of specified by style or fill format.
            Read/write bool.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAutoShape.IsTextBox">
            <summary>
            Indicates whether the shape is TextHolder.
            Read-only <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAutoShape.Placeholder">
            <summary>
            Gets the placeholder for a shape.
            Read-only <see cref="P:Spire.Presentation.IAutoShape.Placeholder"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAutoShape.TagsList">
            <summary>
            Gets the shape's tags collection.
            Read-only <see cref="T:Spire.Presentation.Collections.TagCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAutoShape.Frame">
            <summary>
            Gets or sets the shape frame's properties.
            Read/write <see cref="T:Spire.Presentation.Drawing.GraphicFrame"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAutoShape.Line">
            <summary>
            Gets the LineFormat object that contains line formatting properties for a shape.
            Read-only <see cref="P:Spire.Presentation.IAutoShape.Line"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAutoShape.ThreeD">
            <summary>
            Gets the ThreeDFormat object that 3d effect properties for a shape.
            Read-only <see cref="T:Spire.Presentation.Drawing.FormatThreeD"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAutoShape.EffectDag">
            <summary>
            Gets the EffectFormat object which contains pixel effects applied to a shape.
            Read-only <see cref="P:Spire.Presentation.IAutoShape.EffectDag"/>
            Note: can return null for certain types of shapes which don't have effect properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAutoShape.Fill">
            <summary>
            Gets the FillFormat object that contains fill formatting properties for a shape.
            Read-only <see cref="P:Spire.Presentation.IAutoShape.Fill"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAutoShape.Click">
            <summary>
            Gets or sets the hyperlink defined for mouse click.
            Read/write <see cref="T:Spire.Presentation.ClickHyperlink"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAutoShape.MouseOver">
            <summary>
            Gets or sets the hyperlink defined for mouse over.
            Read/write <see cref="T:Spire.Presentation.ClickHyperlink"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAutoShape.IsHidden">
            <summary>
            Indicates whether the shape is hidden.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAutoShape.Parent">
            <summary>
            Gets the parent slide of a shape.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAutoShape.ZOrderPosition">
            <summary>
            Gets the position of a shape in the z-order.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAutoShape.Rotation">
            <summary>
            Gets or sets the number of degrees the specified shape is rotated.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAutoShape.Left">
            <summary>
            Gets or sets the x-coordinate of the upper-left corner of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAutoShape.Top">
            <summary>
            Gets or sets the y-coordinate of the upper-left corner of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAutoShape.Width">
            <summary>
            Gets or sets the width of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAutoShape.Height">
            <summary>
            Gets or sets the height of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAutoShape.AlternativeText">
            <summary>
            Gets or sets the alternative text associated with a shape.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAutoShape.Name">
            <summary>
            Gets or sets the name of a shape.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IAutoShape.Slide">
            <summary>
            Gets the parent slide of a shape.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.IAutoShape.AppendTextFrame(System.String)">
            <summary>
            Adds a new TextFrame to a shape.
            If shape already has TextFrame then simply changes its text.
            </summary>
            <param name="text">Default text for a new TextFrame.</param>
        </member>
        <member name="M:Spire.Presentation.IAutoShape.RemovePlaceholder">
            <summary>
            Removes placeholder from the shape.
            </summary>
        </member>
        <member name="M:Spire.Presentation.IAutoShape.Dispose">
            <summary>
            Dispose object and free resources.
            </summary>
        </member>
        <member name="T:Spire.Presentation.AutoShape">
            <summary>
             Represents an AutoShape.
            </summary>
        </member>
        <member name="P:Spire.Presentation.AutoShape.Locking">
            <summary>
            Gets shape's locks.
            Read-only <see cref="P:Spire.Presentation.AutoShape.Locking"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.AutoShape.TextFrame">
            <summary>
            Gets TextFrame object for the AutoShape.
            Read-only <see cref="T:Spire.Presentation.TextFrameProperties"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.AutoShape.ProcessFitShapeToText">
            <summary>
            Calculates required size for shape's textframe and 
            </summary>
        </member>
        <member name="P:Spire.Presentation.AutoShape.UseBackgroundFill">
            <summary>
            Indicates whether this autoshape should be filled with slide's background fill instead of specified by style or fill format.
            Read/write bool.
            </summary>
        </member>
        <member name="M:Spire.Presentation.AutoShape.AppendTextFrame(System.String)">
            <summary>
            Adds a new TextFrame to a shape.
            If shape already has TextFrame then simply changes its text.
            </summary>
            <param name="text">Default text for a new TextFrame.</param>
        </member>
        <member name="T:Spire.Presentation.ShapeLocking">
            <summary>
            Indicates which operations are disabled on the parent Autoshape.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeLocking.GroupingProtection">
            <summary>
            Indicates whether an adding this shape to a group Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeLocking.SelectionProtection">
            <summary>
            Indicates whether a selecting this shape Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeLocking.RotationProtection">
            <summary>
            Indicates whether a changing rotation angle of this shape Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeLocking.AspectRatioProtection">
            <summary>
            Indicates whether a shape have to preserve aspect ratio on resizing.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeLocking.PositionProtection">
            <summary>
            Indicates whether a moving this shape Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeLocking.ResizeProtection">
            <summary>
            Indicates whether a resizing this shape Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeLocking.EditPointProtection">
            <summary>
            Indicates whether a direct changing of contour of this shape Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeLocking.AdjustHandlesProtection">
            <summary>
            Indicates whether a changing adjust values Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeLocking.ArrowheadChangesProtection">
            <summary>
            Indicates whether a changing arrowheads Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeLocking.ShapeTypeProtection">
            <summary>
            Indicates whether a changing of a shape type Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeLocking.TextEditingProtection">
            <summary>
            Indicates whether an editing of text Disallow.
            </summary>
        </member>
        <member name="T:Spire.Presentation.BaseShapeLocking">
            <summary>
            Represents a base class for shape locks 
            </summary>
        </member>
        <member name="T:Spire.Presentation.ActiveSlide">
            <summary>
             Represents common slide types.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ActiveSlide.Parent">
            <summary>
            Gets the parent presentation.
            Read-only <see cref="T:Spire.Presentation.PresentationPptx"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ActiveSlide.Shapes">
            <summary>
            Gets the shapes of a slide.
            Read-only <see cref="T:Spire.Presentation.ShapeCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ActiveSlide.Name">
            <summary>
            Gets or sets the name of a slide.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ActiveSlide.SlideID">
            <summary>
            Gets the ID of a slide.
            Read-only <see cref="T:System.UInt32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ActiveSlide.Theme">
            <summary>
            Gets a theme for this slide
            </summary>
        </member>
        <member name="M:Spire.Presentation.ActiveSlide.ApplyTheme(Spire.Presentation.SlideColorScheme)">
            <summary>
            Applies extra color scheme to a slide.
            </summary>
            <param name="scheme"></param>
        </member>
        <member name="P:Spire.Presentation.ActiveSlide.TagsList">
            <summary>
            Gets the slide's tags collection.
            Read-only <see cref="T:Spire.Presentation.Collections.TagCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ActiveSlide.Timeline">
            <summary>
            Gets animation timeline object.
            Read-only <see cref="T:Spire.Presentation.Drawing.Animation.TimeLine"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ActiveSlide.SlideShowTransition">
            <summary>
            Gets the Transition object which contains information about
            how the specified slide advances during a slide show.
            Read-only <see cref="P:Spire.Presentation.ActiveSlide.SlideShowTransition"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ActiveSlide.SlideBackground">
            <summary>
            Gets slide's background.
            Read only <see cref="P:Spire.Presentation.ActiveSlide.SlideBackground"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.ActiveSlide.FindShapeByAltText(System.String)">
            <summary>
            Finds first occurrence of a shape with the specified alternative text.
            </summary>
            <param name="altText">Alternative text.</param>
            <returns>Shape object or null.</returns>
        </member>
        <member name="T:Spire.Presentation.Cell">
            <summary>
            Represents a cell of a table.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Cell.OffsetX">
            <summary>
            Gets a distance from left side of a table to left side of a cell.
            Read-only <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Cell.OffsetY">
            <summary>
            Gets a distance from top side of a table to top side of a cell.
            Read-only <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Cell.FirstRowIndex">
            <summary>
            Gets an index of first row, covered by the cell.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Cell.FirstColumnIndex">
            <summary>
            Gets an index of first column, covered by the cell.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Cell.Width">
            <summary>
            Gets the width of the cell.
            Read-only <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Cell.Height">
            <summary>
            Gets the height of the cell.
            Read-only <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Cell.MinimalHeight">
            <summary>
            Gets the minimum height of a cell.
            This is a sum of minimal heights of all rows cowered by the cell.
            Read-only <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Cell.BorderLeft">
            <summary>
            Gets a left border line properties object.
            Read-only <see cref="T:Spire.Presentation.TextLineFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Cell.BorderTop">
            <summary>
            Gets a top border line properties object.
            Read-only <see cref="T:Spire.Presentation.TextLineFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Cell.BorderRight">
            <summary>
            Gets a right border line properties object.
            Read-only <see cref="T:Spire.Presentation.TextLineFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Cell.BorderBottom">
            <summary>
            Gets a bottom border line properties object.
            Read-only <see cref="T:Spire.Presentation.TextLineFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Cell.BorderDiagonalDown">
            <summary>
            Gets a top-left to bottom-right diagonal line properties object.
            Read-only <see cref="T:Spire.Presentation.TextLineFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Cell.BorderDiagonalUp">
            <summary>
            Gets a bottom-left to top-right diagonal line properties object.
            Read-only <see cref="T:Spire.Presentation.TextLineFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Cell.FillFormat">
            <summary>
            Gets a cell fill properties object.
            Read-only <see cref="P:Spire.Presentation.Cell.FillFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Cell.MarginLeft">
            <summary>
            Gets or sets the left margin in a TextFrame.
            Read/write <see cref="T:System.Double"/>. 
            </summary>
        </member>
        <member name="P:Spire.Presentation.Cell.MarginRight">
            <summary>
            Gets or sets the right margin in a TextFrame.
            Read/write <see cref="T:System.Double"/>. 
            </summary>
        </member>
        <member name="P:Spire.Presentation.Cell.MarginTop">
            <summary>
            Gets or sets the top margin in a TextFrame.
            Read/write <see cref="T:System.Double"/>. 
            </summary>
        </member>
        <member name="P:Spire.Presentation.Cell.MarginBottom">
            <summary>
            Gets or sets the bottom margin in a TextFrame.
            Read/write <see cref="T:System.Double"/>. 
            </summary>
        </member>
        <member name="P:Spire.Presentation.Cell.VerticalTextType">
            <summary>
            Gets or sets the type of vertical text.
            Read/write <see cref="P:Spire.Presentation.Cell.VerticalTextType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Cell.TextAnchorType">
            <summary>
            Gets or sets the text anchor type.
            Read/write <see cref="P:Spire.Presentation.Cell.TextAnchorType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Cell.TextHorizontalOverflow">
            <summary>
            Gets or sets the text horizontal overflow type.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Cell.AnchorCenter">
            <summary>
            Indicates whether or not text box centered inside a cell.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Cell.ColSpan">
            <summary>
            Gets the number of grid columns in the parent table's table grid
            which shall be spanned by the current cell. This property allows cells
            to have the appearance of being merged, as they span vertical boundaries
            of other cells in the table.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Cell.RowSpan">
            <summary>
            Gets the number of rows that a merged cell spans. This is used in combination
            with the vMerge attribute on other cells in order to specify the beginning cell
            of a horizontal merge.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Cell.TextFrame">
            <summary>
            Gets the text frame of a cell.
            Read-only <see cref="T:Spire.Presentation.TextFrameProperties"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Cell.Slide">
            <summary>
            Gets the parent slide of a cell.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Cell.Presentation">
            <summary>
            Gets the parent presentation of a cell.
            Read-only <see cref="T:Spire.Presentation.PresentationPptx"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Cell.Split(System.Int32,System.Int32)">
            <summary>
            Split the cell.
            </summary>
            <param name="RowCount">The number of cells being split in the row direction.</param>
            <param name="ColunmCount">The number of cells being split in the colunm direction.</param>
        </member>
        <member name="M:Spire.Presentation.Cell.SplitBySpan">
            <summary>
            The cell is split into its RowSpan rows in the  row direction,
            and it is split into its ColSpan colunms in the colunm direction.
            </summary>
        </member>
        <member name="T:Spire.Presentation.CellCollection">
            <summary>
            Represents a collection of cells.
            </summary>
        </member>
        <member name="P:Spire.Presentation.CellCollection.Item(System.Int32)">
            <summary>
            Gets a cell by index.
            Read-only <see cref="T:Spire.Presentation.Cell"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.CellCollection.Count">
            <summary>
            Gets the count of cells in a collection.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.CellCollection.Slide">
            <summary>
            Gets the parent slide of a CellExCollection.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.CellCollection.Presentation">
            <summary>
            Gets the parent presentation of a CellExCollection.
            Read-only <see cref="T:Spire.Presentation.PresentationPptx"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.CellCollection.GetEnumerator">
            <summary>
            Gets an enumerator for all cells which top-left corner
            belongs to this collection. Each cell returned only once.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the collection.</returns>
        </member>
        <member name="M:Spire.Presentation.CellCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all elements from the collection to the specified array.
            </summary>
            <param name="array">Target array.</param>
            <param name="index">Starting index in the target array.</param>
        </member>
        <member name="P:Spire.Presentation.CellCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Spire.Presentation.CellCollection.SyncRoot">
            <summary>
            Gets a synchronization root.
            Readonly <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.TableColumn">
            <summary>
            Represents a table column.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TableColumn.Width">
            <summary>
            Gets or sets the width of a column.
            Read/Write <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Connector">
            <summary>
             Represents a connector.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Connector.ShapeLocking">
            <summary>
            Gets lock type of shape.
            Read-only <see cref="T:Spire.Presentation.ConnectorLocking"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Connector.ShapeType">
            <summary>
            Gets or sets the AutoShape type.
            Read/write <see cref="P:Spire.Presentation.Connector.ShapeType"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.ConnectorLocking">
            <summary>
            Indicates which operations are disabled on the parent Connector.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ConnectorLocking.GroupingProtection">
            <summary>
            Indicates whether an adding this shape to a group Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ConnectorLocking.SelectionProtection">
            <summary>
            Indicates whether a selecting this shape Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ConnectorLocking.RotationProtection">
            <summary>
            Indicates whether a changing rotation angle of this shape Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ConnectorLocking.AspectRatioProtection">
            <summary>
            Indicates whether a shape have to preserve aspect ratio on resizing.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ConnectorLocking.PositionProtection">
            <summary>
            Indicates whether a moving this shape Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ConnectorLocking.ResizeProtection">
            <summary>
            Indicates whether a resizing this shape Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ConnectorLocking.EditPointProtection">
            <summary>
            Indicates whether a direct changing of contour of this shape Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ConnectorLocking.AdjustHandlesProtection">
            <summary>
            Indicates whether a changing adjust values Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ConnectorLocking.ArrowheadChangesProtection">
            <summary>
            Indicates whether a changing arrowheads Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ConnectorLocking.ShapeTypeProtection">
            <summary>
            Indicates whether a changing of a shape type Disallow.
            </summary>
        </member>
        <member name="T:Spire.Presentation.SlideColorScheme">
            <summary>
            Represents an additional color scheme which can be assigned to a slide.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlideColorScheme.Name">
            <summary>
            Gets a name of this scheme.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlideColorScheme.ColorScheme">
            <summary>
            Gets a color scheme.
            Readonly <see cref="T:Spire.Presentation.Drawing.ColorScheme"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.TextFont">
            <summary>
            Represents a font definition. Immutable.
            </summary>
        </member>
        <member name="M:Spire.Presentation.TextFont.#ctor(System.String)">
            <summary>
            Creates a new FontData object with the specified font name.
            </summary>
            <param name="fontName">Font name.</param>
        </member>
        <member name="P:Spire.Presentation.TextFont.FontName">
            <summary>
            Gets the font name. Read-only <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.TextFont.GetFontName(Spire.Presentation.Theme)">
            <summary>
            Gets the font name, replacing theme referrence with an actual font used.
            </summary>
            <param name="theme">Theme from which themed font name should be taken. Its up to caller to provide a correct value. See <see cref="P:Spire.Presentation.ActiveSlide.Theme"/></param>
            <returns>Font name.</returns>
        </member>
        <member name="M:Spire.Presentation.TextFont.Equals(System.Object)">
            <summary>
            Indicates whether two FontData instances are equal.
            </summary>
            <param name="obj">The FontData to compare with the current FontData.</param>
            <returns><b>true</b> if the specified FontData is equal to the current FontData; otherwise, <b>false</b>.</returns>
        </member>
        <member name="T:Spire.Presentation.FontScheme">
            <summary>
            Stores theme-defined fonts.
            </summary>
        </member>
        <member name="P:Spire.Presentation.FontScheme.MinorFont">
            <summary>
            Gets the fonts collection for a "body" part of the slide.
            Readonly <see cref="T:Spire.Presentation.LocaleFonts"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.FontScheme.MajorFont">
            <summary>
            Gets the fonts collection for a "heading" part of the slide.
            Readonly <see cref="T:Spire.Presentation.LocaleFonts"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.FontScheme.Name">
            <summary>
            Gets the font scheme name.
            Readonly string.
            </summary>
        </member>
        <member name="T:Spire.Presentation.LocaleFonts">
            <summary>
            Fonts collection.
            </summary>
        </member>
        <member name="P:Spire.Presentation.LocaleFonts.LatinFont">
            <summary>
            Gets or sets the Latin font.
            Read/write <see cref="T:Spire.Presentation.TextFont"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.LocaleFonts.EastAsianFont">
            <summary>
            Gets or sets the East Asian font.
            Read/write <see cref="T:Spire.Presentation.TextFont"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.LocaleFonts.ComplexScriptFont">
            <summary>
            Gets or sets the complex script font.
            Read/write <see cref="T:Spire.Presentation.TextFont"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.GroupShape">
            <summary>
             Represents a group of shapes on a slide.
            </summary>
        </member>
        <member name="P:Spire.Presentation.GroupShape.Line">
            <summary>
            Gets the LineFormat object that contains line formatting properties for a shape.
            Read-only <see cref="P:Spire.Presentation.GroupShape.Line"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.GroupShape.ShapeLocking">
            <summary>
            Gets shape's locks.
            Readonly <see cref="T:Spire.Presentation.GroupShapeLocking"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.GroupShape.Shapes">
            <summary>
            Gets the collection of shapes inside the group.
            Read-only <see cref="T:Spire.Presentation.ShapeCollection"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.GroupShapeLocking">
            <summary>
            Indicates which operations are disabled on the parent GroupShape.
            </summary>
        </member>
        <member name="P:Spire.Presentation.GroupShapeLocking.GroupingProtection">
            <summary>
            Indicates whether an adding this shape to a group Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.GroupShapeLocking.UngroupingProtection">
            <summary>
            Indicates whether splitting this groupshape Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.GroupShapeLocking.SelectionProtection">
            <summary>
            Indicates whether a selecting this shape Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.GroupShapeLocking.RotationProtection">
            <summary>
            Indicates whether a changing rotation angle of this shape Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.GroupShapeLocking.AspectRatioProtection">
            <summary>
            Indicates whether a shape have to preserve aspect ratio on resizing.
            </summary>
        </member>
        <member name="P:Spire.Presentation.GroupShapeLocking.PositionProtection">
            <summary>
            Indicates whether a moving this shape Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.GroupShapeLocking.ResizeProtection">
            <summary>
            Indicates whether a resizing this shape Disallow.
            </summary>
        </member>
        <member name="T:Spire.Presentation.ClickHyperlink">
            <summary>
            Represents a hyperlink associated with a non-placeholder shape or text.
            </summary>
        </member>
        <member name="M:Spire.Presentation.ClickHyperlink.#ctor(System.String)">
            <summary>
            Creates an instance of a hyperlink.
            </summary>
            <param name="hyperlinkUrl">Hyperlink URL.</param>
        </member>
        <!-- 对于成员“M:Spire.Presentation.ClickHyperlink.#ctor(Spire.Presentation.ISlide)”忽略有格式错误的 XML 注释 -->
        <member name="P:Spire.Presentation.ClickHyperlink.Address">
            <summary>
            Returns or sets the Internet address (URL) to the target document.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ClickHyperlink.ActionType">
            <summary>
            Represents the type of hyperlink. Read-only.
            Readonly <see cref="T:Spire.Presentation.HyperlinkActionType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ClickHyperlink.TargetFrame">
            <summary>
            Gets the frame within the parent HTML frameset 
            Read-only <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ClickHyperlink.Tooltip">
            <summary>
            Returns or sets the ScreenTip text of a hyperlink.
            Read-only <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ClickHyperlink.History">
            <summary>
            Indicates whether the target will be added
            to a list.
            Read-only <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ClickHyperlink.IsHighlightClick">
            <summary>
            Indicates whether the hyperlink should be highlighted on click.
            Read-only <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ClickHyperlink.EndSounds">
            <summary>
            Indicates whether the sound should be stopped on hyperlink click.
            Read-only <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.ClickHyperlink.Equals(System.Object)">
            <summary>
            Indicates whether the two Hyperlink instances are equal.
            </summary>
            <param name="obj">The Hyperlink to compare with the current Hyperlink.</param>
        </member>
        <member name="M:Spire.Presentation.ClickHyperlink.Equals(Spire.Presentation.ClickHyperlink)">
            <summary>
            Indicates whether the two Hyperlink instances are equal.
            </summary>
            <param name="hlink">The Hyperlink to compare with the current Hyperlink.</param>
        </member>
        <member name="T:Spire.Presentation.IActivePresentation">
            <summary>
            Represents a component of a presentation.
            </summary>
        </member>
        <member name="T:Spire.Presentation.IActiveSlide">
            <summary>
            Represents a component of a slide.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ILayout.LayoutType">
            <summary>
            Gets layout type of this layout slide.
            </summary>
        </member>
        <member name="M:Spire.Presentation.ILayout.GetDependingSlides">
            <summary>
             Gets an array with all slides, which depend on this layout slide.
            </summary>
        </member>
        <member name="T:Spire.Presentation.TextLineFormat">
            <summary>
            Represents format of a line.
            </summary>
        </member>
        <member name="M:Spire.Presentation.TextLineFormat.Equals(System.Object)">
            <summary>
            Indicates whether the two LineFormat instances are equal.
            </summary>
            <param name="obj">The LineFormat to compare with the current LineFormat.</param>
            <returns><b>true</b> if the specified LineFormat is equal to the current LineFormat; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Spire.Presentation.TextLineFormat.Equals(Spire.Presentation.TextLineFormat)">
            <summary>
            Indicates whether the two LineFormat instances are equal.
            </summary>
            <param name="lf">The LineFormat to compare with the current LineFormat.</param>
            <returns><b>true</b> if the specified LineFormat is equal to the current LineFormat; otherwise, <b>false</b>.</returns>
        </member>
        <member name="P:Spire.Presentation.TextLineFormat.FillFormat">
            <summary>
            Gets the fill format of a line.
            Read-only <see cref="T:Spire.Presentation.Drawing.LineFillFormat"/> .
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextLineFormat.FillType">
            <summary>
            Gets or sets the fill format type.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextLineFormat.Gradient">
            <summary>
            Gets the Gradient fill format.
            Read-only <see cref="P:Spire.Presentation.TextLineFormat.Pattern"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextLineFormat.Pattern">
            <summary>
            Gets the pattern fill format.
            Read-only <see cref="P:Spire.Presentation.TextLineFormat.Pattern"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextLineFormat.SolidFillColor">
            <summary>
            Gets the color of a solid fill.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextLineFormat.RotateWithShape">
            <summary>
            Indicates whether the fill should be rotated with a shape.
            Read/write <see cref="T:Spire.Presentation.TriState"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextLineFormat.Width">
            <summary>
            Gets or sets the width of a line.
            Read/write <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextLineFormat.DashStyle">
            <summary>
            Gets or sets the line dash style.
            Read/write <see cref="T:Spire.Presentation.LineDashStyleType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextLineFormat.CapStyle">
            <summary>
            Gets or sets the line cap style.
            Read/write <see cref="T:Spire.Presentation.LineCapStyle"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextLineFormat.Style">
            <summary>
            Gets or sets the line style.
            Read/write <see cref="T:Spire.Presentation.TextLineStyle"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextLineFormat.Alignment">
            <summary>
            Gets or sets the line alignment.
            Read/write <see cref="T:Spire.Presentation.Drawing.PenAlignmentType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextLineFormat.JoinStyle">
            <summary>
            Gets or sets the lines join style.
            Read/write <see cref="T:Spire.Presentation.LineJoinType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextLineFormat.MiterLimit">
            <summary>
            Gets or sets the miter limit of a line.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextLineFormat.LineBeginType">
            <summary>
            Gets or sets the arrowhead style at the beginning of a line.
            Read/write <see cref="T:Spire.Presentation.LineEndType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextLineFormat.LineEndType">
            <summary>
            Gets or sets the arrowhead style at the end of a line.
            Read/write <see cref="T:Spire.Presentation.LineEndType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextLineFormat.LineBeginWidth">
            <summary>
            Gets or sets the arrowhead width at the beginning of a line.
            Read/write <see cref="T:Spire.Presentation.LineEndWidth"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextLineFormat.LineEndWidth">
            <summary>
            Gets or sets the arrowhead width at the end of a line.
            Read/write <see cref="T:Spire.Presentation.LineEndWidth"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextLineFormat.LineBeginLength">
            <summary>
            Gets or sets the arrowhead length at the beginning of a line.
            Read/write <see cref="T:Spire.Presentation.LineEndLength"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextLineFormat.LineEndLength">
            <summary>
            Gets or sets the arrowhead length at the end of a line.
            Read/write <see cref="T:Spire.Presentation.LineEndLength"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextLineFormat.Spire#Presentation#IActiveSlide#Slide">
            <summary>
            Gets the parent slide of a LineFormat.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextLineFormat.Spire#Presentation#IActivePresentation#Presentation">
            <summary>
            Gets the parent presentation of a LineFormat.
            Read-only <see cref="T:Spire.Presentation.PresentationPptx"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.INoteMasterSlide.Theme">
            <summary>
            Gets the slide's theme.
            </summary>
        </member>
        <member name="P:Spire.Presentation.INoteMasterSlide.Shapes">
            <summary>
            Gets the shapes of a slide.
            Read-only <see cref="T:Spire.Presentation.ShapeCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.INoteMasterSlide.Name">
            <summary>
            Gets or sets the name of a slide.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.INoteMasterSlide.SlideID">
            <summary>
            Gets the ID of a slide.
            Read-only <see cref="T:System.UInt32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.INoteMasterSlide.TagsList">
            <summary>
            Gets the slide's tags collection.
            Read-only <see cref="T:Spire.Presentation.Collections.TagCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.INoteMasterSlide.Timeline">
            <summary>
            Gets animation timeline object.
            Read-only <see cref="T:Spire.Presentation.Drawing.Animation.TimeLine"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.INoteMasterSlide.SlideShowTransition">
            <summary>
            Gets the Transition object which contains information about
            how the specified slide advances during a slide show.
            Read-only <see cref="P:Spire.Presentation.INoteMasterSlide.SlideShowTransition"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.INoteMasterSlide.SlideBackground">
            <summary>
            Gets slide's background.
            Read only <see cref="P:Spire.Presentation.INoteMasterSlide.SlideBackground"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.INoteMasterSlide.Parent">
            <summary>
            Reference to Parent object. Read-only.
            </summary>
        </member>
        <member name="M:Spire.Presentation.INoteMasterSlide.ApplyTheme(Spire.Presentation.SlideColorScheme)">
            <summary>
            Applies extra color scheme to a slide.
            </summary>
            <param name="scheme"></param>
        </member>
        <member name="M:Spire.Presentation.INoteMasterSlide.Dispose">
            <summary>
            Dispose object and free resources.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IMasterSlide.Theme">
            <summary>
            Gets the slide's theme.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IMasterSlide.TitleStyle">
            <summary>
            Gets the style of a title text.
            Read-only <see cref="T:Spire.Presentation.TextStyle"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IMasterSlide.BodyStyle">
            <summary>
            Gets the style of a body text.
            Read-only <see cref="T:Spire.Presentation.TextStyle"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IMasterSlide.OtherStyle">
            <summary>
            Gets the style of an other text.
            Read-only <see cref="T:Spire.Presentation.TextStyle"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IMasterSlide.Shapes">
            <summary>
            Gets the shapes of a slide.
            Read-only <see cref="T:Spire.Presentation.ShapeCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IMasterSlide.Name">
            <summary>
            Gets or sets the name of a slide.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IMasterSlide.SlideID">
            <summary>
            Gets the ID of a slide.
            Read-only <see cref="T:System.UInt32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IMasterSlide.TagsList">
            <summary>
            Gets the slide's tags collection.
            Read-only <see cref="T:Spire.Presentation.Collections.TagCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IMasterSlide.Timeline">
            <summary>
            Gets animation timeline object.
            Read-only <see cref="T:Spire.Presentation.Drawing.TimeLine.TimeLine"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IMasterSlide.SlideShowTransition">
            <summary>
            Gets the Transition object which contains information about
            how the specified slide advances during a slide show.
            Read-only <see cref="P:Spire.Presentation.IMasterSlide.SlideShowTransition"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IMasterSlide.SlideBackground">
            <summary>
            Gets slide's background.
            Read only <see cref="P:Spire.Presentation.IMasterSlide.SlideBackground"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IMasterSlide.Parent">
            <summary>
            Reference to Parent object. Read-only.
            </summary>
        </member>
        <member name="M:Spire.Presentation.IMasterSlide.GetDependingSlides">
            <summary>
            Gets an array with all slides, which depend on this master slide.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.IMasterSlide.ApplyTheme(Spire.Presentation.SlideColorScheme)">
            <summary>
            Applies extra color scheme to a slide.
            </summary>
            <param name="scheme"></param>
        </member>
        <member name="M:Spire.Presentation.IMasterSlide.Dispose">
            <summary>
            Dispose object and free resources.
            </summary>
        </member>
        <member name="P:Spire.Presentation.MasterSlide.Layouts">
            <summary>
            get layoutslides of one special Master slide
            </summary>
        </member>
        <member name="T:Spire.Presentation.NotesSlide">
            <summary>
            Represents a notes slide in a presentation.
            </summary>
        </member>
        <member name="P:Spire.Presentation.NotesSlide.NotesTextFrame">
            <summary>
            Gets a TextFrame with notes' text if there is one.
            Readonly <see cref="T:Spire.Presentation.TextFrameProperties"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.NotesSlide.Theme">
            <summary>
            Gets the theme object from master.
            </summary>
        </member>
        <member name="M:Spire.Presentation.NotesSlide.ApplyTheme(Spire.Presentation.SlideColorScheme)">
            <summary>
            Applies extra color scheme to a slide.
            </summary>
            <param name="scheme"></param>
        </member>
        <member name="M:Spire.Presentation.NotesSlide.GetThumbnail(System.Single,System.Single)">
            <summary>
            Gets a Thumbnail Bitmap object with custom scaling.
            </summary>
            <param name="scaleX">The value by which to scale this Thumbnail in the x-axis direction.</param>
            <param name="scaleY">The value by which to scale this Thumbnail in the y-axis direction.</param>
            <returns>Bitmap object.</returns>
        </member>
        <member name="M:Spire.Presentation.NotesSlide.GetThumbnail(System.Drawing.Size)">
            <summary>
            Gets a Thumbnail Bitmap object with specified size.
            </summary>
            <param name="imageSize">Size of the image to create.</param>
            <returns>Bitmap object.</returns>
        </member>
        <member name="P:Spire.Presentation.IOleObject.SubstituteImagePictureFillFormat">
            <summary>
            Gets OleObject image fill properties object.
            Readonly <see cref="T:Spire.Presentation.Drawing.PictureFillFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.ObjectName">
            <summary>
            Gets or sets the name of an object.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.ProgId">
            <summary>
            Gets or sets the ProgID of an object.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.Data">
            <summary>
            Gets or sets embedded object as byte array.
            Read/write <see cref="T:System.Byte"/>[].
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.LinkShortFilePath">
            <summary>
            Gets the full path to a linked file. 
            Read-only <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.LinkFilePath">
            <summary>
            Gets the full path to a linked file. 
            Read-only <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.IsIconVisible">
            <summary>
            Indicates whether an object is visible as icon.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.IsObjectLink">
            <summary>
            Indicates whether an object is linked to external file.
            Read-only <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.ShapeLocking">
            <summary>
            Gets lock type of shape.
            Read-only <see cref="T:Spire.Presentation.Drawing.GraphicalNodeLocking"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.IsTextBox">
            <summary>
            Indicates whether the shape is TextHolder.
            Read-only <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.Placeholder">
            <summary>
            Gets the placeholder for a shape.
            Read-only <see cref="P:Spire.Presentation.IOleObject.Placeholder"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.TagsList">
            <summary>
            Gets the shape's tags collection.
            Read-only <see cref="T:Spire.Presentation.Collections.TagCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.Frame">
            <summary>
            Gets or sets the shape frame's properties.
            Read/write <see cref="T:Spire.Presentation.Drawing.GraphicFrame"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.Line">
            <summary>
            Gets the LineFormat object that contains line formatting properties for a shape.
            Read-only <see cref="P:Spire.Presentation.IOleObject.Line"/>.
            Note: can return null for certain types of shapes which don't have line properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.ThreeD">
            <summary>
            Gets the ThreeDFormat object that 3d effect properties for a shape.
            Read-only <see cref="T:Spire.Presentation.Drawing.FormatThreeD"/>.
            Note: can return null for certain types of shapes which don't have 3d properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.EffectDag">
            <summary>
            Gets the EffectFormat object which contains pixel effects applied to a shape.
            Read-only <see cref="P:Spire.Presentation.IOleObject.EffectDag"/>
            Note: can return null for certain types of shapes which don't have effect properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.Fill">
            <summary>
            Gets the FillFormat object that contains fill formatting properties for a shape.
            Read-only <see cref="P:Spire.Presentation.IOleObject.Fill"/>.
            Note: can return null for certain types of shapes which don't have fill properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.Click">
            <summary>
            Gets or sets the hyperlink defined for mouse click.
            Read/write <see cref="T:Spire.Presentation.ClickHyperlink"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.MouseOver">
            <summary>
            Gets or sets the hyperlink defined for mouse over.
            Read/write <see cref="T:Spire.Presentation.ClickHyperlink"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.IsHidden">
            <summary>
            Indicates whether the shape is hidden.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.ZOrderPosition">
            <summary>
            Gets the position of a shape in the z-order.
            Shapes[0] returns the shape at the back of the z-order,
            and Shapes[Shapes.Count - 1] returns the shape at the front of the z-order.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.Rotation">
            <summary>
            Gets or sets the number of degrees the specified shape is rotated around
            the z-axis. A positive value indicates clockwise rotation; a negative value
            indicates counterclockwise rotation.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.Left">
            <summary>
            Gets or sets the x-coordinate of the upper-left corner of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.Top">
            <summary>
            Gets or sets the y-coordinate of the upper-left corner of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.Width">
            <summary>
            Gets or sets the width of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.Height">
            <summary>
            Gets or sets the height of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.AlternativeText">
            <summary>
            Gets or sets the alternative text associated with a shape.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.Name">
            <summary>
            Gets or sets the name of a shape.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.Slide">
            <summary>
            Gets the parent slide of a shape.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IOleObject.Parent">
            <summary>
            Reference to Parent object. Read-only.
            </summary>
        </member>
        <member name="M:Spire.Presentation.IOleObject.RemovePlaceholder">
            <summary>
            Removes placeholder from the shape.
            </summary>
        </member>
        <member name="M:Spire.Presentation.IOleObject.Dispose">
            <summary>
            Dispose object and free resources.
            </summary>
        </member>
        <member name="T:Spire.Presentation.SlideOleObject">
            <summary>
            Represents an OLE object on a slide.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlideOleObject.SubstituteImagePictureFillFormat">
            <summary>
            Gets OleObject image fill properties object.
            Readonly <see cref="T:Spire.Presentation.Drawing.PictureFillFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlideOleObject.ObjectName">
            <summary>
            Gets or sets the name of an object.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlideOleObject.ProgId">
            <summary>
            Gets or sets the ProgID of an object.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlideOleObject.Data">
            <summary>
            Gets or sets embedded object as byte array.
            Read/write <see cref="T:System.Byte"/>[].
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlideOleObject.LinkShortFilePath">
            <summary>
            Gets the full path to a linked file. 
            Read-only <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlideOleObject.LinkFilePath">
            <summary>
            Gets the full path to a linked file. 
            Read-only <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlideOleObject.IsIconVisible">
            <summary>
            Indicates whether an object is visible as icon.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlideOleObject.IsObjectLink">
            <summary>
            Indicates whether an object is linked to external file.
            Read-only <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.TextParagraph">
            <summary>
            Represents a paragraph of a text.
            </summary>
        </member>
        <member name="M:Spire.Presentation.TextParagraph.#ctor">
            <summary>
            Initializes a new instance of the Paragraph class with default properties.
            </summary>
        </member>
        <member name="M:Spire.Presentation.TextParagraph.#ctor(Spire.Presentation.TextParagraph)">
            <summary>
            Copy constructor that initializes a new instance of a Paragraph class.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraph.FirstTextRange">
            <summary>
            First text range of text paragraph.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraph.TextRanges">
            <summary>
            Gets the collection of a text range.
            Readonly <see cref="T:Spire.Presentation.Collections.TextRangeCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraph.ParagraphProperties">
            <summary>
            Gets the formatting of paragraph.
            Readonly <see cref="T:Spire.Presentation.TextParagraphProperties"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraph.TextInternal">
            <summary>
            This property is same as Text property but without evaluation period limitations        
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextParagraph.Text">
            <summary>
            Gets or sets the the plain text of a paragraph.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="T:Spire.Presentation.ParagraphProperties">
            <summary>
            Represents the properties of a paragraph.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.Depth">
            <summary>
            Gets or sets a depth of a paragraph.
            Read/write <see cref="T:System.Int16"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.BulletType">
            <summary>
            Gets or sets the bullet type of a paragraph.
            Read/write <see cref="T:Spire.Presentation.TextBulletType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.BulletChar">
            <summary>
            Gets or sets the bullet char of a paragraph.
            Read/write <see cref="T:System.Char"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.BulletFont">
            <summary>
            Gets or sets the bullet font of a paragraph.
            Read/write <see cref="T:Spire.Presentation.TextFont"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.BulletSize">
            <summary>
            Gets or sets the bullet size of a paragraph.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.ParagraphBulletColor">
            <summary>
            Gets the color format of a bullet of a paragraph.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.BulletNumber">
            <summary>
            Gets or sets the first number which is used for group of numbered bullets.
            Read/write <see cref="T:System.Int16"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.BulletStyle">
            <summary>
            Gets or sets the style of a numbered bullet.
            Read/write <see cref="T:Spire.Presentation.NumberedBulletStyle"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.Alignment">
            <summary>
            Gets or sets the text alignment in a paragraph.
            Read/write <see cref="T:Spire.Presentation.TextAlignmentType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.LineSpacing">
            <summary>
            Gets or sets the amount of space between base lines in a paragraph.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.SpaceBefore">
            <summary>
            Returns or sets the amount of space before the first line in each paragraph of the specified text, in points or lines
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.SpaceAfter">
            <summary>
            Returns or sets the amount of space after the last line in each paragraph of the specified text, in points or lines. 
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.EastAsianLineBreak">
            <summary>
            Indicates whether the East Asian line break is used in a paragraph.
            Read/write <see cref="T:Spire.Presentation.TriState"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.RightToLeft">
            <summary>
            Indicates whether the Right to Left writing is used in a paragraph.
            Read/write <see cref="T:Spire.Presentation.TriState"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.LatinLineBreak">
            <summary>
            Indicates whether the Latin line break is used in a paragraph.
            Read/write <see cref="T:Spire.Presentation.TriState"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.HangingPunctuation">
            <summary>
            Indicates whether the hanging punctuation is used in a paragraph.
            Read/write <see cref="T:Spire.Presentation.TriState"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.LeftMargin">
            <summary>
            Gets or sets the left margin in a paragraph.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.RightMargin">
            <summary>
            Gets or sets the right margin in a paragraph.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.Indent">
            <summary>
            Gets or sets text indentation in a paragraph.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.DefaultTabSize">
            <summary>
            Gets or sets default tabulation size.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.Tabs">
            <summary>
            Gets tabulations of a paragraph.
            Read-only <see cref="T:Spire.Presentation.Collections.TabStopCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.FontAlignment">
            <summary>
            Gets or sets a font alignment in a paragraph.
            Read/write <see cref="T:Spire.Presentation.FontAlignmentType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.BulletPicture">
            <summary>
            Gets a Picture used as a bullet in a paragraph.
            Read-only <see cref="T:Spire.Presentation.PictureShape"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.DefaultCharacterProperties">
            <summary>
            Gets default character properties of a paragraph.
            Read-only <see cref="T:Spire.Presentation.TextCharacterProperties"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.HasBullet">
            <summary>
            Indicates whether a paragraph has a bullet.
            Read-only <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.BulletColor">
            <summary>
            Gets or sets the color of a bullet.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.Spire#Presentation#IActiveSlide#Slide">
            <summary>
            Gets the parent slide of a paragraph.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ParagraphProperties.Spire#Presentation#IActivePresentation#Presentation">
            <summary>
            Gets the parent presentation of a paragraph.
            Read-only <see cref="T:Spire.Presentation.PresentationPptx"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.PictureShape">
            <summary>
            Represents a picture in a presentation.
            </summary>
        </member>
        <member name="P:Spire.Presentation.PictureShape.EmbedImage">
            <summary>
            Gets or sets the embedded image.
            Read/write <see cref="P:Spire.Presentation.PictureShape.EmbedImage"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.PictureShape.Url">
            <summary>
            Gets or sets linked image's URL.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.PictureShape.Transparency">
            <summary>
            Gets or sets the Transparency of a picture fill.
            The value ranges from 0 to 100.
            </summary>
        </member>
        <member name="P:Spire.Presentation.PictureShape.Slide">
            <summary>
            Gets the parent slide of a picture.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IEmbedImage.IsTextBox">
            <summary>
            Indicates whether the shape is TextHolder.
            Read-only <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IEmbedImage.Placeholder">
            <summary>
            Gets the placeholder for a shape.
            Read-only <see cref="P:Spire.Presentation.IEmbedImage.Placeholder"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IEmbedImage.TagsList">
            <summary>
            Gets the shape's tags collection.
            Read-only <see cref="T:Spire.Presentation.Collections.TagCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IEmbedImage.Frame">
            <summary>
            Gets or sets the shape frame's properties.
            Read/write <see cref="T:Spire.Presentation.Drawing.GraphicFrame"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IEmbedImage.Line">
            <summary>
            Gets the LineFormat object that contains line formatting properties for a shape.
            Read-only <see cref="P:Spire.Presentation.IEmbedImage.Line"/>.
            Note: can return null for certain types of shapes which don't have line properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IEmbedImage.ThreeD">
            <summary>
            Gets the ThreeDFormat object that 3d effect properties for a shape.
            Read-only <see cref="T:Spire.Presentation.Drawing.FormatThreeD"/>.
            Note: can return null for certain types of shapes which don't have 3d properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IEmbedImage.EffectDag">
            <summary>
            Gets the EffectFormat object which contains pixel effects applied to a shape.
            Read-only <see cref="P:Spire.Presentation.IEmbedImage.EffectDag"/>
            Note: can return null for certain types of shapes which don't have effect properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IEmbedImage.Fill">
            <summary>
            Gets the FillFormat object that contains fill formatting properties for a shape.
            Read-only <see cref="P:Spire.Presentation.IEmbedImage.Fill"/>.
            Note: can return null for certain types of shapes which don't have fill properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IEmbedImage.Click">
            <summary>
            Gets or sets the hyperlink defined for mouse click.
            Read/write <see cref="T:Spire.Presentation.ClickHyperlink"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IEmbedImage.MouseOver">
            <summary>
            Gets or sets the hyperlink defined for mouse over.
            Read/write <see cref="T:Spire.Presentation.ClickHyperlink"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IEmbedImage.IsHidden">
            <summary>
            Indicates whether the shape is hidden.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IEmbedImage.Parent">
            <summary>
            Gets the parent slide of a shape.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IEmbedImage.ZOrderPosition">
            <summary>
            Gets the position of a shape in the z-order.
            Shapes[0] returns the shape at the back of the z-order,
            and Shapes[Shapes.Count - 1] returns the shape at the front of the z-order.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IEmbedImage.Rotation">
            <summary>
            Gets or sets the number of degrees the specified shape is rotated around
            the z-axis. A positive value indicates clockwise rotation; a negative value
            indicates counterclockwise rotation.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IEmbedImage.Left">
            <summary>
            Gets or sets the x-coordinate of the upper-left corner of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IEmbedImage.Top">
            <summary>
            Gets or sets the y-coordinate of the upper-left corner of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IEmbedImage.Width">
            <summary>
            Gets or sets the width of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IEmbedImage.Height">
            <summary>
            Gets or sets the height of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IEmbedImage.AlternativeText">
            <summary>
            Gets or sets the alternative text associated with a shape.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IEmbedImage.Name">
            <summary>
            Gets or sets the name of a shape.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IEmbedImage.Slide">
            <summary>
            Gets the parent slide of a shape.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.IEmbedImage.RemovePlaceholder">
            <summary>
            Removes placeholder from the shape.
            </summary>
        </member>
        <member name="M:Spire.Presentation.IEmbedImage.Dispose">
            <summary>
            Dispose object and free resources.
            </summary>
        </member>
        <member name="M:Spire.Presentation.SlidePicture.PictureAdjust">
            <summary>
            Adjust the picture of slide
            </summary>
        </member>
        <member name="T:Spire.Presentation.SlidePictureLocking">
            <summary>
            Indicates which operations are disabled on the parent PictureFrame.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlidePictureLocking.GroupingProtection">
            <summary>
            Indicates whether an adding this shape to a group Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlidePictureLocking.SelectionProtection">
            <summary>
            Indicates whether a selecting this shape Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlidePictureLocking.RotationProtection">
            <summary>
            Indicates whether a changing rotation angle of this shape Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlidePictureLocking.AspectRatioProtection">
            <summary>
            Indicates whether a shape have to preserve aspect ratio on resizing.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlidePictureLocking.PositionProtection">
            <summary>
            Indicates whether a moving this shape Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlidePictureLocking.ResizeProtection">
            <summary>
            Indicates whether a resizing this shape Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlidePictureLocking.EditPointProtection">
            <summary>
            Indicates whether a direct changing of contour of this shape Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlidePictureLocking.AdjustHandlesProtection">
            <summary>
            Indicates whether a changing adjust values Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlidePictureLocking.ArrowheadChangesProtection">
            <summary>
            Indicates whether a changing arrowheads Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlidePictureLocking.ShapeTypeProtection">
            <summary>
            Indicates whether a changing of a shape type Disallow.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlidePictureLocking.CropProtection">
            <summary>
            Indicates whether an image cropping is forbidden.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Placeholder">
            <summary>
            Represents a placeholder on a slide.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Placeholder.Orientation">
            <summary>
            Gets the orientation of a placeholder.
            Read-only <see cref="P:Spire.Presentation.Placeholder.Orientation"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Placeholder.Size">
            <summary>
            Gets the size of a placeholder.
            Read-only <see cref="T:Spire.Presentation.PlaceholderSize"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Placeholder.Type">
            <summary>
            Gets the type of a placeholder.
            Read-only <see cref="T:Spire.Presentation.Converter.Entity.PlaceholderType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Placeholder.Index">
            <summary>
            Gets the index of a placeholder.
            Read-only <see cref="T:System.UInt32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextRange.Format">
            <summary>
            Gets or sets text range's formatting.
            Readonly <see cref="!:DefaultTextRunProperties"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextRange.Paragraph">
            <summary>
            Gets paragraph of text range.
            </summary>
        </member>
        <member name="M:Spire.Presentation.PresentationPptx.SetDocumentContentType(Spire.Presentation.PresentationType)">
             If extension is ppsx change type (PartName) to SlideShow
            
        </member>
        <member name="T:Spire.Presentation.SaveToPdfOption">
            <summary>
            save to pdf option
            </summary>
        </member>
        <member name="P:Spire.Presentation.IDocumentProperty.Application">
            <summary>
            Gets or sets the name of the application.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IDocumentProperty.Company">
            <summary>
            Gets or sets the company property.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IDocumentProperty.Manager">
            <summary>
            Gets or sets the manager property.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IDocumentProperty.Format">
            <summary>
            Gets or sets the intended format of a presentation.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IDocumentProperty.SharedDoc">
            <summary>
            Indicates whether the presentation is shared between multiple people.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IDocumentProperty.Template">
            <summary>
            Gets or sets the template of a application.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IDocumentProperty.TotalEditingTime">
            <summary>
            Total editing time of a presentation.
            Read/write <see cref="T:System.TimeSpan"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IDocumentProperty.Title">
            <summary>
            Gets or sets the title of a presentation.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IDocumentProperty.Subject">
            <summary>
            Gets or sets the subject of a presentation.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IDocumentProperty.Author">
            <summary>
            Gets or sets the author of a presentation.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IDocumentProperty.Keywords">
            <summary>
            Gets or sets the keywords of a presentation.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IDocumentProperty.Comments">
            <summary>
            Gets or sets the comments of a presentation.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IDocumentProperty.Category">
            <summary>
            Gets or sets the category of a presentation.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IDocumentProperty.CreatedTime">
            <summary>
            Gets or sets the date when a presentation was created.
            Read/write <see cref="T:System.DateTime"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IDocumentProperty.LastSavedTime">
            <summary>
            Gets or sets the date when a presentation was modified last time.
            Read/write <see cref="T:System.DateTime"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IDocumentProperty.LastPrinted">
            <summary>
            Gets or sets the date when a presentation was printed last time.
            Read/write <see cref="T:System.DateTime"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IDocumentProperty.LastSavedBy">
            <summary>
            Gets or sets the name of a last person who modified a presentation.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IDocumentProperty.RevisionNumber">
            <summary>
            Gets or sets the presentation revision number.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IDocumentProperty.ContentStatus">
            <summary>
            Gets or sets the content status of a presentation.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IDocumentProperty.ContentType">
            <summary>
            Gets or sets the content type of a presentation.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IDocumentProperty.Count">
            <summary>
            Gets the number of custom properties actually contained in a collection.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IDocumentProperty.HyperlinkBase">
            <summary>
            Gets or sets the HyperlinkBase document property.
            </summary>
        </member>
        <member name="M:Spire.Presentation.IDocumentProperty.GetPropertyName(System.Int32)">
            <summary>
            Return a custom property name at the specified index.
            </summary>
            <param name="index">The zero-based index of a custom property to get.</param>
            <returns>Custom property name at the specified index.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Index is less than zero. Index is equal to or greater than Count.</exception>
        </member>
        <member name="M:Spire.Presentation.IDocumentProperty.Remove(System.String)">
            <summary>
            Remove a custom property associated with a specified name.
            </summary>
            <param name="name">Name of a custom property to remove.</param>
            <returns>Return true if a property was removed, false overwise.</returns>
        </member>
        <member name="M:Spire.Presentation.IDocumentProperty.Contains(System.String)">
            <summary>
            Check presents of a custom property with a specified name.
            </summary>
            <param name="name">Name of a custom property to check.</param>
            <returns>Return true if property exists, false overwise.</returns>
        </member>
        <member name="P:Spire.Presentation.IDocumentProperty.Item(System.String)">
            <summary>
            Gets or sets the custom property associated with a specified name.
            Read/write <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.PresetTextShape.ShapeType">
            <summary>
            Returns or sets TextShapeType.
            Read/write <see cref="T:Spire.Presentation.TextShapeType"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.TableRow">
            <summary>
            Represents a row in a table.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TableRow.Height">
            <summary>
            Gets the height of a row.
            Read-only <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.ShapeElement">
            <summary>
            Represents a part of shape with same outline and fill properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeElement.ParentShape">
            <summary>
            Gets a Shape for which element was created.
            Read-only <see cref="T:Spire.Presentation.Shape"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeElement.GraphicsPath">
            <summary>
            Gets an element's path.
            Read-only <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeElement.FillSource">
            <summary>
            Gets information about how to fill an element.
            Readonly <see cref="T:Spire.Presentation.ShapeElementFillSource"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeElement.StrokeSource">
            <summary>
            Gets information about how to stroke an element.
            Read-only <see cref="T:Spire.Presentation.ShapeElementStrokeSource"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IShape.IsTextBox">
            <summary>
            Indicates whether the shape is TextHolder.
            Read-only <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IShape.Placeholder">
            <summary>
            Gets the placeholder for a shape.
            Read-only <see cref="P:Spire.Presentation.IShape.Placeholder"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IShape.TagsList">
            <summary>
            Gets the shape's tags collection.
            Read-only <see cref="T:Spire.Presentation.Collections.TagCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IShape.Frame">
            <summary>
            Gets or sets the shape frame's properties.
            Read/write <see cref="T:Spire.Presentation.Drawing.GraphicFrame"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IShape.Line">
            <summary>
            Gets the LineFormat object that contains line formatting properties for a shape.
            Read-only <see cref="P:Spire.Presentation.IShape.Line"/>.
            Note: can return null for certain types of shapes which don't have line properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IShape.ThreeD">
            <summary>
            Gets the ThreeDFormat object that 3d effect properties for a shape.
            Read-only <see cref="T:Spire.Presentation.Drawing.FormatThreeD"/>.
            Note: can return null for certain types of shapes which don't have 3d properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IShape.EffectDag">
            <summary>
            Gets the EffectFormat object which contains pixel effects applied to a shape.
            Read-only <see cref="P:Spire.Presentation.IShape.EffectDag"/>
            Note: can return null for certain types of shapes which don't have effect properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IShape.Fill">
            <summary>
            Gets the FillFormat object that contains fill formatting properties for a shape.
            Read-only <see cref="P:Spire.Presentation.IShape.Fill"/>.
            Note: can return null for certain types of shapes which don't have fill properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IShape.Click">
            <summary>
            Gets or sets the hyperlink defined for mouse click.
            Read/write <see cref="T:Spire.Presentation.ClickHyperlink"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IShape.MouseOver">
            <summary>
            Gets or sets the hyperlink defined for mouse over.
            Read/write <see cref="T:Spire.Presentation.ClickHyperlink"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IShape.IsHidden">
            <summary>
            Indicates whether the shape is hidden.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IShape.Parent">
            <summary>
            Gets the parent slide of a shape.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IShape.ZOrderPosition">
            <summary>
            Gets the position of a shape in the z-order.
            Shapes[0] returns the shape at the back of the z-order,
            and Shapes[Shapes.Count - 1] returns the shape at the front of the z-order.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IShape.Rotation">
            <summary>
            Gets or sets the number of degrees the specified shape is rotated around
            the z-axis. A positive value indicates clockwise rotation; a negative value
            indicates counterclockwise rotation.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IShape.Left">
            <summary>
            Gets or sets the x-coordinate of the upper-left corner of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IShape.Top">
            <summary>
            Gets or sets the y-coordinate of the upper-left corner of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IShape.Width">
            <summary>
            Gets or sets the width of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IShape.Height">
            <summary>
            Gets or sets the height of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IShape.AlternativeText">
            <summary>
            Gets or sets the alternative text associated with a shape.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IShape.AlternativeTitle">
            <summary>
            Gets or sets the alternative title associated with a shape.
            Read/write <see cref = "T:System.String"/>
            </summary>
        </member>
        <member name="P:Spire.Presentation.IShape.Name">
            <summary>
            Gets or sets the name of a shape.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.IShape.Slide">
            <summary>
            Gets the parent slide of a shape.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.IShape.RemovePlaceholder">
            <summary>
            Removes placeholder from the shape.
            </summary>
        </member>
        <member name="M:Spire.Presentation.IShape.Dispose">
            <summary>
            Dispose object and free resources.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Shape">
            <summary>
             Represents a shape on a slide.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Shape.m_animationSettings">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Presentation.Shape.IsTextBox">
            <summary>
            Indicates whether the shape is TextHolder.
            Read-only <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Shape.Placeholder">
            <summary>
            Gets the placeholder for a shape.
            Read-only <see cref="P:Spire.Presentation.Shape.Placeholder"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Shape.RemovePlaceholder">
            <summary>
            Removes placeholder from the shape.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Shape.TagsList">
            <summary>
            Gets the shape's tags collection.
            Read-only <see cref="T:Spire.Presentation.Collections.TagCollection"/>.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Shape.m_drawIndicatedShape">
            <summary>
             Gets and Sets whether draw slide indicated shape,"true" indicates draw the indicated shape.
             </summary>
        </member>
        <member name="P:Spire.Presentation.Shape.Frame">
            <summary>
            Gets or sets the shape frame's properties.
            Read/write <see cref="T:Spire.Presentation.Drawing.GraphicFrame"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Shape.Line">
            <summary>
            Gets the LineFormat object that contains line formatting properties for a shape.
            Read-only <see cref="P:Spire.Presentation.Shape.Line"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Shape.ThreeD">
            <summary>
            Gets the FormatThreeD object that 3d effect properties for a shape.
            Read-only <see cref="T:Spire.Presentation.Drawing.FormatThreeD"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Shape.EffectDag">
            <summary>
            Gets the EffectDag object which contains pixel effects applied to a shape.
            Read-only <see cref="P:Spire.Presentation.Shape.EffectDag"/>
            </summary>
        </member>
        <member name="P:Spire.Presentation.Shape.Fill">
            <summary>
            Gets the FillFormat object that contains fill formatting properties for a shape.
            Read-only <see cref="P:Spire.Presentation.Shape.Fill"/>.
            Note: can return null for certain types of shapes which don't have fill properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Shape.Click">
            <summary>
            Gets or sets the hyperlink defined for mouse click.
            Read/write <see cref="T:Spire.Presentation.ClickHyperlink"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Shape.MouseOver">
            <summary>
            Gets or sets the hyperlink defined for mouse over.
            Read/write <see cref="T:Spire.Presentation.ClickHyperlink"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Shape.IsHidden">
            <summary>
            Indicates whether the shape is hidden.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="F:Spire.Presentation.Shape.emptyShape">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Shape.emptyConnectionPoints">
            <summary />
        </member>
        <member name="F:Spire.Presentation.Shape.defaultConnectionPoints">
            <summary>
            
            </summary>
        </member>
        <member name="P:Spire.Presentation.Shape.ConnectionPointsInternal">
            <summary>
            Gets normalized connection points array or null, if Spire.Presentation doesn't know if 
            </summary>
        </member>
        <member name="P:Spire.Presentation.Shape.Parent">
            <summary>
            Gets the parent slide of a shape.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Shape.ZOrderPosition">
            <summary>
            Gets the position of a shape in the z-order.
            Shapes[0] returns the shape at the back of the z-order,
            and Shapes[Shapes.Count - 1] returns the shape at the front of the z-order.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Shape.ZOrder(Spire.Presentation.Converter.Entity.ZOrderCmd)">
            <summary>
            Moves the shape in front of or behind other shapes in the collection
            (that is, changes the shape's position in the z-order).
            </summary>
            <param name="cmd">Specifies where to move the specified shape relative
            to the other shapes. See <see cref="T:Spire.Presentation.Converter.Entity.ZOrderCmd"/>.</param>
        </member>
        <member name="P:Spire.Presentation.Shape.Rotation">
            <summary>
            Gets or sets the number of degrees the specified shape is rotated around
            the z-axis. A positive value indicates clockwise rotation; a negative value
            indicates counterclockwise rotation.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Shape.Left">
            <summary>
            Gets or sets the x-coordinate of the upper-left corner of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Shape.Top">
            <summary>
            Gets or sets the y-coordinate of the upper-left corner of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Shape.Width">
            <summary>
            Gets or sets the width of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Shape.Height">
            <summary>
            Gets or sets the height of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Shape.AlternativeText">
            <summary>
            Gets or sets the alternative text associated with a shape.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Shape.AlternativeTitle">
            <summary>
            Gets or sets the alternative title associated with a shape.
            Read/write <see cref = "T:System.String"/>
            </summary>
        </member>
        <member name="P:Spire.Presentation.Shape.Name">
            <summary>
            Gets or sets the name of a shape.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Shape.ProcessFitShapeToText">
            <summary>
            Calculates required size for shape's textframe and 
            </summary>
        </member>
        <member name="M:Spire.Presentation.Shape.ShouldDraw(Spire.Presentation.Converter.Entity.DrawingControlDecision,Spire.Presentation.Converter.Entity.IDrawingControl@,System.Boolean@)">
            <summary>
            
            </summary>
            <param name="drc"></param>
            <param name="drawingControl"></param>
            <param name="recurseToChildren"></param>
            <returns></returns>
        </member>
        <member name="P:Spire.Presentation.Shape.Slide">
            <summary>
            Gets the parent slide of a shape.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.ShapeStyle">
            <summary>
            Represent shape's style reference.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeStyle.LineColor">
            <summary>
            Gets a shape's outline color.
            Readonly <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeStyle.LineStyleIndex">
            <summary>
            Gets or sets line's column index in a style matrix.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeStyle.FillColor">
            <summary>
            Gets a shape's fill color.
            Readonly <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeStyle.FillStyleIndex">
            <summary>
            Gets or sets shape's fill column index in style matrices.
            0 means no fill,
            positive value - index in theme's fill styles,
            negative value - index in theme's background styles.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeStyle.EffectColor">
            <summary>
            Gets a shape's effect color.
            Readonly <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeStyle.EffectStyleIndex">
            <summary>
            Gets or sets shape's effect column index in a style matrix.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeStyle.FontColor">
            <summary>
            Gets a shape's font color.
            Readonly <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeStyle.FontCollectionIndex">
            <summary>
            Gets or sets shape's font index in a font collection.
            Read/write <see cref="P:Spire.Presentation.ShapeStyle.FontCollectionIndex"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeStyle.Slide">
            <summary>
            Gets the parent slide of a shape style.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ISlide.Theme">
            <summary>
            Gets the theme object.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ISlide.SlideNumber">
            <summary>
            Gets a number of slide.
            Index of slide in <see cref="P:Spire.Presentation.PresentationPptx.Slides"/> collection is always equal to SlideNumber - 1.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ISlide.Hidden">
            <summary>
            Indicates whether the specified slide is hidden during a slide show.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ISlide.NotesSlide">
            <summary>
            Gets the notes slide for the current slide.
            Read-only <see cref="P:Spire.Presentation.ISlide.NotesSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ISlide.Comments">
            <summary>
            Gets all author comments.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ISlide.Shapes">
            <summary>
            Gets the shapes of a slide.
            Read-only <see cref="T:Spire.Presentation.ShapeCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ISlide.Name">
            <summary>
            Gets or sets the name of a slide.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ISlide.SlideID">
            <summary>
            Gets the ID of a slide.
            Read-only <see cref="T:System.UInt32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ISlide.MasterSlideID">
            <summary>
            Gets the ID of a masterslide.
            Read-only <see cref="T:System.UInt32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ISlide.TagsList">
            <summary>
            Gets the slide's tags collection.
            Read-only <see cref="T:Spire.Presentation.Converter.Entity.TagCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ISlide.Timeline">
            <summary>
            Gets animation timeline object.
            Read-only <see cref="T:Spire.Presentation.Drawing.TimeLine.TimeLine"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ISlide.SlideShowTransition">
            <summary>
            Gets the Transition object which contains information about
            how the specified slide advances during a slide show.
            Read-only <see cref="P:Spire.Presentation.ISlide.SlideShowTransition"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ISlide.SlideBackground">
            <summary>
            Gets slide's background.
            Read only <see cref="P:Spire.Presentation.ISlide.SlideBackground"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ISlide.ShowMasterShape">
            <summary>
            Hide background graphics
            </summary>
        </member>
        <member name="M:Spire.Presentation.ISlide.SaveToSVG">
            <summary>
            Save the slide to SVG format
            </summary>
            <returns>A byte array of SVG file-stream.</returns>
        </member>
        <member name="M:Spire.Presentation.ISlide.AddNotesSlide">
            <summary>
            Adds a new notes slide.
            </summary>
            <returns><see cref="P:Spire.Presentation.Slide.NotesSlide"/> for this slide.</returns>
        </member>
        <member name="M:Spire.Presentation.ISlide.AddComment(Spire.Presentation.ICommentAuthor,System.String,System.Drawing.PointF,System.DateTime)">
            <summary>
            Adds a new comment.
            </summary>
            <param name="ICommentAuthor">comment author</param>
            <param name="text">comment text</param>
            <param name="position">position</param>
            <param name="dateTime"></param>
        </member>
        <member name="M:Spire.Presentation.ISlide.AddComment(Spire.Presentation.Comment)">
            <summary>
            Adds a new comment.
            </summary>
            <param name="comment"></param>
        </member>
        <member name="M:Spire.Presentation.ISlide.DeleteComment(Spire.Presentation.Comment)">
            <summary>
            Delete a comment.
            </summary>
            <param name="comment"></param>
        </member>
        <member name="M:Spire.Presentation.ISlide.DeleteComment(Spire.Presentation.ICommentAuthor,System.String)">
            <summary>
            Delete comments of specific text or specific author.
            </summary>
            <param name="ICommentAuthor">author of comments to delete or null to delete all comments.</param>
            <param name="string">text of comments to delete or "" to delete all comments.</param>
        </member>
        <member name="M:Spire.Presentation.ISlide.DeleteComment(Spire.Presentation.ICommentAuthor)">
            <summary>
            Delete comments of specific author.
            </summary>
            <param name="ICommentAuthor">author of comments to delete</param>
            <param name="string">text of comments to delete or "" to delete all comments.</param>
        </member>
        <member name="M:Spire.Presentation.ISlide.DeleteComment(System.String)">
            <summary>
            Delete comments of specific text.
            </summary>
            <param name="string">text of comments to delete or "" to delete all comments.</param>
        </member>
        <member name="M:Spire.Presentation.ISlide.GetComments(Spire.Presentation.ICommentAuthor,System.String)">
            <summary>
            Returns all slide comments added by specific author or specific text.
            </summary>
            <param name="ICommentAuthor">author of comments to find or null to find all comments.</param>
            <param name="string">text of comments to find or "" to find all comments.</param>
            <returns>Array of <see cref="T:Spire.Presentation.Comment"/>.</returns>
        </member>
        <member name="M:Spire.Presentation.ISlide.GetComments(Spire.Presentation.ICommentAuthor)">
            <summary>
            Returns all slide comments added by specific author.
            </summary>
            <param name="ICommentAuthor">author of comments to find.</param>
            <returns>Array of <see cref="T:Spire.Presentation.Comment"/>.</returns>
        </member>
        <member name="M:Spire.Presentation.ISlide.GetComments(System.String)">
            <summary>
            Returns all slide comments added by specific text.
            </summary>
            <param name="string">text of comments to find or "" to find all comments.</param>
            <returns>Array of <see cref="T:Spire.Presentation.Comment"/>.</returns>
        </member>
        <member name="M:Spire.Presentation.ISlide.ApplyTheme(Spire.Presentation.SlideColorScheme)">
            <summary>
            Applies extra color scheme to a slide.
            </summary>
            <param name="scheme"></param>
        </member>
        <member name="M:Spire.Presentation.ISlide.Dispose">
            <summary>
            Dispose object and free resources.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ISlide.Layout">
            <summary>
            get or set the layout.
            </summary>
        </member>
        <member name="M:Spire.Presentation.ISlide.GroupShapes(System.Collections.ArrayList)">
            <summary>
            Combine multiple shape together.
            </summary>
            <param name="shapeList"></param>
        </member>
        <member name="M:Spire.Presentation.Slide.GroupShapes(System.Collections.ArrayList)">
            <summary>
            Combine multiple shape together.
            </summary>
            <param name="shapeList"></param>
        </member>
        <member name="T:Spire.Presentation.SlideList">
            <summary>
            Represents a collection of a slides.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlideList.Count">
            <summary>
            Gets the number of elements actually contained in the collection.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlideList.Item(System.Int32)">
            <summary>
            Gets the element at the specified index.
            Read-only <see cref="T:Spire.Presentation.Slide"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.SlideList.Append">
            <summary>
            Append new slide.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.SlideList.Append(Spire.Presentation.ISlide)">
            <summary>
            Adds a slide to the collection.
            </summary>
        </member>
        <member name="M:Spire.Presentation.SlideList.Insert(System.Int32,Spire.Presentation.ISlide)">
            <summary>
            Inserts a slide to the collection.
            </summary>
        </member>
        <member name="M:Spire.Presentation.SlideList.Insert(System.Int32)">
            <summary>
            Insert a empty slide to collection.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.SlideList.Insert(System.Int32,Spire.Presentation.SlideLayoutType)">
            <summary>
            Insert a slide to collection.
            </summary>
            <param name="index"></param>
            <param name="templateType"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.SlideList.Append(Spire.Presentation.ISlide,Spire.Presentation.IMasterSlide)">
            <summary>
            Adds a slide to the collection.
            </summary>
        </member>
        <member name="M:Spire.Presentation.SlideList.Insert(System.Int32,Spire.Presentation.ISlide,Spire.Presentation.IMasterSlide)">
            <summary>
            Inserts a slide to the collection.
            </summary>
        </member>
        <member name="M:Spire.Presentation.SlideList.Remove(Spire.Presentation.ISlide)">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="value">The slide to remove from the collection.</param>
        </member>
        <member name="M:Spire.Presentation.SlideList.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:Spire.Presentation.SlideList.GetEnumerator">
            <summary>
            Gets an enumerator for the entire collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the entire collection.</returns>
        </member>
        <member name="M:Spire.Presentation.SlideList.ToArray">
            <summary>
            Creates and returns an array with all slides in it.
            </summary>
            <returns>Array of <see cref="T:Spire.Presentation.Slide"/></returns>
        </member>
        <!-- 对于成员“M:Spire.Presentation.SlideList.IndexOf(Spire.Presentation.ISlide)”忽略有格式错误的 XML 注释 -->
        <member name="T:Spire.Presentation.SlideSize">
            <summary>
            Represents a size of slide.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlideSize.Size">
            <summary>
            Gets or sets the size in points.
            Read/Write <see cref="T:System.Drawing.SizeF"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlideSize.SizeOfPx">
            <summary>
            Gets or sets the size in pixel.
            Read/Write <see cref="T:System.Drawing.SizeF"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlideSize.Type">
            <summary>
            Gets or sets the type of slide size.
            Read/Write <see cref="T:Spire.Presentation.SlideSizeType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.SlideSize.Orientation">
            <summary>
            Gets or sets the slide orientation.
            Read/Write <see cref="T:Spire.Presentation.SlideOrienation"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.TabStop">
            <summary>
            Represents a tabulation for a text.
            </summary>
        </member>
        <member name="M:Spire.Presentation.TabStop.#ctor(System.Double,Spire.Presentation.TabAlignmentType)">
            <summary>
            Initializes a new instance of the Tab class.
            </summary>
            <param name="position">Position of the new tab.</param>
            <param name="align">Align style of the new tab.</param>
        </member>
        <member name="P:Spire.Presentation.TabStop.Position">
            <summary>
            Gets or sets position of a tab.
            Assigning this property can change tab's index in collection and invalidate Enumerator.
            Read/write <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TabStop.Alignment">
            <summary>
            Gets or sets align style of a tab.
            Read/write <see cref="T:Spire.Presentation.Converter.Entity.TabAlignment"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.TabStop.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit integer that indicates the relative order of the comparands.
            The return value has these meanings:
            <UL>
            <LI> &lt; 0 - This instance is less than obj.</LI>
            <LI> = 0 - This instance is equal to obj.</LI>
            <LI> &gt; 0 - This instance is greater than obj.</LI>
            </UL>
            </returns>
        </member>
        <member name="M:Spire.Presentation.ITable.MergeCells(Spire.Presentation.Cell,Spire.Presentation.Cell,System.Boolean)">
            <summary>
            Merges neighbour cells.
            </summary>
            <param name="cell1">Cell to merge.</param>
            <param name="cell2">Cell to merge.</param>
            <param name="allowSplitting">True to allow cells splitting.</param>
        </member>
        <member name="M:Spire.Presentation.ITable.SetTableBorder(Spire.Presentation.TableBorderType,System.Double,System.Drawing.Color)">
            <summary>
            Setting up the table border
            </summary>
            <param name="borderType">border type</param>
            <param name="borderWidth">border width.</param>
            <param name="borderColor">border color.</param>
        </member>
        <member name="P:Spire.Presentation.ITable.StylePreset">
            <summary>
            Get's or sets builtin table style.
            Read/write <see cref="T:Spire.Presentation.TableStylePreset"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.TableRows">
            <summary>
            Gets the collectoin of rows.
            Read-only <see cref="T:Spire.Presentation.Collections.TableRowCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.ColumnsList">
            <summary>
            Gets the collectoin of columns.
            Read-only <see cref="T:Spire.Presentation.Collections.ColumnCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.RightToLeft">
            <summary>
            Indicates whether the table has right to left reading order.
            Read-write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.FirstRow">
            <summary>
            Indicates whether the first row of a table has to be drawn with a special formatting.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.FirstCol">
            <summary>
            Indicates whether the first column of a table has to be drawn with a special formatting.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.LastRow">
            <summary>
            Indicates whether the last row of a table has to be drawn with a special formatting.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.LastCol">
            <summary>
            Indicates whether the last column of a table has to be drawn with a special formatting.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.HorizontalBanding">
            <summary>
            Indicates whether the even rows has to be drawn with a different formatting.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.VerticalBanding">
            <summary>
            Indicates whether the even columns has to be drawn with a different formatting.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.ShapeLocking">
            <summary>
            Gets lock type of shape.
            Read-only <see cref="T:Spire.Presentation.Drawing.GraphicalNodeLocking"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.IsTextBox">
            <summary>
            Indicates whether the shape is TextHolder.
            Read-only <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.Placeholder">
            <summary>
            Gets the placeholder for a shape.
            Read-only <see cref="P:Spire.Presentation.ITable.Placeholder"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.TagsList">
            <summary>
            Gets the shape's tags collection.
            Read-only <see cref="T:Spire.Presentation.Collections.TagCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.Frame">
            <summary>
            Gets or sets the shape frame's properties.
            Read/write <see cref="T:Spire.Presentation.Drawing.GraphicFrame"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.Line">
            <summary>
            Gets the LineFormat object that contains line formatting properties for a shape.
            Read-only <see cref="P:Spire.Presentation.ITable.Line"/>.
            Note: can return null for certain types of shapes which don't have line properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.ThreeD">
            <summary>
            Gets the ThreeDFormat object that 3d effect properties for a shape.
            Read-only <see cref="T:Spire.Presentation.Drawing.FormatThreeD"/>.
            Note: can return null for certain types of shapes which don't have 3d properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.EffectDag">
            <summary>
            Gets the EffectFormat object which contains pixel effects applied to a shape.
            Read-only <see cref="P:Spire.Presentation.ITable.EffectDag"/>
            Note: can return null for certain types of shapes which don't have effect properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.Fill">
            <summary>
            Gets the FillFormat object that contains fill formatting properties for a shape.
            Read-only <see cref="P:Spire.Presentation.ITable.Fill"/>.
            Note: can return null for certain types of shapes which don't have fill properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.Click">
            <summary>
            Gets or sets the hyperlink defined for mouse click.
            Read/write <see cref="T:Spire.Presentation.ClickHyperlink"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.MouseOver">
            <summary>
            Gets or sets the hyperlink defined for mouse over.
            Read/write <see cref="T:Spire.Presentation.ClickHyperlink"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.IsHidden">
            <summary>
            Indicates whether the shape is hidden.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.Parent">
            <summary>
            Gets the parent slide of a shape.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.ZOrderPosition">
            <summary>
            Gets the position of a shape in the z-order.
            Shapes[0] returns the shape at the back of the z-order,
            and Shapes[Shapes.Count - 1] returns the shape at the front of the z-order.
            Read-only <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.Rotation">
            <summary>
            Gets or sets the number of degrees the specified shape is rotated around
            the z-axis. A positive value indicates clockwise rotation; a negative value
            indicates counterclockwise rotation.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.Left">
            <summary>
            Gets or sets the x-coordinate of the upper-left corner of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.Top">
            <summary>
            Gets or sets the y-coordinate of the upper-left corner of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.Width">
            <summary>
            Gets or sets the width of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.Height">
            <summary>
            Gets or sets the height of the shape.
            Read/write <see cref="T:System.Int32"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.AlternativeText">
            <summary>
            Gets or sets the alternative text associated with a shape.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.Name">
            <summary>
            Gets or sets the name of a shape.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.Slide">
            <summary>
            Gets the parent slide of a shape.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ITable.Item(System.Int32,System.Int32)">
            <summary>
            Gets the cell at the specified column and row indexes.
            Read-only <see cref="T:Spire.Presentation.Cell"/>.
            </summary>
        </member>
        <member name="M:Spire.Presentation.ITable.RemovePlaceholder">
            <summary>
            Removes placeholder from the shape.
            </summary>
        </member>
        <member name="M:Spire.Presentation.ITable.Dispose">
            <summary>
            Dispose object and free resources.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Table">
            <summary>
            Represents a table on a slide.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Table.MergeCells(Spire.Presentation.Cell,Spire.Presentation.Cell)">
            <summary>
            Merges neighbour cells.
            </summary>
            <param name="cell1">Cell to merge.</param>
            <param name="cell2">Cell to merge.</param>
        </member>
        <member name="M:Spire.Presentation.Table.MergeCells(Spire.Presentation.Cell,Spire.Presentation.Cell,System.Boolean)">
            <summary>
            Merges neighbour cells.
            </summary>
            <param name="cell1">Cell to merge.</param>
            <param name="cell2">Cell to merge.</param>
            <param name="allowSplitting">True to allow cells splitting.</param>
        </member>
        <member name="M:Spire.Presentation.Table.SetTableBorder(Spire.Presentation.TableBorderType,System.Double,System.Drawing.Color)">
            <summary>
            Setting up the table border
            </summary>
            <param name="borderType">border type</param>
            <param name="borderWidth">border width.</param>
            <param name="borderColor">border color.</param>
        </member>
        <member name="P:Spire.Presentation.Table.StylePreset">
            <summary>
            Get's or sets builtin table style.
            Read/write <see cref="T:Spire.Presentation.TableStylePreset"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Table.Item(System.Int32,System.Int32)">
            <summary>
            Gets the cell at the specified column and row indexes.
            Read-only <see cref="T:Spire.Presentation.Cell"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Table.TableRows">
            <summary>
            Gets the collectoin of rows.
            Read-only <see cref="T:Spire.Presentation.Collections.TableRowCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Table.ColumnsList">
            <summary>
            Gets the collectoin of columns.
            Read-only <see cref="T:Spire.Presentation.Collections.ColumnCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Table.RightToLeft">
            <summary>
            Indicates whether the table has right to left reading order.
            Read-write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Table.FirstRow">
            <summary>
            Indicates whether the first row of a table has to be drawn with a special formatting.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Table.FirstCol">
            <summary>
            Indicates whether the first column of a table has to be drawn with a special formatting.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Table.LastRow">
            <summary>
            Indicates whether the last row of a table has to be drawn with a special formatting.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Table.LastCol">
            <summary>
            Indicates whether the last column of a table has to be drawn with a special formatting.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Table.HorizontalBanding">
            <summary>
            Indicates whether the even rows has to be drawn with a different formatting.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Table.VerticalBanding">
            <summary>
            Indicates whether the even columns has to be drawn with a different formatting.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.TextCharacterProperties">
            <summary>
            Represents a text rane with formatting.
            </summary>
        </member>
        <member name="M:Spire.Presentation.TextCharacterProperties.#ctor">
            <summary>
            Initializes a new instance of the TextCharacterProperties class.
            </summary>
        </member>
        <member name="M:Spire.Presentation.TextCharacterProperties.#ctor(Spire.Presentation.TextCharacterProperties)">
            <summary>
            Initializes a new instance of the TextCharacterProperties class.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.Format">
            <summary>
            Gets the text range format for this object.
            Read-only <see cref="T:Spire.Presentation.DefaultTextRangeProperties"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.TextLineFormat">
            <summary>
            Gets the LineFormat properties for text outlining.
            Read-only <see cref="P:Spire.Presentation.TextCharacterProperties.TextLineFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.Fill">
            <summary>
            Gets the text FillFormat properties.
            Read-only <see cref="P:Spire.Presentation.TextCharacterProperties.Fill"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.EffectDag">
            <summary>
            Gets the text EffectFormat properties.
            Read-only <see cref="P:Spire.Presentation.TextCharacterProperties.EffectDag"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.HighlightColor">
            <summary>
            Gets the color used to highlight a text.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.UnderlineFormat">
            <summary>
            Gets the LineFormat properties used to outline underline line.
            Read-only <see cref="P:Spire.Presentation.TextCharacterProperties.TextLineFormat"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.UnderlineFillFormat">
            <summary>
            Gets the underline line FillFormat properties.
            Read-only <see cref="P:Spire.Presentation.TextCharacterProperties.Fill"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.BookmarkId">
            <summary>
            Gets or sets bookmark identifier.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.HasClickAction">
            <summary>
            Indicates whether text character properties a  has clickAction.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.ClickAction">
            <summary>
            Gets or sets the hyperlink defined for mouse click.
            Read/write <see cref="T:Spire.Presentation.ClickHyperlink"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.MouseOverAction">
            <summary>
            Gets or sets the hyperlink defined for mouse over.
            Read/write <see cref="T:Spire.Presentation.ClickHyperlink"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.IsBold">
            <summary>
            Indicates whether the font is bold.
            Read/write <see cref="T:Spire.Presentation.TriState"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.IsItalic">
            <summary>
            Indicates whether the font is itallic.
            Read/write <see cref="T:Spire.Presentation.TriState"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.Kumimoji">
            <summary>
            Indicates whether use eastern language-specific vertical text layout.
            Read/write <see cref="T:Spire.Presentation.TriState"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.NormalizeHeights">
            <summary>
            Indicates whether the height of a text should be normalized.
            Read/write <see cref="T:Spire.Presentation.TriState"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.NoProofing">
            <summary>
            Indicates whether the text would be proofed.
            Read/write <see cref="T:Spire.Presentation.TriState"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.TextUnderlineType">
            <summary>
            Gets or sets the text underline type.
            Read/write <see cref="T:Spire.Presentation.TextUnderlineType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.TextCapType">
            <summary>
            Gets or sets the type of text capitalization.
            Read/write <see cref="T:Spire.Presentation.TextCapType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.TextStrikethroughType">
            <summary>
            Gets or sets the strikethrough type of a text.
            Read/write <see cref="T:Spire.Presentation.TextStrikethroughType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.SmartTagClean">
            <summary>
            Indicates whether the smart tag should be cleaned.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.FontHeight">
            <summary>
            Gets or sets the font height of a text range.
            Read/write <see cref="T:System.Int16"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.LatinFont">
            <summary>
            Gets or sets the Latin font info.
            Read/write <see cref="T:Spire.Presentation.TextFont"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.EastAsianFont">
            <summary>
            Gets or sets the East Asian font info.
            Read/write <see cref="T:Spire.Presentation.TextFont"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.ComplexScriptFont">
            <summary>
            Gets or sets the complex script font info.
            Read/write <see cref="T:Spire.Presentation.TextFont"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.SymbolFont">
            <summary>
            Gets or sets the symbolic font info.
            Read/write <see cref="T:Spire.Presentation.TextFont"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.ScriptDistance">
            <summary>
            Gets or sets the superscript or subscript text.
            Read/write <see cref="T:System.Int16"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.FontMinSize">
            <summary>
            Gets or sets the minimal font size.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.Language">
            <summary>
            Gets or sets the  language.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.AlternativeLanguage">
            <summary>
            Gets or sets the alternative language.
            Read/write <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.LineSpacing">
            <summary>
            Gets or sets the line spacing.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.Spire#Presentation#IActiveSlide#Slide">
            <summary>
            Gets the parent slide of a text.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextCharacterProperties.Spire#Presentation#IActivePresentation#Presentation">
            <summary>
            Gets the parent presentation of a text.
            Read-only <see cref="T:Spire.Presentation.PresentationPptx"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.TextFrameProperties">
            <summary>
             Represents a TextFrame.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextFrameProperties.WantedSize">
            <summary>
            Gets the minimal size for a TextFrame, enough to fit the text.
            Note: you can't simply resize the shape or its TextFrame to that size,
            text area of most shapes is not equal to shape's area.
            Read-only <see cref="T:System.Drawing.SizeF"/>
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextFrameProperties.FirstParagraph">
            <summary>
            First paragraph of text frame.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextFrameProperties.Paragraphs">
            <summary>
            Gets the list of all paragraphs in a frame.
            Read-only <see cref="T:Spire.Presentation.Collections.ParagraphCollection"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextFrameProperties.TextInternal">
            <summary>
            This property is same as Text property but without evaluation period limitations        
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextFrameProperties.ColumnCount">
            <summary>
            Gets or sets a number of columns.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextFrameProperties.ColumnSpacing">
            <summary>
            Gets or sets space between text columns in points.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextFrameProperties.Text">
            <summary>
            Gets or sets the plain text for a TextFrame.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:Spire.Presentation.TextFrameProperties.TextRange">
            <summary>
            Gets text range of text frame.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextFrameProperties.TextStyle">
            <summary>
            Gets text's style.
            Readonly <see cref="T:Spire.Presentation.TextStyle"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextFrameProperties.TextThreeD">
            <summary>
            Gets the FormatThreeD object that 3d effect properties for text.
            Read-only <see cref="T:Spire.Presentation.Drawing.FormatThreeD"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextFrameProperties.MarginLeft">
            <summary>
            Gets or sets the left margin (points) in a TextFrame.
            Read/write <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextFrameProperties.MarginRight">
            <summary>
            Gets or sets the right margin (points) in a TextFrame.
            Read/write <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextFrameProperties.MarginTop">
            <summary>
            Gets or sets the top margin (points) in a TextFrame.
            Read/write <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextFrameProperties.MarginBottom">
            <summary>
            Gets or sets the bottom margin (points) in a TextFrame.
            Read/write <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextFrameProperties.WordWrap">
            <summary>
            <b>True</b> if text is wrapped at TextFrame's margins.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextFrameProperties.AnchoringType">
            <summary>
            Gets or sets vertical anchor text in a TextFrame.
            Read/write <see cref="T:Spire.Presentation.TextAnchorType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextFrameProperties.IsCentered">
            <summary>
            Indicates, whether text should be centered in box horizontally.
            Read/write <see cref="T:System.Boolean"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextFrameProperties.VerticalTextType">
            <summary>
            Indicates text orientation.
            Read/write <see cref="P:Spire.Presentation.TextFrameProperties.VerticalTextType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextFrameProperties.AutofitType">
            <summary>
            Gets or sets text's autofit mode.
            Read/write <see cref="T:Spire.Presentation.TextAutofitType"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.TextFrameProperties.Slide">
            <summary>
            Gets the parent slide of a TextFrame.
            Read-only <see cref="T:Spire.Presentation.ActiveSlide"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.TextStyle">
            <summary>
            Summary description for TextStyle.
            </summary>
        </member>
        <member name="M:Spire.Presentation.TextStyle.GetListLevelTextStyle(System.Int32)">
            <summary>
            If level of style exist returns it, otherwise returns null.
            </summary>
            <param name="index">zero-based index of level.</param>
            <returns>Formatting of level <see cref="T:Spire.Presentation.TextParagraphProperties"/>. </returns>
        </member>
        <member name="M:Spire.Presentation.TextStyle.GetOrCreateListLevelTextStyle(System.Int32)">
            <summary>
            If level of style exist returns it, otherwise create and returns it.
            </summary>
            <param name="index">zero-based index of level.</param>
            <returns>Formatting of level <see cref="T:Spire.Presentation.TextParagraphProperties"/>. </returns>
        </member>
        <member name="P:Spire.Presentation.TextStyle.DefaultParagraphStyle">
            <summary>
            Default paragraph propertiies.
            </summary>
        </member>
        <member name="T:Spire.Presentation.MasterTheme">
            <summary>
            Represents a master theme.
            </summary>
        </member>
        <member name="P:Spire.Presentation.MasterTheme.ColorScheme">
            <summary>
            Gets the color scheme.
            Read-only <see cref="T:Spire.Presentation.Drawing.ColorScheme"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.MasterTheme.FontScheme">
            <summary>
            Gets the font scheme.
            Read-only <see cref="T:Spire.Presentation.FontScheme"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.MasterTheme.FormatScheme">
            <summary>
            Gets the shape format scheme.
            Read-only <see cref="T:Spire.Presentation.Drawing.FormatScheme"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.MasterTheme.SlideColorSchemes">
            <summary>
            Gets the collection of additional color schemes.
            These schemes don't affect presentation's look, they can be selected as main color scheme for a slide.
            Read-only <see cref="T:Spire.Presentation.Collections.SlideColorSchemeCollection"/>.
            </summary>
        </member>
        <member name="T:Spire.Presentation.ShapeAdjust">
            <summary>
            Represents a shape's adjustment value.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeAdjust.Value">
            <summary>
            Gets or sets adjustment value.
            Read/write <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="P:Spire.Presentation.ShapeAdjust.Name">
            <summary>
            Gets a name of this adjustment value.
            </summary>
        </member>
        <member name="T:Spire.Presentation.MetaCharacterType">
            <summary>
            Represents different types of meta characters used in a text.
            </summary>
        </member>
        <member name="F:Spire.Presentation.MetaCharacterType.SlideNumer">
            <summary>
            Slide number
            </summary>
        </member>
        <member name="F:Spire.Presentation.MetaCharacterType.DateTime">
            <summary>
            Date/Time
            </summary>
        </member>
        <member name="F:Spire.Presentation.MetaCharacterType.GenericDateTime">
            <summary>
            Generic Date/Time
            </summary>
        </member>
        <member name="F:Spire.Presentation.MetaCharacterType.Footer">
            <summary>
            Footer
            </summary>
        </member>
        <member name="F:Spire.Presentation.MetaCharacterType.Header">
            <summary>
            Header
            </summary>
        </member>
        <member name="F:Spire.Presentation.MetaCharacterType.RtfFormatDateTime">
            <summary>
            Date/Time with specified format string (same format as used in RTF).
            </summary>
        </member>
        <member name="T:Spire.Presentation.Presentation">
            <summary>
            Represents an Presentation document. 
            </summary>
        </member>
        <member name="M:Spire.Presentation.Presentation.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Spire.Presentation.Presentation.#ctor(System.IO.Stream,Spire.Presentation.FileFormat)">
            <summary>
            Constructor
            </summary>
            <param name="stream">file stream</param>
            <param name="fileFormat">file format</param>
        </member>
        <member name="M:Spire.Presentation.Presentation.#ctor(System.String,Spire.Presentation.FileFormat)">
            <summary>
            Constructor
            </summary>
            <param name="file"></param>
        </member>
        <member name="P:Spire.Presentation.Presentation.SaveToPdfOption">
            <summary>
            SaveToPdfOption
            </summary>
        </member>
        <member name="M:Spire.Presentation.Presentation.FindSlide(System.Int32)">
            <summary>
            Find a slide by ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Spire.Presentation.Presentation.GetBytes">
            <summary>
            Converts the document to an array of bytes. 
            </summary>
            <returns>An array of bytes.</returns>
        </member>
        <member name="M:Spire.Presentation.Presentation.GetStream">
            <summary>
            Gets the document as a stream to read from.
            </summary>
            <returns>A <see cref="T:System.IO.Stream" /> to read from.</returns>
        </member>
        <member name="M:Spire.Presentation.Presentation.LoadFromStream(System.IO.Stream,Spire.Presentation.FileFormat)">
            <summary>
            Opens the document from a stream.
            </summary>
            <param name="stream">The document stream.</param>
        </member>
        <member name="M:Spire.Presentation.Presentation.LoadFromFile(System.String)">
            <summary>
            Opens the document from a file.
            </summary>
            <param name="file">The document file path.</param>
        </member>
        <member name="M:Spire.Presentation.Presentation.LoadFromFile(System.String,System.String)">
            <summary>
            Opens the document from a file.
            </summary>
            <param name="file">The document file path.</param>
        </member>
        <member name="M:Spire.Presentation.Presentation.SaveToFile(System.IO.Stream,Spire.Presentation.FileFormat)">
            <summary>
            Saves the document to the specified stream. 
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream" /> where the document will be saved.</param>
        </member>
        <member name="M:Spire.Presentation.Presentation.SaveToSVG">
            <summary>
            Saves the document to the SVG Format. 
            </summary>
        </member>
        <member name="M:Spire.Presentation.Presentation.SaveToFile(System.String,Spire.Presentation.FileFormat)">
            <summary>
            Saves the document to the specified file. 
            </summary>
            <param name="file">A string that contains the path of the file to which to save this document.</param>
        </member>
        <member name="M:Spire.Presentation.Presentation.SaveToHttpResponse(System.String,Spire.Presentation.FileFormat,System.Web.HttpResponse)">
            <summary>
            Save Presation to the http response.
            </summary>
            <param name="FileName">File Name</param>
            <param name="response">Http response</param>
            <param name="saveType">Save type : attachment or inline mode</param>
        </member>
        <member name="M:Spire.Presentation.Presentation.SaveToHttpResponse(System.String,Spire.Presentation.FileFormat,System.Web.HttpResponse,System.Boolean)">
            <summary>
            Save Presation to the http response.
            </summary>
            <param name="FileName">File name</param>
            <param name="response">Http response.</param>
            <param name="isInlineMode">True - inline mode, False - Attachment mode.</param>
        </member>
        <member name="M:Spire.Presentation.Presentation.Encrypt(System.String)">
            <summary>
            Encrypts with specified password.
            </summary>
            <param name="password">The password.</param>
        </member>
        <member name="M:Spire.Presentation.Presentation.RemoveEncryption">
            <summary>
            Removes the encryption.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Presentation.Protect(System.String)">
            <summary>
            Protection for this presentation.
            </summary>
            <param name="password">The password.</param>
        </member>
        <member name="M:Spire.Presentation.Presentation.RemoveProtect">
            <summary>
            Remove proection.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Presentation.Print(System.Drawing.Printing.PrinterSettings)">
            <summary>
            Prints the presentation according to the specified printer settings.
            </summary>
            <param name="printerSettings">Printer settings to use.</param>
        </member>
        <member name="M:Spire.Presentation.Presentation.Print(System.String)">
            <summary>
            Print the whole presentation to the specified printer.
            </summary>
            <param name="Name">The name of the printer.</param>
        </member>
        <member name="P:Spire.Presentation.Presentation.SlideNumberVisible">
            <summary>
            Gets or sets value .Specifies whether the slide number placeholder is enabled for this master
            </summary>
        </member>
        <member name="P:Spire.Presentation.Presentation.DateTimeVisible">
            <summary>
            Gets or sets value .Specifies whether Date-Time placeholder is enabled for this master
            </summary>
        </member>
        <member name="P:Spire.Presentation.Presentation.FooterVisible">
            <summary>
            Gets or sets value .Specifies whether the Footer placeholder is enabled for this master
            </summary>
        </member>
        <member name="P:Spire.Presentation.Presentation.AutoCompressPictures">
            <summary>
            Indicates that Compress Pictures feature automatically reduces the file size of pictures.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Presentation.BookmarkIdSeed">
            <summary>
            Bookmark ID Seed.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Presentation.DefaultTextStyle">
            <summary>
            Default paragraph and list style.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Presentation.ShowNarration">
            <summary>
            Specifies whether slide show narration should be played when presenting
            </summary>
        </member>
        <member name="P:Spire.Presentation.Presentation.ShowAnimation">
            <summary>
            Specifies whether slide show animation should be shown when presenting
            </summary>
        </member>
        <member name="P:Spire.Presentation.Presentation.ShowLoop">
            <summary>
            Specifies whether the slide show should be set to loop at the end
            </summary>
        </member>
        <member name="P:Spire.Presentation.Presentation.HasMacros">
            <summary>
            Specifies whether contains VBA macros.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Presentation.ShowType">
            <summary>
            Specifies the slide show type
            </summary>
        </member>
        <member name="P:Spire.Presentation.Presentation.UseTimings">
            <summary>
            Specifies whether slide transition timing should be used to advance slides when presenting
            </summary>
        </member>
        <member name="P:Spire.Presentation.Presentation.EmbedTrueTypeFonts">
            <summary>
            Indicates whther embeds TrueType fonts in a document when it's saved.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Presentation.FirstSlideNumber">
            <summary>
            Slide number that appears on the first slide in your presentation.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Presentation.HandoutMaster">
            <summary>
            Gets a master for all notes slides of this presentation.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Presentation.NotesMaster">
            <summary>
            Gets a master for all notes slides of this presentation.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Presentation.NotesSlideSize">
            <summary>
            Gets note slide size object.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Presentation.SaveSubsetFonts">
            <summary>
            Indicates whther embeds subset TrueType fonts in a document when it's saved.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Presentation.ServerZoom">
            <summary>
            Specifies a zoom level for visual representations of the document.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Presentation.Masters">
            <summary>
            Gets a list of all master slides.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Presentation.Slides">
            <summary>
            Gets a list of all slides.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Presentation.SlideSize">
            <summary>
            Get slide size.
            </summary>
        </member>
        <member name="M:Spire.Presentation.Presentation.SetPageSize(System.Single,System.Single,System.Boolean)">
            <summary>
            Set page size.
            </summary>
            <param name="w">Width or width ratio</param>
            <param name="h">Height or height ratio</param>
            <param name="IsRation">Is ratio</param>
        </member>
        <member name="P:Spire.Presentation.Presentation.WavAudios">
            <summary>
            Gets the collection of all embedded audio.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Presentation.TagsList">
            <summary>
            Gets the tags collection.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Presentation.Images">
            <summary>
            Gets the collection of all images.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Presentation.DocumentProperty">
            <summary>
            Gets Standard and custom document properties.
            </summary>
        </member>
        <member name="P:Spire.Presentation.Presentation.CommentAuthors">
            <summary>
            Gets CommentAuthor List.
            </summary>
        </member>
        <member name="T:Spire.Presentation.FileFormat">
            <summary>
            Specifies the type of file format.
            </summary>
        </member>
        <member name="T:Spire.Presentation.Order">
            <summary>
            order 
            </summary>
        </member>
        <member name="T:Spire.Presentation.PageSlideCount">
            <summary>
            page  slide count
            </summary>
        </member>
        <member name="T:Spire.Presentation._Presentation">
            <summary>
            Represents an Presentation document. 
            </summary>
        </member>
        <member name="P:Spire.Presentation.PptObject.Parent">
            <summary>
            Reference to Parent object. Read-only.
            </summary>
        </member>
        <member name="M:Spire.Presentation.PptObject.Dispose">
            <summary>
            Dispose object and free resources.
            </summary>
        </member>
        <member name="M:Spire.Presentation.PptObject.OnDispose">
            <summary>
            Method which can be overriden by users to take any specific actions when
            object is disposed.
            </summary>
        </member>
    </members>
</doc>
